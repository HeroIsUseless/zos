     1                                  ORG		0x7c00			
     2 00000000 EB4E                    JMP		entry
     3                                  ; 标准FAT12格式软盘专用的代码 Stand FAT12 format floppy code
     4 00000002 90                      DB		0x90
     5 00000003 48415249424F5445        DB		"HARIBOTE"		; 启动扇区名称（8字节）
     6 0000000B 0002                    DW		512				; 每个扇区（sector）大小（必须512字节）
     7 0000000D 01                      DB		1				; 簇（cluster）大小（必须为1个扇区）
     8 0000000E 0100                    DW		1				; FAT起始位置（一般为第一个扇区）
     9 00000010 02                      DB		2				; FAT个数（必须为2）
    10 00000011 E000                    DW		224				; 根目录大小（一般为224项）
    11 00000013 400B                    DW		2880			; 该磁盘大小（必须为2880扇区1440*1024/512）
    12 00000015 F0                      DB		0xf0			; 磁盘类型（必须为0xf0）
    13 00000016 0900                    DW		9				; FAT的长度（必??9扇区）
    14 00000018 1200                    DW		18				; 一个磁道（track）有几个扇区（必须为18）
    15 0000001A 0200                    DW		2				; 磁头数（必??2）
    16 0000001C 00000000                DD		0				; 不使用分区，必须是0
    17 00000020 400B0000                DD		2880			; 重写一次磁盘大小
    18 00000024 000029                  DB		0,0,0x29		; 意义不明（固定）
    19 00000027 FFFFFFFF                DD		0xffffffff		; （可能是）卷标号码
    20 0000002B 48415249424F54454F-     DB		"HARIBOTEOS "	; 磁盘的名称（必须为11字?，不足填空格）
    20 00000034 5320               
    21 00000036 4641543132202020        DB		"FAT12   "		; 磁盘格式名称（必??8字?，不足填空格）
    22 0000003E 00<rep 12h>             TIMES 18 db 0				; 先空出18字节
    23                                  
    24                                  entry:
    25                                  ; 初始化
    26 00000050 B80000                  		MOV		AX,0			
    27 00000053 8ED0                    		MOV		SS,ax			
    28 00000055 BC007C                  		MOV		SP,0x7c00       
    29 00000058 8ED8                    		MOV		DS,ax		    
    30                                  ; 设置参数
    31 0000005A B82008                  		MOV		AX,0x0820       ; 因为这是16位的，段地址是高一位的
    32 0000005D 8EC0                    		MOV		ES,AX			; 0x200 = 512字节，这里给了ES了把地址
    33 0000005F B500                    		MOV		CH,0			; 柱面0
    34 00000061 B600                    		MOV		DH,0			; 磁头0
    35 00000063 B102                    		MOV		CL,2			; 扇区2
    36                                  
    37                                  readloop:
    38 00000065 BE0000                  		MOV		SI,0			; 记录失败次数寄存器
    39                                  
    40                                  retry:
    41 00000068 B402                    		MOV		AH,0x02			; AH=0x02 : 读入磁盘
    42 0000006A B001                    		MOV		AL,1			; 1个扇区
    43 0000006C BB0000                  		MOV		BX,0
    44 0000006F B200                    		MOV		DL,0x00			; A驱动器，一般就1个驱动器
    45 00000071 CD13                    		INT		0x13			; 调用磁盘BIOS，进行复制
    46 00000073 7310                    		JNC		next			; 没出错则跳转到next，进行剩下的复制
    47 00000075 83C601                  		ADD		SI,1			; 出错了，往SI加1
    48 00000078 83FE05                  		CMP		SI,5			; 比较SI与5
    49 0000007B 7332                    		JAE		error			; SI >= 5 跳转到error
    50 0000007D B400                    		MOV		AH,0x00         ; 否则继续重新尝试，重置寄存器
    51 0000007F B200                    		MOV		DL,0x00			; A驱动器
    52 00000081 CD13                    		INT		0x13			; 这个指令就是重置驱动器
    53 00000083 EBE3                    		JMP		retry           ; 从头开始尝试
    54                                  next:
    55 00000085 8CC0                    		MOV		AX,ES			; 因为没有ADD ES,0x020，只能通过AX进行
    56 00000087 83C020                  		ADD		AX,0x20         ; 加上512字节，应该没错，它就是加20
    57 0000008A 8EC0                    		MOV		ES,AX			; 把内存地址后移0x200（512/16十六进制转换）
    58 0000008C 80C101                  		ADD		CL,1			; 往CL里面加1
    59 0000008F 80F912                  		CMP		CL,18			; 比较CL与18，18个扇面
    60 00000092 76D1                    		JBE		readloop		; CL <= 18 跳转到readloop，继续装载，扇区
    61 00000094 B101                    		MOV		CL,1
    62 00000096 80C601                  		ADD		DH,1
    63 00000099 80FE02                  		CMP		DH,2
    64 0000009C 72C7                    		JB		readloop		; DH < 2 跳转到readloop，DH是磁头数，2个
    65 0000009E B600                    		MOV		DH,0
    66 000000A0 80C501                  		ADD		CH,1
    67 000000A3 80FD0A                  		CMP		CH,10 ; 读80个柱面会出错，因为16位系统只能支配1MB的内存
    68                                  		; 之后最多76,777字节，而总字节数有36,330,000
    69 000000A6 72BD                    		JB		readloop		; CH < CYLS 跳转到readloop
    70                                  
    71                                  ; 读取完毕，跳转到boot执行
    72 000000A8 882EF00F                		MOV		[0x0ff0],CH		;1 记下IPL读到哪里了
    73                                  		;jmp success
    74                                  		;call fin
    75 000000AC E9(0082)                		JMP		0x8200
    76                                  
    77                                  ; 下面是出错显示部分
    78                                  error:
    79 000000AF BE[CE00]                		MOV		SI,error_msg
    80 000000B2 EB05                    		JMP putloop
    81                                  		
    82                                  success: 
    83 000000B4 BE[DC00]                		mov si, success_msg
    84 000000B7 EB00                    		jmp putloop
    85                                  
    86                                  putloop:
    87 000000B9 8A04                    		MOV		AL,[SI]
    88 000000BB 83C601                  		ADD		SI,1			; 给SI加1
    89 000000BE 3C00                    		CMP		AL,0
    90 000000C0 7409                    		JE		fin
    91 000000C2 B40E                    		MOV		AH,0x0e			; 显示一个文字
    92 000000C4 BB0F00                  		MOV		BX,15			; 指定字符颜色
    93 000000C7 CD10                    		INT		0x10			; 调用显卡BIOS
    94 000000C9 EBEE                    		JMP		putloop
    95                                  
    96                                  fin:
    97 000000CB F4                      		HLT						; 让CPU停止，等待指令
    98 000000CC EBFD                    		JMP		fin				; 无限循环
    99                                  
   100                                  error_msg:
   101 000000CE 0A0A                    		DB		0x0a, 0x0a		; 换行两次
   102 000000D0 6C6F6164206572726F-     		DB		"load error"
   102 000000D9 72                 
   103 000000DA 0A                      		DB		0x0a			; 换行
   104 000000DB 00                      		DB		0
   105                                  		
   106                                  success_msg:
   107 000000DC 0A0A                    		DB		0x0a, 0x0a		; 换行两次
   108 000000DE 73756363657373          		DB		"success"
   109 000000E5 0A                      		DB		0x0a			; 换行
   110 000000E6 00                      		DB		0
