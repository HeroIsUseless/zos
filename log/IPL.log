     1                                  ORG		0x7c00	
     2                                  ; 内存map
     3                                  ; 0x7c00~0x7e00 ipl
     4                                  ; 0x7e00~0x8000 ipl, boot stack
     5                                  ; 0x8000~0x8200 boot		
     6 00000000 EB4E                    JMP		entry
     7                                  ; 标准FAT12格式软盘专用的代码 Stand FAT12 format floppy code
     8 00000002 90                      DB		0x90
     9 00000003 48415249424F5445        DB		"HARIBOTE"		; 启动扇区名称（8字节）
    10 0000000B 0002                    DW		512						; 每个扇区（sector）大小（必须512字节）
    11 0000000D 01                      DB		1							; 簇（cluster）大小（必须为1个扇区）
    12 0000000E 0100                    DW		1							; FAT起始位置（一般为第一个扇区）
    13 00000010 02                      DB		2							; FAT个数（必须为2）
    14 00000011 E000                    DW		224						; 根目录大小（一般为224项）
    15 00000013 400B                    DW		2880					; 该磁盘大小（必须为2880扇区1440*1024/512）
    16 00000015 F0                      DB		0xf0					; 磁盘类型（必须为0xf0）
    17 00000016 0900                    DW		9							; FAT的长度（必??9扇区）
    18 00000018 1200                    DW		18						; 一个磁道（track）有几个扇区（必须为18）
    19 0000001A 0200                    DW		2							; 磁头数（必??2）
    20 0000001C 00000000                DD		0							; 不使用分区，必须是0
    21 00000020 400B0000                DD		2880					; 重写一次磁盘大小
    22 00000024 000029                  DB		0,0,0x29			; 意义不明（固定）
    23 00000027 FFFFFFFF                DD		0xffffffff		; （可能是）卷标号码
    24 0000002B 48415249424F54454F-     DB		"HARIBOTEOS "	; 磁盘的名称（必须为11字?，不足填空格）
    24 00000034 5320               
    25 00000036 4641543132202020        DB		"FAT12   "		; 磁盘格式名称（必??8字?，不足填空格）
    26 0000003E 00<rep 12h>             TIMES 18 db 0				; 先空出18字节
    27                                  
    28                                  entry:
    29                                  		; 初始化
    30 00000050 B80000                  		MOV		AX,0			
    31 00000053 8ED0                    		MOV		SS,ax			
    32 00000055 BC007C                  		MOV		SP,0x7c00       
    33 00000058 8ED8                    		MOV		DS,ax		    
    34                                  		; 设置参数
    35 0000005A B82008                  		MOV		AX,0x0820
    36 0000005D 8EC0                    		MOV		ES,AX			; 内存基址
    37 0000005F B500                    		MOV		CH,0			; 柱面0
    38 00000061 B600                    		MOV		DH,0			; 磁头0
    39 00000063 B102                    		MOV		CL,2			; 扇区2
    40                                  
    41                                  readloop:
    42 00000065 BE0000                  		MOV		SI,0			; 记录失败次数寄存器
    43                                  retry:
    44 00000068 B402                    		MOV		AH,0x02		; 读入磁盘
    45 0000006A B001                    		MOV		AL,1			; 1个扇区
    46 0000006C BB0000                  		MOV		BX,0
    47 0000006F B200                    		MOV		DL,0x00		; A驱动器，一般就1个驱动器
    48 00000071 CD13                    		INT		0x13			; 调用磁盘BIOS，进行复制
    49 00000073 7310                    		JNC		next			; 没出错则跳转到next，进行剩下的复制
    50 00000075 83C601                  		ADD		SI,1			; 出错了，往SI加1
    51 00000078 83FE05                  		CMP		SI,5			; 比较SI与5
    52 0000007B 732E                    		JAE		error			; SI >= 5 跳转到error
    53 0000007D B400                    		MOV		AH,0x00   ; 否则继续重新尝试，重置寄存器
    54 0000007F B200                    		MOV		DL,0x00		; A驱动器
    55 00000081 CD13                    		INT		0x13			; 重置驱动器
    56 00000083 EBE3                    		JMP		retry     ; 从头开始尝试
    57                                  next:
    58 00000085 8CC0                    		MOV		AX,ES
    59 00000087 83C020                  		ADD		AX,0x20
    60 0000008A 8EC0                    		MOV		ES,AX			; 把内存地址后移0x200（512/16十六进制转换）
    61 0000008C 80C101                  		ADD		CL,1			; 往CL里面加1
    62 0000008F 80F912                  		CMP		CL,18			; 比较CL与18，18个扇面
    63 00000092 76D1                    		JBE		readloop	; CL <= 18 跳转到readloop，继续装载，扇区
    64 00000094 B101                    		MOV		CL,1
    65 00000096 80C601                  		ADD		DH,1
    66 00000099 80FE02                  		CMP		DH,2
    67 0000009C 72C7                    		JB		readloop	; DH < 2 跳转到readloop，DH是磁头数，2个
    68 0000009E B600                    		MOV		DH,0
    69 000000A0 80C501                  		ADD		CH,1
    70 000000A3 80FD27                  		CMP		CH,39 		; 读80个柱面会出错，因为16位系统只能支配1MB的内存
    71 000000A6 72BD                    		JB		readloop
    72                                  
    73                                  		; 读取完毕，跳转到boot执行
    74 000000A8 E9(0082)                		JMP		0x8200
    75                                  
    76                                  ; 出错显示部分
    77                                  error:
    78 000000AB BE[CA00]                		MOV		SI,error_msg
    79 000000AE EB05                    		JMP putloop
    80                                  		
    81                                  success: 
    82 000000B0 BE[D800]                		mov si, success_msg
    83 000000B3 EB00                    		jmp putloop
    84                                  
    85                                  putloop:
    86 000000B5 8A04                    		MOV		AL,[SI]
    87 000000B7 83C601                  		ADD		SI,1			; 给SI加1
    88 000000BA 3C00                    		CMP		AL,0
    89 000000BC 7409                    		JE		fin
    90 000000BE B40E                    		MOV		AH,0x0e		; 显示一个文字
    91 000000C0 BB0F00                  		MOV		BX,15			; 指定字符颜色
    92 000000C3 CD10                    		INT		0x10			; 调用显卡BIOS
    93 000000C5 EBEE                    		JMP		putloop
    94                                  
    95                                  fin:
    96 000000C7 F4                      		HLT						  ; 让CPU停止，等待指令
    97 000000C8 EBFD                    		JMP		fin				; 无限循环
    98                                  
    99                                  error_msg:
   100 000000CA 0A0A                    		DB		0x0a, 0x0a		; 换行两次
   101 000000CC 6C6F6164206572726F-     		DB		"load error"
   101 000000D5 72                 
   102 000000D6 0A                      		DB		0x0a			    ; 换行
   103 000000D7 00                      		DB		0
   104                                  		
   105                                  success_msg:
   106 000000D8 0A0A                    		DB		0x0a, 0x0a		; 换行两次
   107 000000DA 6C6F61642073756363-     		DB		"load success"
   107 000000E3 657373             
   108 000000E6 0A                      		DB		0x0a			    ; 换行
   109 000000E7 00                      		DB		0
   110                                  		
   111 000000E8 00<rep 116h>            times    510-($-$$) db 0 
   112 000001FE 55AA                    DB		0x55, 0xaa
