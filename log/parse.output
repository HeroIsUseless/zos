Terminals which are not used

   EOL


State 2 conflicts: 1 shift/reduce
State 3 conflicts: 1 shift/reduce
State 103 conflicts: 1 shift/reduce
State 105 conflicts: 1 shift/reduce


Grammar

    0 $accept: stmts $end

    1 stmts: /* empty */
    2      | stmt ';' stmts

    3 stmt: def
    4     | exec
    5     | exp
    6     | '(' stmts ')'

    7 def: def_var
    8    | def_arr
    9    | def_fun

   10 def_var: VAR ':' exp
   11        | VAR ':' PATH
   12        | VAR ':' STRING

   13 @1: /* empty */

   14 def_arr: VAR ':' '{' @1 items '}'

   15 items: items ',' INTEGER
   16      | INTEGER
   17      | /* empty */

   18 @2: /* empty */

   19 def_fun: VAR params ':' @2 '(' stmts ')'

   20 params: '(' ')'
   21       | '(' params_def ')'
   22       | '(' params_exec ')'

   23 params_def: param_def
   24           | param_def ',' params_def

   25 param_def: VAR ':' INTEGER

   26 params_exec: param_exec
   27            | param_exec ',' params_exec

   28 param_exec: exp

   29 exec: VAR '<' '=' exp
   30     | PREFIXES_VAR '<' '=' exp
   31     | VAR '\\' '(' exp ')' '<' '=' exp
   32     | PREFIXES_VAR '\\' '(' exp ')' '<' '=' exp
   33     | VAR params
   34     | PREFIXES_VAR params
   35     | if_head ',' stmt ')'
   36     | if_head ')'

   37 @3: /* empty */

   38 @4: /* empty */

   39 exec: WHILE @3 '(' exp ',' @4 stmt ')'

   40 @5: /* empty */

   41 @6: /* empty */

   42 if_head: IF @5 '(' exp @6 ',' stmt

   43 exp: factor
   44    | exp '+' factor
   45    | exp '-' factor
   46    | exp '<' factor
   47    | exp '>' factor
   48    | exp LEQ factor
   49    | exp MEQ factor
   50    | exp '=' factor
   51    | exp '#' factor

   52 factor: term
   53       | factor '*' term
   54       | factor '/' term

   55 term: INTEGER
   56     | VAR
   57     | PREFIXES_VAR
   58     | '@' VAR
   59     | '@' PREFIXES_VAR
   60     | VAR '\\' '(' exp ')'
   61     | PREFIXES_VAR '\\' '(' exp ')'


Terminals, with rules where they appear

$end (0) 0
'#' (35) 51
'(' (40) 6 19 20 21 22 31 32 39 42 60 61
')' (41) 6 19 20 21 22 31 32 35 36 39 60 61
'*' (42) 53
'+' (43) 44
',' (44) 15 24 27 35 39 42
'-' (45) 45
'/' (47) 54
':' (58) 10 11 12 14 19 25
';' (59) 2
'<' (60) 29 30 31 32 46
'=' (61) 29 30 31 32 50
'>' (62) 47
'@' (64) 58 59
'\\' (92) 31 32 60 61
'{' (123) 14
'}' (125) 14
error (256)
MEQ (258) 49
LEQ (259) 48
INTEGER (260) 15 16 25 55
STRING (261) 12
VAR (262) 10 11 12 14 19 25 29 31 33 56 58 60
PATH (263) 11
PREFIXES_VAR (264) 30 32 34 57 59 61
IF (265) 42
WHILE (266) 39
EOL (267)


Nonterminals, with rules where they appear

$accept (30)
    on left: 0
stmts (31)
    on left: 1 2, on right: 0 2 6 19
stmt (32)
    on left: 3 4 5 6, on right: 2 35 39 42
def (33)
    on left: 7 8 9, on right: 3
def_var (34)
    on left: 10 11 12, on right: 7
def_arr (35)
    on left: 14, on right: 8
@1 (36)
    on left: 13, on right: 14
items (37)
    on left: 15 16 17, on right: 14 15
def_fun (38)
    on left: 19, on right: 9
@2 (39)
    on left: 18, on right: 19
params (40)
    on left: 20 21 22, on right: 19 33 34
params_def (41)
    on left: 23 24, on right: 21 24
param_def (42)
    on left: 25, on right: 23 24
params_exec (43)
    on left: 26 27, on right: 22 27
param_exec (44)
    on left: 28, on right: 26 27
exec (45)
    on left: 29 30 31 32 33 34 35 36 39, on right: 4
@3 (46)
    on left: 37, on right: 39
@4 (47)
    on left: 38, on right: 39
if_head (48)
    on left: 42, on right: 35 36
@5 (49)
    on left: 40, on right: 42
@6 (50)
    on left: 41, on right: 42
exp (51)
    on left: 43 44 45 46 47 48 49 50 51, on right: 5 10 28 29 30 31
    32 39 42 44 45 46 47 48 49 50 51 60 61
factor (52)
    on left: 52 53 54, on right: 43 44 45 46 47 48 49 50 51 53 54
term (53)
    on left: 55 56 57 58 59 60 61, on right: 52 53 54


state 0

    0 $accept: . stmts $end

    INTEGER       shift, and go to state 1
    VAR           shift, and go to state 2
    PREFIXES_VAR  shift, and go to state 3
    IF            shift, and go to state 4
    WHILE         shift, and go to state 5
    '('           shift, and go to state 6
    '@'           shift, and go to state 7

    $default  reduce using rule 1 (stmts)

    stmts    go to state 8
    stmt     go to state 9
    def      go to state 10
    def_var  go to state 11
    def_arr  go to state 12
    def_fun  go to state 13
    exec     go to state 14
    if_head  go to state 15
    exp      go to state 16
    factor   go to state 17
    term     go to state 18


state 1

   55 term: INTEGER .

    $default  reduce using rule 55 (term)


state 2

   10 def_var: VAR . ':' exp
   11        | VAR . ':' PATH
   12        | VAR . ':' STRING
   14 def_arr: VAR . ':' '{' @1 items '}'
   19 def_fun: VAR . params ':' @2 '(' stmts ')'
   29 exec: VAR . '<' '=' exp
   31     | VAR . '\\' '(' exp ')' '<' '=' exp
   33     | VAR . params
   56 term: VAR .
   60     | VAR . '\\' '(' exp ')'

    '<'   shift, and go to state 19
    '('   shift, and go to state 20
    ':'   shift, and go to state 21
    '\\'  shift, and go to state 22

    '<'       [reduce using rule 56 (term)]
    $default  reduce using rule 56 (term)

    params  go to state 23


state 3

   30 exec: PREFIXES_VAR . '<' '=' exp
   32     | PREFIXES_VAR . '\\' '(' exp ')' '<' '=' exp
   34     | PREFIXES_VAR . params
   57 term: PREFIXES_VAR .
   61     | PREFIXES_VAR . '\\' '(' exp ')'

    '<'   shift, and go to state 24
    '('   shift, and go to state 20
    '\\'  shift, and go to state 25

    '<'       [reduce using rule 57 (term)]
    $default  reduce using rule 57 (term)

    params  go to state 26


state 4

   42 if_head: IF . @5 '(' exp @6 ',' stmt

    $default  reduce using rule 40 (@5)

    @5  go to state 27


state 5

   39 exec: WHILE . @3 '(' exp ',' @4 stmt ')'

    $default  reduce using rule 37 (@3)

    @3  go to state 28


state 6

    6 stmt: '(' . stmts ')'

    INTEGER       shift, and go to state 1
    VAR           shift, and go to state 2
    PREFIXES_VAR  shift, and go to state 3
    IF            shift, and go to state 4
    WHILE         shift, and go to state 5
    '('           shift, and go to state 6
    '@'           shift, and go to state 7

    $default  reduce using rule 1 (stmts)

    stmts    go to state 29
    stmt     go to state 9
    def      go to state 10
    def_var  go to state 11
    def_arr  go to state 12
    def_fun  go to state 13
    exec     go to state 14
    if_head  go to state 15
    exp      go to state 16
    factor   go to state 17
    term     go to state 18


state 7

   58 term: '@' . VAR
   59     | '@' . PREFIXES_VAR

    VAR           shift, and go to state 30
    PREFIXES_VAR  shift, and go to state 31


state 8

    0 $accept: stmts . $end

    $end  shift, and go to state 32


state 9

    2 stmts: stmt . ';' stmts

    ';'  shift, and go to state 33


state 10

    3 stmt: def .

    $default  reduce using rule 3 (stmt)


state 11

    7 def: def_var .

    $default  reduce using rule 7 (def)


state 12

    8 def: def_arr .

    $default  reduce using rule 8 (def)


state 13

    9 def: def_fun .

    $default  reduce using rule 9 (def)


state 14

    4 stmt: exec .

    $default  reduce using rule 4 (stmt)


state 15

   35 exec: if_head . ',' stmt ')'
   36     | if_head . ')'

    ')'  shift, and go to state 34
    ','  shift, and go to state 35


state 16

    5 stmt: exp .
   44 exp: exp . '+' factor
   45    | exp . '-' factor
   46    | exp . '<' factor
   47    | exp . '>' factor
   48    | exp . LEQ factor
   49    | exp . MEQ factor
   50    | exp . '=' factor
   51    | exp . '#' factor

    '<'  shift, and go to state 36
    '>'  shift, and go to state 37
    '='  shift, and go to state 38
    '#'  shift, and go to state 39
    MEQ  shift, and go to state 40
    LEQ  shift, and go to state 41
    '+'  shift, and go to state 42
    '-'  shift, and go to state 43

    $default  reduce using rule 5 (stmt)


state 17

   43 exp: factor .
   53 factor: factor . '*' term
   54       | factor . '/' term

    '*'  shift, and go to state 44
    '/'  shift, and go to state 45

    $default  reduce using rule 43 (exp)


state 18

   52 factor: term .

    $default  reduce using rule 52 (factor)


state 19

   29 exec: VAR '<' . '=' exp

    '='  shift, and go to state 46


state 20

   20 params: '(' . ')'
   21       | '(' . params_def ')'
   22       | '(' . params_exec ')'

    INTEGER       shift, and go to state 1
    VAR           shift, and go to state 47
    PREFIXES_VAR  shift, and go to state 48
    ')'           shift, and go to state 49
    '@'           shift, and go to state 7

    params_def   go to state 50
    param_def    go to state 51
    params_exec  go to state 52
    param_exec   go to state 53
    exp          go to state 54
    factor       go to state 17
    term         go to state 18


state 21

   10 def_var: VAR ':' . exp
   11        | VAR ':' . PATH
   12        | VAR ':' . STRING
   14 def_arr: VAR ':' . '{' @1 items '}'

    INTEGER       shift, and go to state 1
    STRING        shift, and go to state 55
    VAR           shift, and go to state 56
    PATH          shift, and go to state 57
    PREFIXES_VAR  shift, and go to state 48
    '{'           shift, and go to state 58
    '@'           shift, and go to state 7

    exp     go to state 59
    factor  go to state 17
    term    go to state 18


state 22

   31 exec: VAR '\\' . '(' exp ')' '<' '=' exp
   60 term: VAR '\\' . '(' exp ')'

    '('  shift, and go to state 60


state 23

   19 def_fun: VAR params . ':' @2 '(' stmts ')'
   33 exec: VAR params .

    ':'  shift, and go to state 61

    $default  reduce using rule 33 (exec)


state 24

   30 exec: PREFIXES_VAR '<' . '=' exp

    '='  shift, and go to state 62


state 25

   32 exec: PREFIXES_VAR '\\' . '(' exp ')' '<' '=' exp
   61 term: PREFIXES_VAR '\\' . '(' exp ')'

    '('  shift, and go to state 63


state 26

   34 exec: PREFIXES_VAR params .

    $default  reduce using rule 34 (exec)


state 27

   42 if_head: IF @5 . '(' exp @6 ',' stmt

    '('  shift, and go to state 64


state 28

   39 exec: WHILE @3 . '(' exp ',' @4 stmt ')'

    '('  shift, and go to state 65


state 29

    6 stmt: '(' stmts . ')'

    ')'  shift, and go to state 66


state 30

   58 term: '@' VAR .

    $default  reduce using rule 58 (term)


state 31

   59 term: '@' PREFIXES_VAR .

    $default  reduce using rule 59 (term)


state 32

    0 $accept: stmts $end .

    $default  accept


state 33

    2 stmts: stmt ';' . stmts

    INTEGER       shift, and go to state 1
    VAR           shift, and go to state 2
    PREFIXES_VAR  shift, and go to state 3
    IF            shift, and go to state 4
    WHILE         shift, and go to state 5
    '('           shift, and go to state 6
    '@'           shift, and go to state 7

    $default  reduce using rule 1 (stmts)

    stmts    go to state 67
    stmt     go to state 9
    def      go to state 10
    def_var  go to state 11
    def_arr  go to state 12
    def_fun  go to state 13
    exec     go to state 14
    if_head  go to state 15
    exp      go to state 16
    factor   go to state 17
    term     go to state 18


state 34

   36 exec: if_head ')' .

    $default  reduce using rule 36 (exec)


state 35

   35 exec: if_head ',' . stmt ')'

    INTEGER       shift, and go to state 1
    VAR           shift, and go to state 2
    PREFIXES_VAR  shift, and go to state 3
    IF            shift, and go to state 4
    WHILE         shift, and go to state 5
    '('           shift, and go to state 6
    '@'           shift, and go to state 7

    stmt     go to state 68
    def      go to state 10
    def_var  go to state 11
    def_arr  go to state 12
    def_fun  go to state 13
    exec     go to state 14
    if_head  go to state 15
    exp      go to state 16
    factor   go to state 17
    term     go to state 18


state 36

   46 exp: exp '<' . factor

    INTEGER       shift, and go to state 1
    VAR           shift, and go to state 56
    PREFIXES_VAR  shift, and go to state 48
    '@'           shift, and go to state 7

    factor  go to state 69
    term    go to state 18


state 37

   47 exp: exp '>' . factor

    INTEGER       shift, and go to state 1
    VAR           shift, and go to state 56
    PREFIXES_VAR  shift, and go to state 48
    '@'           shift, and go to state 7

    factor  go to state 70
    term    go to state 18


state 38

   50 exp: exp '=' . factor

    INTEGER       shift, and go to state 1
    VAR           shift, and go to state 56
    PREFIXES_VAR  shift, and go to state 48
    '@'           shift, and go to state 7

    factor  go to state 71
    term    go to state 18


state 39

   51 exp: exp '#' . factor

    INTEGER       shift, and go to state 1
    VAR           shift, and go to state 56
    PREFIXES_VAR  shift, and go to state 48
    '@'           shift, and go to state 7

    factor  go to state 72
    term    go to state 18


state 40

   49 exp: exp MEQ . factor

    INTEGER       shift, and go to state 1
    VAR           shift, and go to state 56
    PREFIXES_VAR  shift, and go to state 48
    '@'           shift, and go to state 7

    factor  go to state 73
    term    go to state 18


state 41

   48 exp: exp LEQ . factor

    INTEGER       shift, and go to state 1
    VAR           shift, and go to state 56
    PREFIXES_VAR  shift, and go to state 48
    '@'           shift, and go to state 7

    factor  go to state 74
    term    go to state 18


state 42

   44 exp: exp '+' . factor

    INTEGER       shift, and go to state 1
    VAR           shift, and go to state 56
    PREFIXES_VAR  shift, and go to state 48
    '@'           shift, and go to state 7

    factor  go to state 75
    term    go to state 18


state 43

   45 exp: exp '-' . factor

    INTEGER       shift, and go to state 1
    VAR           shift, and go to state 56
    PREFIXES_VAR  shift, and go to state 48
    '@'           shift, and go to state 7

    factor  go to state 76
    term    go to state 18


state 44

   53 factor: factor '*' . term

    INTEGER       shift, and go to state 1
    VAR           shift, and go to state 56
    PREFIXES_VAR  shift, and go to state 48
    '@'           shift, and go to state 7

    term  go to state 77


state 45

   54 factor: factor '/' . term

    INTEGER       shift, and go to state 1
    VAR           shift, and go to state 56
    PREFIXES_VAR  shift, and go to state 48
    '@'           shift, and go to state 7

    term  go to state 78


state 46

   29 exec: VAR '<' '=' . exp

    INTEGER       shift, and go to state 1
    VAR           shift, and go to state 56
    PREFIXES_VAR  shift, and go to state 48
    '@'           shift, and go to state 7

    exp     go to state 79
    factor  go to state 17
    term    go to state 18


state 47

   25 param_def: VAR . ':' INTEGER
   56 term: VAR .
   60     | VAR . '\\' '(' exp ')'

    ':'   shift, and go to state 80
    '\\'  shift, and go to state 81

    $default  reduce using rule 56 (term)


state 48

   57 term: PREFIXES_VAR .
   61     | PREFIXES_VAR . '\\' '(' exp ')'

    '\\'  shift, and go to state 82

    $default  reduce using rule 57 (term)


state 49

   20 params: '(' ')' .

    $default  reduce using rule 20 (params)


state 50

   21 params: '(' params_def . ')'

    ')'  shift, and go to state 83


state 51

   23 params_def: param_def .
   24           | param_def . ',' params_def

    ','  shift, and go to state 84

    $default  reduce using rule 23 (params_def)


state 52

   22 params: '(' params_exec . ')'

    ')'  shift, and go to state 85


state 53

   26 params_exec: param_exec .
   27            | param_exec . ',' params_exec

    ','  shift, and go to state 86

    $default  reduce using rule 26 (params_exec)


state 54

   28 param_exec: exp .
   44 exp: exp . '+' factor
   45    | exp . '-' factor
   46    | exp . '<' factor
   47    | exp . '>' factor
   48    | exp . LEQ factor
   49    | exp . MEQ factor
   50    | exp . '=' factor
   51    | exp . '#' factor

    '<'  shift, and go to state 36
    '>'  shift, and go to state 37
    '='  shift, and go to state 38
    '#'  shift, and go to state 39
    MEQ  shift, and go to state 40
    LEQ  shift, and go to state 41
    '+'  shift, and go to state 42
    '-'  shift, and go to state 43

    $default  reduce using rule 28 (param_exec)


state 55

   12 def_var: VAR ':' STRING .

    $default  reduce using rule 12 (def_var)


state 56

   56 term: VAR .
   60     | VAR . '\\' '(' exp ')'

    '\\'  shift, and go to state 81

    $default  reduce using rule 56 (term)


state 57

   11 def_var: VAR ':' PATH .

    $default  reduce using rule 11 (def_var)


state 58

   14 def_arr: VAR ':' '{' . @1 items '}'

    $default  reduce using rule 13 (@1)

    @1  go to state 87


state 59

   10 def_var: VAR ':' exp .
   44 exp: exp . '+' factor
   45    | exp . '-' factor
   46    | exp . '<' factor
   47    | exp . '>' factor
   48    | exp . LEQ factor
   49    | exp . MEQ factor
   50    | exp . '=' factor
   51    | exp . '#' factor

    '<'  shift, and go to state 36
    '>'  shift, and go to state 37
    '='  shift, and go to state 38
    '#'  shift, and go to state 39
    MEQ  shift, and go to state 40
    LEQ  shift, and go to state 41
    '+'  shift, and go to state 42
    '-'  shift, and go to state 43

    $default  reduce using rule 10 (def_var)


state 60

   31 exec: VAR '\\' '(' . exp ')' '<' '=' exp
   60 term: VAR '\\' '(' . exp ')'

    INTEGER       shift, and go to state 1
    VAR           shift, and go to state 56
    PREFIXES_VAR  shift, and go to state 48
    '@'           shift, and go to state 7

    exp     go to state 88
    factor  go to state 17
    term    go to state 18


state 61

   19 def_fun: VAR params ':' . @2 '(' stmts ')'

    $default  reduce using rule 18 (@2)

    @2  go to state 89


state 62

   30 exec: PREFIXES_VAR '<' '=' . exp

    INTEGER       shift, and go to state 1
    VAR           shift, and go to state 56
    PREFIXES_VAR  shift, and go to state 48
    '@'           shift, and go to state 7

    exp     go to state 90
    factor  go to state 17
    term    go to state 18


state 63

   32 exec: PREFIXES_VAR '\\' '(' . exp ')' '<' '=' exp
   61 term: PREFIXES_VAR '\\' '(' . exp ')'

    INTEGER       shift, and go to state 1
    VAR           shift, and go to state 56
    PREFIXES_VAR  shift, and go to state 48
    '@'           shift, and go to state 7

    exp     go to state 91
    factor  go to state 17
    term    go to state 18


state 64

   42 if_head: IF @5 '(' . exp @6 ',' stmt

    INTEGER       shift, and go to state 1
    VAR           shift, and go to state 56
    PREFIXES_VAR  shift, and go to state 48
    '@'           shift, and go to state 7

    exp     go to state 92
    factor  go to state 17
    term    go to state 18


state 65

   39 exec: WHILE @3 '(' . exp ',' @4 stmt ')'

    INTEGER       shift, and go to state 1
    VAR           shift, and go to state 56
    PREFIXES_VAR  shift, and go to state 48
    '@'           shift, and go to state 7

    exp     go to state 93
    factor  go to state 17
    term    go to state 18


state 66

    6 stmt: '(' stmts ')' .

    $default  reduce using rule 6 (stmt)


state 67

    2 stmts: stmt ';' stmts .

    $default  reduce using rule 2 (stmts)


state 68

   35 exec: if_head ',' stmt . ')'

    ')'  shift, and go to state 94


state 69

   46 exp: exp '<' factor .
   53 factor: factor . '*' term
   54       | factor . '/' term

    '*'  shift, and go to state 44
    '/'  shift, and go to state 45

    $default  reduce using rule 46 (exp)


state 70

   47 exp: exp '>' factor .
   53 factor: factor . '*' term
   54       | factor . '/' term

    '*'  shift, and go to state 44
    '/'  shift, and go to state 45

    $default  reduce using rule 47 (exp)


state 71

   50 exp: exp '=' factor .
   53 factor: factor . '*' term
   54       | factor . '/' term

    '*'  shift, and go to state 44
    '/'  shift, and go to state 45

    $default  reduce using rule 50 (exp)


state 72

   51 exp: exp '#' factor .
   53 factor: factor . '*' term
   54       | factor . '/' term

    '*'  shift, and go to state 44
    '/'  shift, and go to state 45

    $default  reduce using rule 51 (exp)


state 73

   49 exp: exp MEQ factor .
   53 factor: factor . '*' term
   54       | factor . '/' term

    '*'  shift, and go to state 44
    '/'  shift, and go to state 45

    $default  reduce using rule 49 (exp)


state 74

   48 exp: exp LEQ factor .
   53 factor: factor . '*' term
   54       | factor . '/' term

    '*'  shift, and go to state 44
    '/'  shift, and go to state 45

    $default  reduce using rule 48 (exp)


state 75

   44 exp: exp '+' factor .
   53 factor: factor . '*' term
   54       | factor . '/' term

    '*'  shift, and go to state 44
    '/'  shift, and go to state 45

    $default  reduce using rule 44 (exp)


state 76

   45 exp: exp '-' factor .
   53 factor: factor . '*' term
   54       | factor . '/' term

    '*'  shift, and go to state 44
    '/'  shift, and go to state 45

    $default  reduce using rule 45 (exp)


state 77

   53 factor: factor '*' term .

    $default  reduce using rule 53 (factor)


state 78

   54 factor: factor '/' term .

    $default  reduce using rule 54 (factor)


state 79

   29 exec: VAR '<' '=' exp .
   44 exp: exp . '+' factor
   45    | exp . '-' factor
   46    | exp . '<' factor
   47    | exp . '>' factor
   48    | exp . LEQ factor
   49    | exp . MEQ factor
   50    | exp . '=' factor
   51    | exp . '#' factor

    '<'  shift, and go to state 36
    '>'  shift, and go to state 37
    '='  shift, and go to state 38
    '#'  shift, and go to state 39
    MEQ  shift, and go to state 40
    LEQ  shift, and go to state 41
    '+'  shift, and go to state 42
    '-'  shift, and go to state 43

    $default  reduce using rule 29 (exec)


state 80

   25 param_def: VAR ':' . INTEGER

    INTEGER  shift, and go to state 95


state 81

   60 term: VAR '\\' . '(' exp ')'

    '('  shift, and go to state 96


state 82

   61 term: PREFIXES_VAR '\\' . '(' exp ')'

    '('  shift, and go to state 97


state 83

   21 params: '(' params_def ')' .

    $default  reduce using rule 21 (params)


state 84

   24 params_def: param_def ',' . params_def

    VAR  shift, and go to state 98

    params_def  go to state 99
    param_def   go to state 51


state 85

   22 params: '(' params_exec ')' .

    $default  reduce using rule 22 (params)


state 86

   27 params_exec: param_exec ',' . params_exec

    INTEGER       shift, and go to state 1
    VAR           shift, and go to state 56
    PREFIXES_VAR  shift, and go to state 48
    '@'           shift, and go to state 7

    params_exec  go to state 100
    param_exec   go to state 53
    exp          go to state 54
    factor       go to state 17
    term         go to state 18


state 87

   14 def_arr: VAR ':' '{' @1 . items '}'

    INTEGER  shift, and go to state 101

    $default  reduce using rule 17 (items)

    items  go to state 102


state 88

   31 exec: VAR '\\' '(' exp . ')' '<' '=' exp
   44 exp: exp . '+' factor
   45    | exp . '-' factor
   46    | exp . '<' factor
   47    | exp . '>' factor
   48    | exp . LEQ factor
   49    | exp . MEQ factor
   50    | exp . '=' factor
   51    | exp . '#' factor
   60 term: VAR '\\' '(' exp . ')'

    '<'  shift, and go to state 36
    '>'  shift, and go to state 37
    '='  shift, and go to state 38
    '#'  shift, and go to state 39
    MEQ  shift, and go to state 40
    LEQ  shift, and go to state 41
    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    ')'  shift, and go to state 103


state 89

   19 def_fun: VAR params ':' @2 . '(' stmts ')'

    '('  shift, and go to state 104


state 90

   30 exec: PREFIXES_VAR '<' '=' exp .
   44 exp: exp . '+' factor
   45    | exp . '-' factor
   46    | exp . '<' factor
   47    | exp . '>' factor
   48    | exp . LEQ factor
   49    | exp . MEQ factor
   50    | exp . '=' factor
   51    | exp . '#' factor

    '<'  shift, and go to state 36
    '>'  shift, and go to state 37
    '='  shift, and go to state 38
    '#'  shift, and go to state 39
    MEQ  shift, and go to state 40
    LEQ  shift, and go to state 41
    '+'  shift, and go to state 42
    '-'  shift, and go to state 43

    $default  reduce using rule 30 (exec)


state 91

   32 exec: PREFIXES_VAR '\\' '(' exp . ')' '<' '=' exp
   44 exp: exp . '+' factor
   45    | exp . '-' factor
   46    | exp . '<' factor
   47    | exp . '>' factor
   48    | exp . LEQ factor
   49    | exp . MEQ factor
   50    | exp . '=' factor
   51    | exp . '#' factor
   61 term: PREFIXES_VAR '\\' '(' exp . ')'

    '<'  shift, and go to state 36
    '>'  shift, and go to state 37
    '='  shift, and go to state 38
    '#'  shift, and go to state 39
    MEQ  shift, and go to state 40
    LEQ  shift, and go to state 41
    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    ')'  shift, and go to state 105


state 92

   42 if_head: IF @5 '(' exp . @6 ',' stmt
   44 exp: exp . '+' factor
   45    | exp . '-' factor
   46    | exp . '<' factor
   47    | exp . '>' factor
   48    | exp . LEQ factor
   49    | exp . MEQ factor
   50    | exp . '=' factor
   51    | exp . '#' factor

    '<'  shift, and go to state 36
    '>'  shift, and go to state 37
    '='  shift, and go to state 38
    '#'  shift, and go to state 39
    MEQ  shift, and go to state 40
    LEQ  shift, and go to state 41
    '+'  shift, and go to state 42
    '-'  shift, and go to state 43

    $default  reduce using rule 41 (@6)

    @6  go to state 106


state 93

   39 exec: WHILE @3 '(' exp . ',' @4 stmt ')'
   44 exp: exp . '+' factor
   45    | exp . '-' factor
   46    | exp . '<' factor
   47    | exp . '>' factor
   48    | exp . LEQ factor
   49    | exp . MEQ factor
   50    | exp . '=' factor
   51    | exp . '#' factor

    '<'  shift, and go to state 36
    '>'  shift, and go to state 37
    '='  shift, and go to state 38
    '#'  shift, and go to state 39
    MEQ  shift, and go to state 40
    LEQ  shift, and go to state 41
    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    ','  shift, and go to state 107


state 94

   35 exec: if_head ',' stmt ')' .

    $default  reduce using rule 35 (exec)


state 95

   25 param_def: VAR ':' INTEGER .

    $default  reduce using rule 25 (param_def)


state 96

   60 term: VAR '\\' '(' . exp ')'

    INTEGER       shift, and go to state 1
    VAR           shift, and go to state 56
    PREFIXES_VAR  shift, and go to state 48
    '@'           shift, and go to state 7

    exp     go to state 108
    factor  go to state 17
    term    go to state 18


state 97

   61 term: PREFIXES_VAR '\\' '(' . exp ')'

    INTEGER       shift, and go to state 1
    VAR           shift, and go to state 56
    PREFIXES_VAR  shift, and go to state 48
    '@'           shift, and go to state 7

    exp     go to state 109
    factor  go to state 17
    term    go to state 18


state 98

   25 param_def: VAR . ':' INTEGER

    ':'  shift, and go to state 80


state 99

   24 params_def: param_def ',' params_def .

    $default  reduce using rule 24 (params_def)


state 100

   27 params_exec: param_exec ',' params_exec .

    $default  reduce using rule 27 (params_exec)


state 101

   16 items: INTEGER .

    $default  reduce using rule 16 (items)


state 102

   14 def_arr: VAR ':' '{' @1 items . '}'
   15 items: items . ',' INTEGER

    '}'  shift, and go to state 110
    ','  shift, and go to state 111


state 103

   31 exec: VAR '\\' '(' exp ')' . '<' '=' exp
   60 term: VAR '\\' '(' exp ')' .

    '<'  shift, and go to state 112

    '<'       [reduce using rule 60 (term)]
    $default  reduce using rule 60 (term)


state 104

   19 def_fun: VAR params ':' @2 '(' . stmts ')'

    INTEGER       shift, and go to state 1
    VAR           shift, and go to state 2
    PREFIXES_VAR  shift, and go to state 3
    IF            shift, and go to state 4
    WHILE         shift, and go to state 5
    '('           shift, and go to state 6
    '@'           shift, and go to state 7

    $default  reduce using rule 1 (stmts)

    stmts    go to state 113
    stmt     go to state 9
    def      go to state 10
    def_var  go to state 11
    def_arr  go to state 12
    def_fun  go to state 13
    exec     go to state 14
    if_head  go to state 15
    exp      go to state 16
    factor   go to state 17
    term     go to state 18


state 105

   32 exec: PREFIXES_VAR '\\' '(' exp ')' . '<' '=' exp
   61 term: PREFIXES_VAR '\\' '(' exp ')' .

    '<'  shift, and go to state 114

    '<'       [reduce using rule 61 (term)]
    $default  reduce using rule 61 (term)


state 106

   42 if_head: IF @5 '(' exp @6 . ',' stmt

    ','  shift, and go to state 115


state 107

   39 exec: WHILE @3 '(' exp ',' . @4 stmt ')'

    $default  reduce using rule 38 (@4)

    @4  go to state 116


state 108

   44 exp: exp . '+' factor
   45    | exp . '-' factor
   46    | exp . '<' factor
   47    | exp . '>' factor
   48    | exp . LEQ factor
   49    | exp . MEQ factor
   50    | exp . '=' factor
   51    | exp . '#' factor
   60 term: VAR '\\' '(' exp . ')'

    '<'  shift, and go to state 36
    '>'  shift, and go to state 37
    '='  shift, and go to state 38
    '#'  shift, and go to state 39
    MEQ  shift, and go to state 40
    LEQ  shift, and go to state 41
    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    ')'  shift, and go to state 117


state 109

   44 exp: exp . '+' factor
   45    | exp . '-' factor
   46    | exp . '<' factor
   47    | exp . '>' factor
   48    | exp . LEQ factor
   49    | exp . MEQ factor
   50    | exp . '=' factor
   51    | exp . '#' factor
   61 term: PREFIXES_VAR '\\' '(' exp . ')'

    '<'  shift, and go to state 36
    '>'  shift, and go to state 37
    '='  shift, and go to state 38
    '#'  shift, and go to state 39
    MEQ  shift, and go to state 40
    LEQ  shift, and go to state 41
    '+'  shift, and go to state 42
    '-'  shift, and go to state 43
    ')'  shift, and go to state 118


state 110

   14 def_arr: VAR ':' '{' @1 items '}' .

    $default  reduce using rule 14 (def_arr)


state 111

   15 items: items ',' . INTEGER

    INTEGER  shift, and go to state 119


state 112

   31 exec: VAR '\\' '(' exp ')' '<' . '=' exp

    '='  shift, and go to state 120


state 113

   19 def_fun: VAR params ':' @2 '(' stmts . ')'

    ')'  shift, and go to state 121


state 114

   32 exec: PREFIXES_VAR '\\' '(' exp ')' '<' . '=' exp

    '='  shift, and go to state 122


state 115

   42 if_head: IF @5 '(' exp @6 ',' . stmt

    INTEGER       shift, and go to state 1
    VAR           shift, and go to state 2
    PREFIXES_VAR  shift, and go to state 3
    IF            shift, and go to state 4
    WHILE         shift, and go to state 5
    '('           shift, and go to state 6
    '@'           shift, and go to state 7

    stmt     go to state 123
    def      go to state 10
    def_var  go to state 11
    def_arr  go to state 12
    def_fun  go to state 13
    exec     go to state 14
    if_head  go to state 15
    exp      go to state 16
    factor   go to state 17
    term     go to state 18


state 116

   39 exec: WHILE @3 '(' exp ',' @4 . stmt ')'

    INTEGER       shift, and go to state 1
    VAR           shift, and go to state 2
    PREFIXES_VAR  shift, and go to state 3
    IF            shift, and go to state 4
    WHILE         shift, and go to state 5
    '('           shift, and go to state 6
    '@'           shift, and go to state 7

    stmt     go to state 124
    def      go to state 10
    def_var  go to state 11
    def_arr  go to state 12
    def_fun  go to state 13
    exec     go to state 14
    if_head  go to state 15
    exp      go to state 16
    factor   go to state 17
    term     go to state 18


state 117

   60 term: VAR '\\' '(' exp ')' .

    $default  reduce using rule 60 (term)


state 118

   61 term: PREFIXES_VAR '\\' '(' exp ')' .

    $default  reduce using rule 61 (term)


state 119

   15 items: items ',' INTEGER .

    $default  reduce using rule 15 (items)


state 120

   31 exec: VAR '\\' '(' exp ')' '<' '=' . exp

    INTEGER       shift, and go to state 1
    VAR           shift, and go to state 56
    PREFIXES_VAR  shift, and go to state 48
    '@'           shift, and go to state 7

    exp     go to state 125
    factor  go to state 17
    term    go to state 18


state 121

   19 def_fun: VAR params ':' @2 '(' stmts ')' .

    $default  reduce using rule 19 (def_fun)


state 122

   32 exec: PREFIXES_VAR '\\' '(' exp ')' '<' '=' . exp

    INTEGER       shift, and go to state 1
    VAR           shift, and go to state 56
    PREFIXES_VAR  shift, and go to state 48
    '@'           shift, and go to state 7

    exp     go to state 126
    factor  go to state 17
    term    go to state 18


state 123

   42 if_head: IF @5 '(' exp @6 ',' stmt .

    $default  reduce using rule 42 (if_head)


state 124

   39 exec: WHILE @3 '(' exp ',' @4 stmt . ')'

    ')'  shift, and go to state 127


state 125

   31 exec: VAR '\\' '(' exp ')' '<' '=' exp .
   44 exp: exp . '+' factor
   45    | exp . '-' factor
   46    | exp . '<' factor
   47    | exp . '>' factor
   48    | exp . LEQ factor
   49    | exp . MEQ factor
   50    | exp . '=' factor
   51    | exp . '#' factor

    '<'  shift, and go to state 36
    '>'  shift, and go to state 37
    '='  shift, and go to state 38
    '#'  shift, and go to state 39
    MEQ  shift, and go to state 40
    LEQ  shift, and go to state 41
    '+'  shift, and go to state 42
    '-'  shift, and go to state 43

    $default  reduce using rule 31 (exec)


state 126

   32 exec: PREFIXES_VAR '\\' '(' exp ')' '<' '=' exp .
   44 exp: exp . '+' factor
   45    | exp . '-' factor
   46    | exp . '<' factor
   47    | exp . '>' factor
   48    | exp . LEQ factor
   49    | exp . MEQ factor
   50    | exp . '=' factor
   51    | exp . '#' factor

    '<'  shift, and go to state 36
    '>'  shift, and go to state 37
    '='  shift, and go to state 38
    '#'  shift, and go to state 39
    MEQ  shift, and go to state 40
    LEQ  shift, and go to state 41
    '+'  shift, and go to state 42
    '-'  shift, and go to state 43

    $default  reduce using rule 32 (exec)


state 127

   39 exec: WHILE @3 '(' exp ',' @4 stmt ')' .

    $default  reduce using rule 39 (exec)
