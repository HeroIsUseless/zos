Terminals which are not used

   EOL


State 2 conflicts: 1 shift/reduce
State 3 conflicts: 1 shift/reduce
State 99 conflicts: 1 shift/reduce
State 101 conflicts: 1 shift/reduce


Grammar

    0 $accept: stmts $end

    1 stmts: /* empty */
    2      | stmt ';' stmts

    3 stmt: def
    4     | exec
    5     | exp
    6     | '(' stmts ')'

    7 def: def_var
    8    | def_arr
    9    | def_fun

   10 def_var: VAR ':' exp
   11        | VAR ':' PATH

   12 @1: /* empty */

   13 def_arr: VAR ':' '{' @1 items '}'

   14 items: items ',' INTEGER
   15      | INTEGER
   16      | /* empty */

   17 @2: /* empty */

   18 def_fun: VAR params ':' @2 '(' stmts ')'

   19 params: '(' ')'
   20       | '(' params_def ')'
   21       | '(' params_exec ')'

   22 params_def: param_def
   23           | param_def ',' params_def

   24 param_def: VAR ':' INTEGER

   25 params_exec: param_exec
   26            | param_exec ',' params_exec

   27 param_exec: exp

   28 exec: VAR '<' '=' exp
   29     | PREFIXES_VAR '<' '=' exp
   30     | VAR '\\' '(' exp ')' '<' '=' exp
   31     | PREFIXES_VAR '\\' '(' exp ')' '<' '=' exp
   32     | VAR params
   33     | PREFIXES_VAR params
   34     | if_head ',' stmt ')'
   35     | if_head ')'

   36 @3: /* empty */

   37 @4: /* empty */

   38 exec: WHILE @3 '(' exp ',' @4 stmt ')'

   39 @5: /* empty */

   40 @6: /* empty */

   41 if_head: IF @5 '(' exp @6 ',' stmt

   42 exp: factor
   43    | exp '+' factor
   44    | exp '-' factor
   45    | exp '<' factor
   46    | exp '>' factor
   47    | exp LEQ factor
   48    | exp MEQ factor
   49    | exp '=' factor
   50    | exp '#' factor

   51 factor: term
   52       | factor '*' term
   53       | factor '/' term

   54 term: INTEGER
   55     | VAR
   56     | PREFIXES_VAR
   57     | VAR '\\' '(' exp ')'
   58     | PREFIXES_VAR '\\' '(' exp ')'


Terminals, with rules where they appear

$end (0) 0
'#' (35) 50
'(' (40) 6 18 19 20 21 30 31 38 41 57 58
')' (41) 6 18 19 20 21 30 31 34 35 38 57 58
'*' (42) 52
'+' (43) 43
',' (44) 14 23 26 34 38 41
'-' (45) 44
'/' (47) 53
':' (58) 10 11 13 18 24
';' (59) 2
'<' (60) 28 29 30 31 45
'=' (61) 28 29 30 31 49
'>' (62) 46
'\\' (92) 30 31 57 58
'{' (123) 13
'}' (125) 13
error (256)
MEQ (258) 48
LEQ (259) 47
INTEGER (260) 14 15 24 54
VAR (261) 10 11 13 18 24 28 30 32 55 57
PATH (262) 11
PREFIXES_VAR (263) 29 31 33 56 58
IF (264) 41
WHILE (265) 38
EOL (266)


Nonterminals, with rules where they appear

$accept (28)
    on left: 0
stmts (29)
    on left: 1 2, on right: 0 2 6 18
stmt (30)
    on left: 3 4 5 6, on right: 2 34 38 41
def (31)
    on left: 7 8 9, on right: 3
def_var (32)
    on left: 10 11, on right: 7
def_arr (33)
    on left: 13, on right: 8
@1 (34)
    on left: 12, on right: 13
items (35)
    on left: 14 15 16, on right: 13 14
def_fun (36)
    on left: 18, on right: 9
@2 (37)
    on left: 17, on right: 18
params (38)
    on left: 19 20 21, on right: 18 32 33
params_def (39)
    on left: 22 23, on right: 20 23
param_def (40)
    on left: 24, on right: 22 23
params_exec (41)
    on left: 25 26, on right: 21 26
param_exec (42)
    on left: 27, on right: 25 26
exec (43)
    on left: 28 29 30 31 32 33 34 35 38, on right: 4
@3 (44)
    on left: 36, on right: 38
@4 (45)
    on left: 37, on right: 38
if_head (46)
    on left: 41, on right: 34 35
@5 (47)
    on left: 39, on right: 41
@6 (48)
    on left: 40, on right: 41
exp (49)
    on left: 42 43 44 45 46 47 48 49 50, on right: 5 10 27 28 29 30
    31 38 41 43 44 45 46 47 48 49 50 57 58
factor (50)
    on left: 51 52 53, on right: 42 43 44 45 46 47 48 49 50 52 53
term (51)
    on left: 54 55 56 57 58, on right: 51 52 53


state 0

    0 $accept: . stmts $end

    INTEGER       shift, and go to state 1
    VAR           shift, and go to state 2
    PREFIXES_VAR  shift, and go to state 3
    IF            shift, and go to state 4
    WHILE         shift, and go to state 5
    '('           shift, and go to state 6

    $default  reduce using rule 1 (stmts)

    stmts    go to state 7
    stmt     go to state 8
    def      go to state 9
    def_var  go to state 10
    def_arr  go to state 11
    def_fun  go to state 12
    exec     go to state 13
    if_head  go to state 14
    exp      go to state 15
    factor   go to state 16
    term     go to state 17


state 1

   54 term: INTEGER .

    $default  reduce using rule 54 (term)


state 2

   10 def_var: VAR . ':' exp
   11        | VAR . ':' PATH
   13 def_arr: VAR . ':' '{' @1 items '}'
   18 def_fun: VAR . params ':' @2 '(' stmts ')'
   28 exec: VAR . '<' '=' exp
   30     | VAR . '\\' '(' exp ')' '<' '=' exp
   32     | VAR . params
   55 term: VAR .
   57     | VAR . '\\' '(' exp ')'

    '<'   shift, and go to state 18
    '('   shift, and go to state 19
    ':'   shift, and go to state 20
    '\\'  shift, and go to state 21

    '<'       [reduce using rule 55 (term)]
    $default  reduce using rule 55 (term)

    params  go to state 22


state 3

   29 exec: PREFIXES_VAR . '<' '=' exp
   31     | PREFIXES_VAR . '\\' '(' exp ')' '<' '=' exp
   33     | PREFIXES_VAR . params
   56 term: PREFIXES_VAR .
   58     | PREFIXES_VAR . '\\' '(' exp ')'

    '<'   shift, and go to state 23
    '('   shift, and go to state 19
    '\\'  shift, and go to state 24

    '<'       [reduce using rule 56 (term)]
    $default  reduce using rule 56 (term)

    params  go to state 25


state 4

   41 if_head: IF . @5 '(' exp @6 ',' stmt

    $default  reduce using rule 39 (@5)

    @5  go to state 26


state 5

   38 exec: WHILE . @3 '(' exp ',' @4 stmt ')'

    $default  reduce using rule 36 (@3)

    @3  go to state 27


state 6

    6 stmt: '(' . stmts ')'

    INTEGER       shift, and go to state 1
    VAR           shift, and go to state 2
    PREFIXES_VAR  shift, and go to state 3
    IF            shift, and go to state 4
    WHILE         shift, and go to state 5
    '('           shift, and go to state 6

    $default  reduce using rule 1 (stmts)

    stmts    go to state 28
    stmt     go to state 8
    def      go to state 9
    def_var  go to state 10
    def_arr  go to state 11
    def_fun  go to state 12
    exec     go to state 13
    if_head  go to state 14
    exp      go to state 15
    factor   go to state 16
    term     go to state 17


state 7

    0 $accept: stmts . $end

    $end  shift, and go to state 29


state 8

    2 stmts: stmt . ';' stmts

    ';'  shift, and go to state 30


state 9

    3 stmt: def .

    $default  reduce using rule 3 (stmt)


state 10

    7 def: def_var .

    $default  reduce using rule 7 (def)


state 11

    8 def: def_arr .

    $default  reduce using rule 8 (def)


state 12

    9 def: def_fun .

    $default  reduce using rule 9 (def)


state 13

    4 stmt: exec .

    $default  reduce using rule 4 (stmt)


state 14

   34 exec: if_head . ',' stmt ')'
   35     | if_head . ')'

    ')'  shift, and go to state 31
    ','  shift, and go to state 32


state 15

    5 stmt: exp .
   43 exp: exp . '+' factor
   44    | exp . '-' factor
   45    | exp . '<' factor
   46    | exp . '>' factor
   47    | exp . LEQ factor
   48    | exp . MEQ factor
   49    | exp . '=' factor
   50    | exp . '#' factor

    '<'  shift, and go to state 33
    '>'  shift, and go to state 34
    '='  shift, and go to state 35
    '#'  shift, and go to state 36
    MEQ  shift, and go to state 37
    LEQ  shift, and go to state 38
    '+'  shift, and go to state 39
    '-'  shift, and go to state 40

    $default  reduce using rule 5 (stmt)


state 16

   42 exp: factor .
   52 factor: factor . '*' term
   53       | factor . '/' term

    '*'  shift, and go to state 41
    '/'  shift, and go to state 42

    $default  reduce using rule 42 (exp)


state 17

   51 factor: term .

    $default  reduce using rule 51 (factor)


state 18

   28 exec: VAR '<' . '=' exp

    '='  shift, and go to state 43


state 19

   19 params: '(' . ')'
   20       | '(' . params_def ')'
   21       | '(' . params_exec ')'

    INTEGER       shift, and go to state 1
    VAR           shift, and go to state 44
    PREFIXES_VAR  shift, and go to state 45
    ')'           shift, and go to state 46

    params_def   go to state 47
    param_def    go to state 48
    params_exec  go to state 49
    param_exec   go to state 50
    exp          go to state 51
    factor       go to state 16
    term         go to state 17


state 20

   10 def_var: VAR ':' . exp
   11        | VAR ':' . PATH
   13 def_arr: VAR ':' . '{' @1 items '}'

    INTEGER       shift, and go to state 1
    VAR           shift, and go to state 52
    PATH          shift, and go to state 53
    PREFIXES_VAR  shift, and go to state 45
    '{'           shift, and go to state 54

    exp     go to state 55
    factor  go to state 16
    term    go to state 17


state 21

   30 exec: VAR '\\' . '(' exp ')' '<' '=' exp
   57 term: VAR '\\' . '(' exp ')'

    '('  shift, and go to state 56


state 22

   18 def_fun: VAR params . ':' @2 '(' stmts ')'
   32 exec: VAR params .

    ':'  shift, and go to state 57

    $default  reduce using rule 32 (exec)


state 23

   29 exec: PREFIXES_VAR '<' . '=' exp

    '='  shift, and go to state 58


state 24

   31 exec: PREFIXES_VAR '\\' . '(' exp ')' '<' '=' exp
   58 term: PREFIXES_VAR '\\' . '(' exp ')'

    '('  shift, and go to state 59


state 25

   33 exec: PREFIXES_VAR params .

    $default  reduce using rule 33 (exec)


state 26

   41 if_head: IF @5 . '(' exp @6 ',' stmt

    '('  shift, and go to state 60


state 27

   38 exec: WHILE @3 . '(' exp ',' @4 stmt ')'

    '('  shift, and go to state 61


state 28

    6 stmt: '(' stmts . ')'

    ')'  shift, and go to state 62


state 29

    0 $accept: stmts $end .

    $default  accept


state 30

    2 stmts: stmt ';' . stmts

    INTEGER       shift, and go to state 1
    VAR           shift, and go to state 2
    PREFIXES_VAR  shift, and go to state 3
    IF            shift, and go to state 4
    WHILE         shift, and go to state 5
    '('           shift, and go to state 6

    $default  reduce using rule 1 (stmts)

    stmts    go to state 63
    stmt     go to state 8
    def      go to state 9
    def_var  go to state 10
    def_arr  go to state 11
    def_fun  go to state 12
    exec     go to state 13
    if_head  go to state 14
    exp      go to state 15
    factor   go to state 16
    term     go to state 17


state 31

   35 exec: if_head ')' .

    $default  reduce using rule 35 (exec)


state 32

   34 exec: if_head ',' . stmt ')'

    INTEGER       shift, and go to state 1
    VAR           shift, and go to state 2
    PREFIXES_VAR  shift, and go to state 3
    IF            shift, and go to state 4
    WHILE         shift, and go to state 5
    '('           shift, and go to state 6

    stmt     go to state 64
    def      go to state 9
    def_var  go to state 10
    def_arr  go to state 11
    def_fun  go to state 12
    exec     go to state 13
    if_head  go to state 14
    exp      go to state 15
    factor   go to state 16
    term     go to state 17


state 33

   45 exp: exp '<' . factor

    INTEGER       shift, and go to state 1
    VAR           shift, and go to state 52
    PREFIXES_VAR  shift, and go to state 45

    factor  go to state 65
    term    go to state 17


state 34

   46 exp: exp '>' . factor

    INTEGER       shift, and go to state 1
    VAR           shift, and go to state 52
    PREFIXES_VAR  shift, and go to state 45

    factor  go to state 66
    term    go to state 17


state 35

   49 exp: exp '=' . factor

    INTEGER       shift, and go to state 1
    VAR           shift, and go to state 52
    PREFIXES_VAR  shift, and go to state 45

    factor  go to state 67
    term    go to state 17


state 36

   50 exp: exp '#' . factor

    INTEGER       shift, and go to state 1
    VAR           shift, and go to state 52
    PREFIXES_VAR  shift, and go to state 45

    factor  go to state 68
    term    go to state 17


state 37

   48 exp: exp MEQ . factor

    INTEGER       shift, and go to state 1
    VAR           shift, and go to state 52
    PREFIXES_VAR  shift, and go to state 45

    factor  go to state 69
    term    go to state 17


state 38

   47 exp: exp LEQ . factor

    INTEGER       shift, and go to state 1
    VAR           shift, and go to state 52
    PREFIXES_VAR  shift, and go to state 45

    factor  go to state 70
    term    go to state 17


state 39

   43 exp: exp '+' . factor

    INTEGER       shift, and go to state 1
    VAR           shift, and go to state 52
    PREFIXES_VAR  shift, and go to state 45

    factor  go to state 71
    term    go to state 17


state 40

   44 exp: exp '-' . factor

    INTEGER       shift, and go to state 1
    VAR           shift, and go to state 52
    PREFIXES_VAR  shift, and go to state 45

    factor  go to state 72
    term    go to state 17


state 41

   52 factor: factor '*' . term

    INTEGER       shift, and go to state 1
    VAR           shift, and go to state 52
    PREFIXES_VAR  shift, and go to state 45

    term  go to state 73


state 42

   53 factor: factor '/' . term

    INTEGER       shift, and go to state 1
    VAR           shift, and go to state 52
    PREFIXES_VAR  shift, and go to state 45

    term  go to state 74


state 43

   28 exec: VAR '<' '=' . exp

    INTEGER       shift, and go to state 1
    VAR           shift, and go to state 52
    PREFIXES_VAR  shift, and go to state 45

    exp     go to state 75
    factor  go to state 16
    term    go to state 17


state 44

   24 param_def: VAR . ':' INTEGER
   55 term: VAR .
   57     | VAR . '\\' '(' exp ')'

    ':'   shift, and go to state 76
    '\\'  shift, and go to state 77

    $default  reduce using rule 55 (term)


state 45

   56 term: PREFIXES_VAR .
   58     | PREFIXES_VAR . '\\' '(' exp ')'

    '\\'  shift, and go to state 78

    $default  reduce using rule 56 (term)


state 46

   19 params: '(' ')' .

    $default  reduce using rule 19 (params)


state 47

   20 params: '(' params_def . ')'

    ')'  shift, and go to state 79


state 48

   22 params_def: param_def .
   23           | param_def . ',' params_def

    ','  shift, and go to state 80

    $default  reduce using rule 22 (params_def)


state 49

   21 params: '(' params_exec . ')'

    ')'  shift, and go to state 81


state 50

   25 params_exec: param_exec .
   26            | param_exec . ',' params_exec

    ','  shift, and go to state 82

    $default  reduce using rule 25 (params_exec)


state 51

   27 param_exec: exp .
   43 exp: exp . '+' factor
   44    | exp . '-' factor
   45    | exp . '<' factor
   46    | exp . '>' factor
   47    | exp . LEQ factor
   48    | exp . MEQ factor
   49    | exp . '=' factor
   50    | exp . '#' factor

    '<'  shift, and go to state 33
    '>'  shift, and go to state 34
    '='  shift, and go to state 35
    '#'  shift, and go to state 36
    MEQ  shift, and go to state 37
    LEQ  shift, and go to state 38
    '+'  shift, and go to state 39
    '-'  shift, and go to state 40

    $default  reduce using rule 27 (param_exec)


state 52

   55 term: VAR .
   57     | VAR . '\\' '(' exp ')'

    '\\'  shift, and go to state 77

    $default  reduce using rule 55 (term)


state 53

   11 def_var: VAR ':' PATH .

    $default  reduce using rule 11 (def_var)


state 54

   13 def_arr: VAR ':' '{' . @1 items '}'

    $default  reduce using rule 12 (@1)

    @1  go to state 83


state 55

   10 def_var: VAR ':' exp .
   43 exp: exp . '+' factor
   44    | exp . '-' factor
   45    | exp . '<' factor
   46    | exp . '>' factor
   47    | exp . LEQ factor
   48    | exp . MEQ factor
   49    | exp . '=' factor
   50    | exp . '#' factor

    '<'  shift, and go to state 33
    '>'  shift, and go to state 34
    '='  shift, and go to state 35
    '#'  shift, and go to state 36
    MEQ  shift, and go to state 37
    LEQ  shift, and go to state 38
    '+'  shift, and go to state 39
    '-'  shift, and go to state 40

    $default  reduce using rule 10 (def_var)


state 56

   30 exec: VAR '\\' '(' . exp ')' '<' '=' exp
   57 term: VAR '\\' '(' . exp ')'

    INTEGER       shift, and go to state 1
    VAR           shift, and go to state 52
    PREFIXES_VAR  shift, and go to state 45

    exp     go to state 84
    factor  go to state 16
    term    go to state 17


state 57

   18 def_fun: VAR params ':' . @2 '(' stmts ')'

    $default  reduce using rule 17 (@2)

    @2  go to state 85


state 58

   29 exec: PREFIXES_VAR '<' '=' . exp

    INTEGER       shift, and go to state 1
    VAR           shift, and go to state 52
    PREFIXES_VAR  shift, and go to state 45

    exp     go to state 86
    factor  go to state 16
    term    go to state 17


state 59

   31 exec: PREFIXES_VAR '\\' '(' . exp ')' '<' '=' exp
   58 term: PREFIXES_VAR '\\' '(' . exp ')'

    INTEGER       shift, and go to state 1
    VAR           shift, and go to state 52
    PREFIXES_VAR  shift, and go to state 45

    exp     go to state 87
    factor  go to state 16
    term    go to state 17


state 60

   41 if_head: IF @5 '(' . exp @6 ',' stmt

    INTEGER       shift, and go to state 1
    VAR           shift, and go to state 52
    PREFIXES_VAR  shift, and go to state 45

    exp     go to state 88
    factor  go to state 16
    term    go to state 17


state 61

   38 exec: WHILE @3 '(' . exp ',' @4 stmt ')'

    INTEGER       shift, and go to state 1
    VAR           shift, and go to state 52
    PREFIXES_VAR  shift, and go to state 45

    exp     go to state 89
    factor  go to state 16
    term    go to state 17


state 62

    6 stmt: '(' stmts ')' .

    $default  reduce using rule 6 (stmt)


state 63

    2 stmts: stmt ';' stmts .

    $default  reduce using rule 2 (stmts)


state 64

   34 exec: if_head ',' stmt . ')'

    ')'  shift, and go to state 90


state 65

   45 exp: exp '<' factor .
   52 factor: factor . '*' term
   53       | factor . '/' term

    '*'  shift, and go to state 41
    '/'  shift, and go to state 42

    $default  reduce using rule 45 (exp)


state 66

   46 exp: exp '>' factor .
   52 factor: factor . '*' term
   53       | factor . '/' term

    '*'  shift, and go to state 41
    '/'  shift, and go to state 42

    $default  reduce using rule 46 (exp)


state 67

   49 exp: exp '=' factor .
   52 factor: factor . '*' term
   53       | factor . '/' term

    '*'  shift, and go to state 41
    '/'  shift, and go to state 42

    $default  reduce using rule 49 (exp)


state 68

   50 exp: exp '#' factor .
   52 factor: factor . '*' term
   53       | factor . '/' term

    '*'  shift, and go to state 41
    '/'  shift, and go to state 42

    $default  reduce using rule 50 (exp)


state 69

   48 exp: exp MEQ factor .
   52 factor: factor . '*' term
   53       | factor . '/' term

    '*'  shift, and go to state 41
    '/'  shift, and go to state 42

    $default  reduce using rule 48 (exp)


state 70

   47 exp: exp LEQ factor .
   52 factor: factor . '*' term
   53       | factor . '/' term

    '*'  shift, and go to state 41
    '/'  shift, and go to state 42

    $default  reduce using rule 47 (exp)


state 71

   43 exp: exp '+' factor .
   52 factor: factor . '*' term
   53       | factor . '/' term

    '*'  shift, and go to state 41
    '/'  shift, and go to state 42

    $default  reduce using rule 43 (exp)


state 72

   44 exp: exp '-' factor .
   52 factor: factor . '*' term
   53       | factor . '/' term

    '*'  shift, and go to state 41
    '/'  shift, and go to state 42

    $default  reduce using rule 44 (exp)


state 73

   52 factor: factor '*' term .

    $default  reduce using rule 52 (factor)


state 74

   53 factor: factor '/' term .

    $default  reduce using rule 53 (factor)


state 75

   28 exec: VAR '<' '=' exp .
   43 exp: exp . '+' factor
   44    | exp . '-' factor
   45    | exp . '<' factor
   46    | exp . '>' factor
   47    | exp . LEQ factor
   48    | exp . MEQ factor
   49    | exp . '=' factor
   50    | exp . '#' factor

    '<'  shift, and go to state 33
    '>'  shift, and go to state 34
    '='  shift, and go to state 35
    '#'  shift, and go to state 36
    MEQ  shift, and go to state 37
    LEQ  shift, and go to state 38
    '+'  shift, and go to state 39
    '-'  shift, and go to state 40

    $default  reduce using rule 28 (exec)


state 76

   24 param_def: VAR ':' . INTEGER

    INTEGER  shift, and go to state 91


state 77

   57 term: VAR '\\' . '(' exp ')'

    '('  shift, and go to state 92


state 78

   58 term: PREFIXES_VAR '\\' . '(' exp ')'

    '('  shift, and go to state 93


state 79

   20 params: '(' params_def ')' .

    $default  reduce using rule 20 (params)


state 80

   23 params_def: param_def ',' . params_def

    VAR  shift, and go to state 94

    params_def  go to state 95
    param_def   go to state 48


state 81

   21 params: '(' params_exec ')' .

    $default  reduce using rule 21 (params)


state 82

   26 params_exec: param_exec ',' . params_exec

    INTEGER       shift, and go to state 1
    VAR           shift, and go to state 52
    PREFIXES_VAR  shift, and go to state 45

    params_exec  go to state 96
    param_exec   go to state 50
    exp          go to state 51
    factor       go to state 16
    term         go to state 17


state 83

   13 def_arr: VAR ':' '{' @1 . items '}'

    INTEGER  shift, and go to state 97

    $default  reduce using rule 16 (items)

    items  go to state 98


state 84

   30 exec: VAR '\\' '(' exp . ')' '<' '=' exp
   43 exp: exp . '+' factor
   44    | exp . '-' factor
   45    | exp . '<' factor
   46    | exp . '>' factor
   47    | exp . LEQ factor
   48    | exp . MEQ factor
   49    | exp . '=' factor
   50    | exp . '#' factor
   57 term: VAR '\\' '(' exp . ')'

    '<'  shift, and go to state 33
    '>'  shift, and go to state 34
    '='  shift, and go to state 35
    '#'  shift, and go to state 36
    MEQ  shift, and go to state 37
    LEQ  shift, and go to state 38
    '+'  shift, and go to state 39
    '-'  shift, and go to state 40
    ')'  shift, and go to state 99


state 85

   18 def_fun: VAR params ':' @2 . '(' stmts ')'

    '('  shift, and go to state 100


state 86

   29 exec: PREFIXES_VAR '<' '=' exp .
   43 exp: exp . '+' factor
   44    | exp . '-' factor
   45    | exp . '<' factor
   46    | exp . '>' factor
   47    | exp . LEQ factor
   48    | exp . MEQ factor
   49    | exp . '=' factor
   50    | exp . '#' factor

    '<'  shift, and go to state 33
    '>'  shift, and go to state 34
    '='  shift, and go to state 35
    '#'  shift, and go to state 36
    MEQ  shift, and go to state 37
    LEQ  shift, and go to state 38
    '+'  shift, and go to state 39
    '-'  shift, and go to state 40

    $default  reduce using rule 29 (exec)


state 87

   31 exec: PREFIXES_VAR '\\' '(' exp . ')' '<' '=' exp
   43 exp: exp . '+' factor
   44    | exp . '-' factor
   45    | exp . '<' factor
   46    | exp . '>' factor
   47    | exp . LEQ factor
   48    | exp . MEQ factor
   49    | exp . '=' factor
   50    | exp . '#' factor
   58 term: PREFIXES_VAR '\\' '(' exp . ')'

    '<'  shift, and go to state 33
    '>'  shift, and go to state 34
    '='  shift, and go to state 35
    '#'  shift, and go to state 36
    MEQ  shift, and go to state 37
    LEQ  shift, and go to state 38
    '+'  shift, and go to state 39
    '-'  shift, and go to state 40
    ')'  shift, and go to state 101


state 88

   41 if_head: IF @5 '(' exp . @6 ',' stmt
   43 exp: exp . '+' factor
   44    | exp . '-' factor
   45    | exp . '<' factor
   46    | exp . '>' factor
   47    | exp . LEQ factor
   48    | exp . MEQ factor
   49    | exp . '=' factor
   50    | exp . '#' factor

    '<'  shift, and go to state 33
    '>'  shift, and go to state 34
    '='  shift, and go to state 35
    '#'  shift, and go to state 36
    MEQ  shift, and go to state 37
    LEQ  shift, and go to state 38
    '+'  shift, and go to state 39
    '-'  shift, and go to state 40

    $default  reduce using rule 40 (@6)

    @6  go to state 102


state 89

   38 exec: WHILE @3 '(' exp . ',' @4 stmt ')'
   43 exp: exp . '+' factor
   44    | exp . '-' factor
   45    | exp . '<' factor
   46    | exp . '>' factor
   47    | exp . LEQ factor
   48    | exp . MEQ factor
   49    | exp . '=' factor
   50    | exp . '#' factor

    '<'  shift, and go to state 33
    '>'  shift, and go to state 34
    '='  shift, and go to state 35
    '#'  shift, and go to state 36
    MEQ  shift, and go to state 37
    LEQ  shift, and go to state 38
    '+'  shift, and go to state 39
    '-'  shift, and go to state 40
    ','  shift, and go to state 103


state 90

   34 exec: if_head ',' stmt ')' .

    $default  reduce using rule 34 (exec)


state 91

   24 param_def: VAR ':' INTEGER .

    $default  reduce using rule 24 (param_def)


state 92

   57 term: VAR '\\' '(' . exp ')'

    INTEGER       shift, and go to state 1
    VAR           shift, and go to state 52
    PREFIXES_VAR  shift, and go to state 45

    exp     go to state 104
    factor  go to state 16
    term    go to state 17


state 93

   58 term: PREFIXES_VAR '\\' '(' . exp ')'

    INTEGER       shift, and go to state 1
    VAR           shift, and go to state 52
    PREFIXES_VAR  shift, and go to state 45

    exp     go to state 105
    factor  go to state 16
    term    go to state 17


state 94

   24 param_def: VAR . ':' INTEGER

    ':'  shift, and go to state 76


state 95

   23 params_def: param_def ',' params_def .

    $default  reduce using rule 23 (params_def)


state 96

   26 params_exec: param_exec ',' params_exec .

    $default  reduce using rule 26 (params_exec)


state 97

   15 items: INTEGER .

    $default  reduce using rule 15 (items)


state 98

   13 def_arr: VAR ':' '{' @1 items . '}'
   14 items: items . ',' INTEGER

    '}'  shift, and go to state 106
    ','  shift, and go to state 107


state 99

   30 exec: VAR '\\' '(' exp ')' . '<' '=' exp
   57 term: VAR '\\' '(' exp ')' .

    '<'  shift, and go to state 108

    '<'       [reduce using rule 57 (term)]
    $default  reduce using rule 57 (term)


state 100

   18 def_fun: VAR params ':' @2 '(' . stmts ')'

    INTEGER       shift, and go to state 1
    VAR           shift, and go to state 2
    PREFIXES_VAR  shift, and go to state 3
    IF            shift, and go to state 4
    WHILE         shift, and go to state 5
    '('           shift, and go to state 6

    $default  reduce using rule 1 (stmts)

    stmts    go to state 109
    stmt     go to state 8
    def      go to state 9
    def_var  go to state 10
    def_arr  go to state 11
    def_fun  go to state 12
    exec     go to state 13
    if_head  go to state 14
    exp      go to state 15
    factor   go to state 16
    term     go to state 17


state 101

   31 exec: PREFIXES_VAR '\\' '(' exp ')' . '<' '=' exp
   58 term: PREFIXES_VAR '\\' '(' exp ')' .

    '<'  shift, and go to state 110

    '<'       [reduce using rule 58 (term)]
    $default  reduce using rule 58 (term)


state 102

   41 if_head: IF @5 '(' exp @6 . ',' stmt

    ','  shift, and go to state 111


state 103

   38 exec: WHILE @3 '(' exp ',' . @4 stmt ')'

    $default  reduce using rule 37 (@4)

    @4  go to state 112


state 104

   43 exp: exp . '+' factor
   44    | exp . '-' factor
   45    | exp . '<' factor
   46    | exp . '>' factor
   47    | exp . LEQ factor
   48    | exp . MEQ factor
   49    | exp . '=' factor
   50    | exp . '#' factor
   57 term: VAR '\\' '(' exp . ')'

    '<'  shift, and go to state 33
    '>'  shift, and go to state 34
    '='  shift, and go to state 35
    '#'  shift, and go to state 36
    MEQ  shift, and go to state 37
    LEQ  shift, and go to state 38
    '+'  shift, and go to state 39
    '-'  shift, and go to state 40
    ')'  shift, and go to state 113


state 105

   43 exp: exp . '+' factor
   44    | exp . '-' factor
   45    | exp . '<' factor
   46    | exp . '>' factor
   47    | exp . LEQ factor
   48    | exp . MEQ factor
   49    | exp . '=' factor
   50    | exp . '#' factor
   58 term: PREFIXES_VAR '\\' '(' exp . ')'

    '<'  shift, and go to state 33
    '>'  shift, and go to state 34
    '='  shift, and go to state 35
    '#'  shift, and go to state 36
    MEQ  shift, and go to state 37
    LEQ  shift, and go to state 38
    '+'  shift, and go to state 39
    '-'  shift, and go to state 40
    ')'  shift, and go to state 114


state 106

   13 def_arr: VAR ':' '{' @1 items '}' .

    $default  reduce using rule 13 (def_arr)


state 107

   14 items: items ',' . INTEGER

    INTEGER  shift, and go to state 115


state 108

   30 exec: VAR '\\' '(' exp ')' '<' . '=' exp

    '='  shift, and go to state 116


state 109

   18 def_fun: VAR params ':' @2 '(' stmts . ')'

    ')'  shift, and go to state 117


state 110

   31 exec: PREFIXES_VAR '\\' '(' exp ')' '<' . '=' exp

    '='  shift, and go to state 118


state 111

   41 if_head: IF @5 '(' exp @6 ',' . stmt

    INTEGER       shift, and go to state 1
    VAR           shift, and go to state 2
    PREFIXES_VAR  shift, and go to state 3
    IF            shift, and go to state 4
    WHILE         shift, and go to state 5
    '('           shift, and go to state 6

    stmt     go to state 119
    def      go to state 9
    def_var  go to state 10
    def_arr  go to state 11
    def_fun  go to state 12
    exec     go to state 13
    if_head  go to state 14
    exp      go to state 15
    factor   go to state 16
    term     go to state 17


state 112

   38 exec: WHILE @3 '(' exp ',' @4 . stmt ')'

    INTEGER       shift, and go to state 1
    VAR           shift, and go to state 2
    PREFIXES_VAR  shift, and go to state 3
    IF            shift, and go to state 4
    WHILE         shift, and go to state 5
    '('           shift, and go to state 6

    stmt     go to state 120
    def      go to state 9
    def_var  go to state 10
    def_arr  go to state 11
    def_fun  go to state 12
    exec     go to state 13
    if_head  go to state 14
    exp      go to state 15
    factor   go to state 16
    term     go to state 17


state 113

   57 term: VAR '\\' '(' exp ')' .

    $default  reduce using rule 57 (term)


state 114

   58 term: PREFIXES_VAR '\\' '(' exp ')' .

    $default  reduce using rule 58 (term)


state 115

   14 items: items ',' INTEGER .

    $default  reduce using rule 14 (items)


state 116

   30 exec: VAR '\\' '(' exp ')' '<' '=' . exp

    INTEGER       shift, and go to state 1
    VAR           shift, and go to state 52
    PREFIXES_VAR  shift, and go to state 45

    exp     go to state 121
    factor  go to state 16
    term    go to state 17


state 117

   18 def_fun: VAR params ':' @2 '(' stmts ')' .

    $default  reduce using rule 18 (def_fun)


state 118

   31 exec: PREFIXES_VAR '\\' '(' exp ')' '<' '=' . exp

    INTEGER       shift, and go to state 1
    VAR           shift, and go to state 52
    PREFIXES_VAR  shift, and go to state 45

    exp     go to state 122
    factor  go to state 16
    term    go to state 17


state 119

   41 if_head: IF @5 '(' exp @6 ',' stmt .

    $default  reduce using rule 41 (if_head)


state 120

   38 exec: WHILE @3 '(' exp ',' @4 stmt . ')'

    ')'  shift, and go to state 123


state 121

   30 exec: VAR '\\' '(' exp ')' '<' '=' exp .
   43 exp: exp . '+' factor
   44    | exp . '-' factor
   45    | exp . '<' factor
   46    | exp . '>' factor
   47    | exp . LEQ factor
   48    | exp . MEQ factor
   49    | exp . '=' factor
   50    | exp . '#' factor

    '<'  shift, and go to state 33
    '>'  shift, and go to state 34
    '='  shift, and go to state 35
    '#'  shift, and go to state 36
    MEQ  shift, and go to state 37
    LEQ  shift, and go to state 38
    '+'  shift, and go to state 39
    '-'  shift, and go to state 40

    $default  reduce using rule 30 (exec)


state 122

   31 exec: PREFIXES_VAR '\\' '(' exp ')' '<' '=' exp .
   43 exp: exp . '+' factor
   44    | exp . '-' factor
   45    | exp . '<' factor
   46    | exp . '>' factor
   47    | exp . LEQ factor
   48    | exp . MEQ factor
   49    | exp . '=' factor
   50    | exp . '#' factor

    '<'  shift, and go to state 33
    '>'  shift, and go to state 34
    '='  shift, and go to state 35
    '#'  shift, and go to state 36
    MEQ  shift, and go to state 37
    LEQ  shift, and go to state 38
    '+'  shift, and go to state 39
    '-'  shift, and go to state 40

    $default  reduce using rule 31 (exec)


state 123

   38 exec: WHILE @3 '(' exp ',' @4 stmt ')' .

    $default  reduce using rule 38 (exec)
