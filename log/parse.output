Terminals which are not used

   NUMBER
   EOL


Grammar

    0 $accept: stmts $end

    1 stmts: /* empty */
    2      | stmt ';' stmts

    3 stmt: def
    4     | exec
    5     | exp
    6     | '(' stmts ')'

    7 def: def_var
    8    | def_fun

    9 def_var: VAR ':' INTEGER

   10 @1: /* empty */

   11 def_fun: VAR params ':' @1 '(' ')'

   12 params: '(' ')'
   13       | '(' params_def ')'
   14       | '(' params_exec ')'

   15 params_def: param_def
   16           | param_def ',' params_def

   17 param_def: VAR ':' INTEGER

   18 params_exec: param_exec
   19            | param_exec ',' params_exec

   20 param_exec: exp

   21 exec: VAR '<' '=' exp
   22     | VAR params
   23     | if_head ',' stmt ')'
   24     | if_head ')'

   25 @2: /* empty */

   26 @3: /* empty */

   27 exec: WHILE @2 '(' exp ',' @3 stmt ')'

   28 @4: /* empty */

   29 if_head: IF '(' exp ',' @4 stmt

   30 exp: factor
   31    | exp '+' factor
   32    | exp '-' factor

   33 factor: term
   34       | factor '*' term
   35       | factor '/' term

   36 term: INTEGER
   37     | VAR


Terminals, with rules where they appear

$end (0) 0
'(' (40) 6 11 12 13 14 27 29
')' (41) 6 11 12 13 14 23 24 27
'*' (42) 34
'+' (43) 31
',' (44) 16 19 23 27 29
'-' (45) 32
'/' (47) 35
':' (58) 9 11 17
';' (59) 2
'<' (60) 21
'=' (61) 21
error (256)
NUMBER (258)
INTEGER (259) 9 17 36
VAR (260) 9 11 17 21 22 37
IF (261) 29
WHILE (262) 27
EOL (263)


Nonterminals, with rules where they appear

$accept (20)
    on left: 0
stmts (21)
    on left: 1 2, on right: 0 2 6
stmt (22)
    on left: 3 4 5 6, on right: 2 23 27 29
def (23)
    on left: 7 8, on right: 3
def_var (24)
    on left: 9, on right: 7
def_fun (25)
    on left: 11, on right: 8
@1 (26)
    on left: 10, on right: 11
params (27)
    on left: 12 13 14, on right: 11 22
params_def (28)
    on left: 15 16, on right: 13 16
param_def (29)
    on left: 17, on right: 15 16
params_exec (30)
    on left: 18 19, on right: 14 19
param_exec (31)
    on left: 20, on right: 18 19
exec (32)
    on left: 21 22 23 24 27, on right: 4
@2 (33)
    on left: 25, on right: 27
@3 (34)
    on left: 26, on right: 27
if_head (35)
    on left: 29, on right: 23 24
@4 (36)
    on left: 28, on right: 29
exp (37)
    on left: 30 31 32, on right: 5 20 21 27 29 31 32
factor (38)
    on left: 33 34 35, on right: 30 31 32 34 35
term (39)
    on left: 36 37, on right: 33 34 35


state 0

    0 $accept: . stmts $end

    INTEGER  shift, and go to state 1
    VAR      shift, and go to state 2
    IF       shift, and go to state 3
    WHILE    shift, and go to state 4
    '('      shift, and go to state 5

    $default  reduce using rule 1 (stmts)

    stmts    go to state 6
    stmt     go to state 7
    def      go to state 8
    def_var  go to state 9
    def_fun  go to state 10
    exec     go to state 11
    if_head  go to state 12
    exp      go to state 13
    factor   go to state 14
    term     go to state 15


state 1

   36 term: INTEGER .

    $default  reduce using rule 36 (term)


state 2

    9 def_var: VAR . ':' INTEGER
   11 def_fun: VAR . params ':' @1 '(' ')'
   21 exec: VAR . '<' '=' exp
   22     | VAR . params
   37 term: VAR .

    '('  shift, and go to state 16
    ':'  shift, and go to state 17
    '<'  shift, and go to state 18

    $default  reduce using rule 37 (term)

    params  go to state 19


state 3

   29 if_head: IF . '(' exp ',' @4 stmt

    '('  shift, and go to state 20


state 4

   27 exec: WHILE . @2 '(' exp ',' @3 stmt ')'

    $default  reduce using rule 25 (@2)

    @2  go to state 21


state 5

    6 stmt: '(' . stmts ')'

    INTEGER  shift, and go to state 1
    VAR      shift, and go to state 2
    IF       shift, and go to state 3
    WHILE    shift, and go to state 4
    '('      shift, and go to state 5

    $default  reduce using rule 1 (stmts)

    stmts    go to state 22
    stmt     go to state 7
    def      go to state 8
    def_var  go to state 9
    def_fun  go to state 10
    exec     go to state 11
    if_head  go to state 12
    exp      go to state 13
    factor   go to state 14
    term     go to state 15


state 6

    0 $accept: stmts . $end

    $end  shift, and go to state 23


state 7

    2 stmts: stmt . ';' stmts

    ';'  shift, and go to state 24


state 8

    3 stmt: def .

    $default  reduce using rule 3 (stmt)


state 9

    7 def: def_var .

    $default  reduce using rule 7 (def)


state 10

    8 def: def_fun .

    $default  reduce using rule 8 (def)


state 11

    4 stmt: exec .

    $default  reduce using rule 4 (stmt)


state 12

   23 exec: if_head . ',' stmt ')'
   24     | if_head . ')'

    ')'  shift, and go to state 25
    ','  shift, and go to state 26


state 13

    5 stmt: exp .
   31 exp: exp . '+' factor
   32    | exp . '-' factor

    '+'  shift, and go to state 27
    '-'  shift, and go to state 28

    $default  reduce using rule 5 (stmt)


state 14

   30 exp: factor .
   34 factor: factor . '*' term
   35       | factor . '/' term

    '*'  shift, and go to state 29
    '/'  shift, and go to state 30

    $default  reduce using rule 30 (exp)


state 15

   33 factor: term .

    $default  reduce using rule 33 (factor)


state 16

   12 params: '(' . ')'
   13       | '(' . params_def ')'
   14       | '(' . params_exec ')'

    INTEGER  shift, and go to state 1
    VAR      shift, and go to state 31
    ')'      shift, and go to state 32

    params_def   go to state 33
    param_def    go to state 34
    params_exec  go to state 35
    param_exec   go to state 36
    exp          go to state 37
    factor       go to state 14
    term         go to state 15


state 17

    9 def_var: VAR ':' . INTEGER

    INTEGER  shift, and go to state 38


state 18

   21 exec: VAR '<' . '=' exp

    '='  shift, and go to state 39


state 19

   11 def_fun: VAR params . ':' @1 '(' ')'
   22 exec: VAR params .

    ':'  shift, and go to state 40

    $default  reduce using rule 22 (exec)


state 20

   29 if_head: IF '(' . exp ',' @4 stmt

    INTEGER  shift, and go to state 1
    VAR      shift, and go to state 41

    exp     go to state 42
    factor  go to state 14
    term    go to state 15


state 21

   27 exec: WHILE @2 . '(' exp ',' @3 stmt ')'

    '('  shift, and go to state 43


state 22

    6 stmt: '(' stmts . ')'

    ')'  shift, and go to state 44


state 23

    0 $accept: stmts $end .

    $default  accept


state 24

    2 stmts: stmt ';' . stmts

    INTEGER  shift, and go to state 1
    VAR      shift, and go to state 2
    IF       shift, and go to state 3
    WHILE    shift, and go to state 4
    '('      shift, and go to state 5

    $default  reduce using rule 1 (stmts)

    stmts    go to state 45
    stmt     go to state 7
    def      go to state 8
    def_var  go to state 9
    def_fun  go to state 10
    exec     go to state 11
    if_head  go to state 12
    exp      go to state 13
    factor   go to state 14
    term     go to state 15


state 25

   24 exec: if_head ')' .

    $default  reduce using rule 24 (exec)


state 26

   23 exec: if_head ',' . stmt ')'

    INTEGER  shift, and go to state 1
    VAR      shift, and go to state 2
    IF       shift, and go to state 3
    WHILE    shift, and go to state 4
    '('      shift, and go to state 5

    stmt     go to state 46
    def      go to state 8
    def_var  go to state 9
    def_fun  go to state 10
    exec     go to state 11
    if_head  go to state 12
    exp      go to state 13
    factor   go to state 14
    term     go to state 15


state 27

   31 exp: exp '+' . factor

    INTEGER  shift, and go to state 1
    VAR      shift, and go to state 41

    factor  go to state 47
    term    go to state 15


state 28

   32 exp: exp '-' . factor

    INTEGER  shift, and go to state 1
    VAR      shift, and go to state 41

    factor  go to state 48
    term    go to state 15


state 29

   34 factor: factor '*' . term

    INTEGER  shift, and go to state 1
    VAR      shift, and go to state 41

    term  go to state 49


state 30

   35 factor: factor '/' . term

    INTEGER  shift, and go to state 1
    VAR      shift, and go to state 41

    term  go to state 50


state 31

   17 param_def: VAR . ':' INTEGER
   37 term: VAR .

    ':'  shift, and go to state 51

    $default  reduce using rule 37 (term)


state 32

   12 params: '(' ')' .

    $default  reduce using rule 12 (params)


state 33

   13 params: '(' params_def . ')'

    ')'  shift, and go to state 52


state 34

   15 params_def: param_def .
   16           | param_def . ',' params_def

    ','  shift, and go to state 53

    $default  reduce using rule 15 (params_def)


state 35

   14 params: '(' params_exec . ')'

    ')'  shift, and go to state 54


state 36

   18 params_exec: param_exec .
   19            | param_exec . ',' params_exec

    ','  shift, and go to state 55

    $default  reduce using rule 18 (params_exec)


state 37

   20 param_exec: exp .
   31 exp: exp . '+' factor
   32    | exp . '-' factor

    '+'  shift, and go to state 27
    '-'  shift, and go to state 28

    $default  reduce using rule 20 (param_exec)


state 38

    9 def_var: VAR ':' INTEGER .

    $default  reduce using rule 9 (def_var)


state 39

   21 exec: VAR '<' '=' . exp

    INTEGER  shift, and go to state 1
    VAR      shift, and go to state 41

    exp     go to state 56
    factor  go to state 14
    term    go to state 15


state 40

   11 def_fun: VAR params ':' . @1 '(' ')'

    $default  reduce using rule 10 (@1)

    @1  go to state 57


state 41

   37 term: VAR .

    $default  reduce using rule 37 (term)


state 42

   29 if_head: IF '(' exp . ',' @4 stmt
   31 exp: exp . '+' factor
   32    | exp . '-' factor

    '+'  shift, and go to state 27
    '-'  shift, and go to state 28
    ','  shift, and go to state 58


state 43

   27 exec: WHILE @2 '(' . exp ',' @3 stmt ')'

    INTEGER  shift, and go to state 1
    VAR      shift, and go to state 41

    exp     go to state 59
    factor  go to state 14
    term    go to state 15


state 44

    6 stmt: '(' stmts ')' .

    $default  reduce using rule 6 (stmt)


state 45

    2 stmts: stmt ';' stmts .

    $default  reduce using rule 2 (stmts)


state 46

   23 exec: if_head ',' stmt . ')'

    ')'  shift, and go to state 60


state 47

   31 exp: exp '+' factor .
   34 factor: factor . '*' term
   35       | factor . '/' term

    '*'  shift, and go to state 29
    '/'  shift, and go to state 30

    $default  reduce using rule 31 (exp)


state 48

   32 exp: exp '-' factor .
   34 factor: factor . '*' term
   35       | factor . '/' term

    '*'  shift, and go to state 29
    '/'  shift, and go to state 30

    $default  reduce using rule 32 (exp)


state 49

   34 factor: factor '*' term .

    $default  reduce using rule 34 (factor)


state 50

   35 factor: factor '/' term .

    $default  reduce using rule 35 (factor)


state 51

   17 param_def: VAR ':' . INTEGER

    INTEGER  shift, and go to state 61


state 52

   13 params: '(' params_def ')' .

    $default  reduce using rule 13 (params)


state 53

   16 params_def: param_def ',' . params_def

    VAR  shift, and go to state 62

    params_def  go to state 63
    param_def   go to state 34


state 54

   14 params: '(' params_exec ')' .

    $default  reduce using rule 14 (params)


state 55

   19 params_exec: param_exec ',' . params_exec

    INTEGER  shift, and go to state 1
    VAR      shift, and go to state 41

    params_exec  go to state 64
    param_exec   go to state 36
    exp          go to state 37
    factor       go to state 14
    term         go to state 15


state 56

   21 exec: VAR '<' '=' exp .
   31 exp: exp . '+' factor
   32    | exp . '-' factor

    '+'  shift, and go to state 27
    '-'  shift, and go to state 28

    $default  reduce using rule 21 (exec)


state 57

   11 def_fun: VAR params ':' @1 . '(' ')'

    '('  shift, and go to state 65


state 58

   29 if_head: IF '(' exp ',' . @4 stmt

    $default  reduce using rule 28 (@4)

    @4  go to state 66


state 59

   27 exec: WHILE @2 '(' exp . ',' @3 stmt ')'
   31 exp: exp . '+' factor
   32    | exp . '-' factor

    '+'  shift, and go to state 27
    '-'  shift, and go to state 28
    ','  shift, and go to state 67


state 60

   23 exec: if_head ',' stmt ')' .

    $default  reduce using rule 23 (exec)


state 61

   17 param_def: VAR ':' INTEGER .

    $default  reduce using rule 17 (param_def)


state 62

   17 param_def: VAR . ':' INTEGER

    ':'  shift, and go to state 51


state 63

   16 params_def: param_def ',' params_def .

    $default  reduce using rule 16 (params_def)


state 64

   19 params_exec: param_exec ',' params_exec .

    $default  reduce using rule 19 (params_exec)


state 65

   11 def_fun: VAR params ':' @1 '(' . ')'

    ')'  shift, and go to state 68


state 66

   29 if_head: IF '(' exp ',' @4 . stmt

    INTEGER  shift, and go to state 1
    VAR      shift, and go to state 2
    IF       shift, and go to state 3
    WHILE    shift, and go to state 4
    '('      shift, and go to state 5

    stmt     go to state 69
    def      go to state 8
    def_var  go to state 9
    def_fun  go to state 10
    exec     go to state 11
    if_head  go to state 12
    exp      go to state 13
    factor   go to state 14
    term     go to state 15


state 67

   27 exec: WHILE @2 '(' exp ',' . @3 stmt ')'

    $default  reduce using rule 26 (@3)

    @3  go to state 70


state 68

   11 def_fun: VAR params ':' @1 '(' ')' .

    $default  reduce using rule 11 (def_fun)


state 69

   29 if_head: IF '(' exp ',' @4 stmt .

    $default  reduce using rule 29 (if_head)


state 70

   27 exec: WHILE @2 '(' exp ',' @3 . stmt ')'

    INTEGER  shift, and go to state 1
    VAR      shift, and go to state 2
    IF       shift, and go to state 3
    WHILE    shift, and go to state 4
    '('      shift, and go to state 5

    stmt     go to state 71
    def      go to state 8
    def_var  go to state 9
    def_fun  go to state 10
    exec     go to state 11
    if_head  go to state 12
    exp      go to state 13
    factor   go to state 14
    term     go to state 15


state 71

   27 exec: WHILE @2 '(' exp ',' @3 stmt . ')'

    ')'  shift, and go to state 72


state 72

   27 exec: WHILE @2 '(' exp ',' @3 stmt ')' .

    $default  reduce using rule 27 (exec)
