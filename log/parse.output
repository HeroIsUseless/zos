Terminals which are not used

   NUMBER
   EOL


Grammar

    0 $accept: stmts $end

    1 stmts: /* empty */
    2      | stmt ';' stmts

    3 stmt: def
    4     | exec
    5     | exp
    6     | '(' stmts ')'

    7 def: def_var
    8    | def_fun

    9 def_var: VAR ':' INTEGER
   10        | VAR ':' PATH

   11 @1: /* empty */

   12 def_fun: VAR params ':' @1 '(' stmts ')'

   13 params: '(' ')'
   14       | '(' params_def ')'
   15       | '(' params_exec ')'

   16 params_def: param_def
   17           | param_def ',' params_def

   18 param_def: VAR ':' INTEGER

   19 params_exec: param_exec
   20            | param_exec ',' params_exec

   21 param_exec: exp

   22 exec: VAR '<' '=' exp
   23     | VAR params
   24     | if_head ',' stmt ')'
   25     | if_head ')'

   26 @2: /* empty */

   27 @3: /* empty */

   28 exec: WHILE @2 '(' exp ',' @3 stmt ')'

   29 @4: /* empty */

   30 if_head: IF '(' exp ',' @4 stmt

   31 exp: factor
   32    | exp '+' factor
   33    | exp '-' factor

   34 factor: term
   35       | factor '*' term
   36       | factor '/' term

   37 term: INTEGER
   38     | VAR


Terminals, with rules where they appear

$end (0) 0
'(' (40) 6 12 13 14 15 28 30
')' (41) 6 12 13 14 15 24 25 28
'*' (42) 35
'+' (43) 32
',' (44) 17 20 24 28 30
'-' (45) 33
'/' (47) 36
':' (58) 9 10 12 18
';' (59) 2
'<' (60) 22
'=' (61) 22
error (256)
NUMBER (258)
INTEGER (259) 9 18 37
VAR (260) 9 10 12 18 22 23 38
PATH (261) 10
IF (262) 30
WHILE (263) 28
EOL (264)


Nonterminals, with rules where they appear

$accept (21)
    on left: 0
stmts (22)
    on left: 1 2, on right: 0 2 6 12
stmt (23)
    on left: 3 4 5 6, on right: 2 24 28 30
def (24)
    on left: 7 8, on right: 3
def_var (25)
    on left: 9 10, on right: 7
def_fun (26)
    on left: 12, on right: 8
@1 (27)
    on left: 11, on right: 12
params (28)
    on left: 13 14 15, on right: 12 23
params_def (29)
    on left: 16 17, on right: 14 17
param_def (30)
    on left: 18, on right: 16 17
params_exec (31)
    on left: 19 20, on right: 15 20
param_exec (32)
    on left: 21, on right: 19 20
exec (33)
    on left: 22 23 24 25 28, on right: 4
@2 (34)
    on left: 26, on right: 28
@3 (35)
    on left: 27, on right: 28
if_head (36)
    on left: 30, on right: 24 25
@4 (37)
    on left: 29, on right: 30
exp (38)
    on left: 31 32 33, on right: 5 21 22 28 30 32 33
factor (39)
    on left: 34 35 36, on right: 31 32 33 35 36
term (40)
    on left: 37 38, on right: 34 35 36


state 0

    0 $accept: . stmts $end

    INTEGER  shift, and go to state 1
    VAR      shift, and go to state 2
    IF       shift, and go to state 3
    WHILE    shift, and go to state 4
    '('      shift, and go to state 5

    $default  reduce using rule 1 (stmts)

    stmts    go to state 6
    stmt     go to state 7
    def      go to state 8
    def_var  go to state 9
    def_fun  go to state 10
    exec     go to state 11
    if_head  go to state 12
    exp      go to state 13
    factor   go to state 14
    term     go to state 15


state 1

   37 term: INTEGER .

    $default  reduce using rule 37 (term)


state 2

    9 def_var: VAR . ':' INTEGER
   10        | VAR . ':' PATH
   12 def_fun: VAR . params ':' @1 '(' stmts ')'
   22 exec: VAR . '<' '=' exp
   23     | VAR . params
   38 term: VAR .

    '('  shift, and go to state 16
    ':'  shift, and go to state 17
    '<'  shift, and go to state 18

    $default  reduce using rule 38 (term)

    params  go to state 19


state 3

   30 if_head: IF . '(' exp ',' @4 stmt

    '('  shift, and go to state 20


state 4

   28 exec: WHILE . @2 '(' exp ',' @3 stmt ')'

    $default  reduce using rule 26 (@2)

    @2  go to state 21


state 5

    6 stmt: '(' . stmts ')'

    INTEGER  shift, and go to state 1
    VAR      shift, and go to state 2
    IF       shift, and go to state 3
    WHILE    shift, and go to state 4
    '('      shift, and go to state 5

    $default  reduce using rule 1 (stmts)

    stmts    go to state 22
    stmt     go to state 7
    def      go to state 8
    def_var  go to state 9
    def_fun  go to state 10
    exec     go to state 11
    if_head  go to state 12
    exp      go to state 13
    factor   go to state 14
    term     go to state 15


state 6

    0 $accept: stmts . $end

    $end  shift, and go to state 23


state 7

    2 stmts: stmt . ';' stmts

    ';'  shift, and go to state 24


state 8

    3 stmt: def .

    $default  reduce using rule 3 (stmt)


state 9

    7 def: def_var .

    $default  reduce using rule 7 (def)


state 10

    8 def: def_fun .

    $default  reduce using rule 8 (def)


state 11

    4 stmt: exec .

    $default  reduce using rule 4 (stmt)


state 12

   24 exec: if_head . ',' stmt ')'
   25     | if_head . ')'

    ')'  shift, and go to state 25
    ','  shift, and go to state 26


state 13

    5 stmt: exp .
   32 exp: exp . '+' factor
   33    | exp . '-' factor

    '+'  shift, and go to state 27
    '-'  shift, and go to state 28

    $default  reduce using rule 5 (stmt)


state 14

   31 exp: factor .
   35 factor: factor . '*' term
   36       | factor . '/' term

    '*'  shift, and go to state 29
    '/'  shift, and go to state 30

    $default  reduce using rule 31 (exp)


state 15

   34 factor: term .

    $default  reduce using rule 34 (factor)


state 16

   13 params: '(' . ')'
   14       | '(' . params_def ')'
   15       | '(' . params_exec ')'

    INTEGER  shift, and go to state 1
    VAR      shift, and go to state 31
    ')'      shift, and go to state 32

    params_def   go to state 33
    param_def    go to state 34
    params_exec  go to state 35
    param_exec   go to state 36
    exp          go to state 37
    factor       go to state 14
    term         go to state 15


state 17

    9 def_var: VAR ':' . INTEGER
   10        | VAR ':' . PATH

    INTEGER  shift, and go to state 38
    PATH     shift, and go to state 39


state 18

   22 exec: VAR '<' . '=' exp

    '='  shift, and go to state 40


state 19

   12 def_fun: VAR params . ':' @1 '(' stmts ')'
   23 exec: VAR params .

    ':'  shift, and go to state 41

    $default  reduce using rule 23 (exec)


state 20

   30 if_head: IF '(' . exp ',' @4 stmt

    INTEGER  shift, and go to state 1
    VAR      shift, and go to state 42

    exp     go to state 43
    factor  go to state 14
    term    go to state 15


state 21

   28 exec: WHILE @2 . '(' exp ',' @3 stmt ')'

    '('  shift, and go to state 44


state 22

    6 stmt: '(' stmts . ')'

    ')'  shift, and go to state 45


state 23

    0 $accept: stmts $end .

    $default  accept


state 24

    2 stmts: stmt ';' . stmts

    INTEGER  shift, and go to state 1
    VAR      shift, and go to state 2
    IF       shift, and go to state 3
    WHILE    shift, and go to state 4
    '('      shift, and go to state 5

    $default  reduce using rule 1 (stmts)

    stmts    go to state 46
    stmt     go to state 7
    def      go to state 8
    def_var  go to state 9
    def_fun  go to state 10
    exec     go to state 11
    if_head  go to state 12
    exp      go to state 13
    factor   go to state 14
    term     go to state 15


state 25

   25 exec: if_head ')' .

    $default  reduce using rule 25 (exec)


state 26

   24 exec: if_head ',' . stmt ')'

    INTEGER  shift, and go to state 1
    VAR      shift, and go to state 2
    IF       shift, and go to state 3
    WHILE    shift, and go to state 4
    '('      shift, and go to state 5

    stmt     go to state 47
    def      go to state 8
    def_var  go to state 9
    def_fun  go to state 10
    exec     go to state 11
    if_head  go to state 12
    exp      go to state 13
    factor   go to state 14
    term     go to state 15


state 27

   32 exp: exp '+' . factor

    INTEGER  shift, and go to state 1
    VAR      shift, and go to state 42

    factor  go to state 48
    term    go to state 15


state 28

   33 exp: exp '-' . factor

    INTEGER  shift, and go to state 1
    VAR      shift, and go to state 42

    factor  go to state 49
    term    go to state 15


state 29

   35 factor: factor '*' . term

    INTEGER  shift, and go to state 1
    VAR      shift, and go to state 42

    term  go to state 50


state 30

   36 factor: factor '/' . term

    INTEGER  shift, and go to state 1
    VAR      shift, and go to state 42

    term  go to state 51


state 31

   18 param_def: VAR . ':' INTEGER
   38 term: VAR .

    ':'  shift, and go to state 52

    $default  reduce using rule 38 (term)


state 32

   13 params: '(' ')' .

    $default  reduce using rule 13 (params)


state 33

   14 params: '(' params_def . ')'

    ')'  shift, and go to state 53


state 34

   16 params_def: param_def .
   17           | param_def . ',' params_def

    ','  shift, and go to state 54

    $default  reduce using rule 16 (params_def)


state 35

   15 params: '(' params_exec . ')'

    ')'  shift, and go to state 55


state 36

   19 params_exec: param_exec .
   20            | param_exec . ',' params_exec

    ','  shift, and go to state 56

    $default  reduce using rule 19 (params_exec)


state 37

   21 param_exec: exp .
   32 exp: exp . '+' factor
   33    | exp . '-' factor

    '+'  shift, and go to state 27
    '-'  shift, and go to state 28

    $default  reduce using rule 21 (param_exec)


state 38

    9 def_var: VAR ':' INTEGER .

    $default  reduce using rule 9 (def_var)


state 39

   10 def_var: VAR ':' PATH .

    $default  reduce using rule 10 (def_var)


state 40

   22 exec: VAR '<' '=' . exp

    INTEGER  shift, and go to state 1
    VAR      shift, and go to state 42

    exp     go to state 57
    factor  go to state 14
    term    go to state 15


state 41

   12 def_fun: VAR params ':' . @1 '(' stmts ')'

    $default  reduce using rule 11 (@1)

    @1  go to state 58


state 42

   38 term: VAR .

    $default  reduce using rule 38 (term)


state 43

   30 if_head: IF '(' exp . ',' @4 stmt
   32 exp: exp . '+' factor
   33    | exp . '-' factor

    '+'  shift, and go to state 27
    '-'  shift, and go to state 28
    ','  shift, and go to state 59


state 44

   28 exec: WHILE @2 '(' . exp ',' @3 stmt ')'

    INTEGER  shift, and go to state 1
    VAR      shift, and go to state 42

    exp     go to state 60
    factor  go to state 14
    term    go to state 15


state 45

    6 stmt: '(' stmts ')' .

    $default  reduce using rule 6 (stmt)


state 46

    2 stmts: stmt ';' stmts .

    $default  reduce using rule 2 (stmts)


state 47

   24 exec: if_head ',' stmt . ')'

    ')'  shift, and go to state 61


state 48

   32 exp: exp '+' factor .
   35 factor: factor . '*' term
   36       | factor . '/' term

    '*'  shift, and go to state 29
    '/'  shift, and go to state 30

    $default  reduce using rule 32 (exp)


state 49

   33 exp: exp '-' factor .
   35 factor: factor . '*' term
   36       | factor . '/' term

    '*'  shift, and go to state 29
    '/'  shift, and go to state 30

    $default  reduce using rule 33 (exp)


state 50

   35 factor: factor '*' term .

    $default  reduce using rule 35 (factor)


state 51

   36 factor: factor '/' term .

    $default  reduce using rule 36 (factor)


state 52

   18 param_def: VAR ':' . INTEGER

    INTEGER  shift, and go to state 62


state 53

   14 params: '(' params_def ')' .

    $default  reduce using rule 14 (params)


state 54

   17 params_def: param_def ',' . params_def

    VAR  shift, and go to state 63

    params_def  go to state 64
    param_def   go to state 34


state 55

   15 params: '(' params_exec ')' .

    $default  reduce using rule 15 (params)


state 56

   20 params_exec: param_exec ',' . params_exec

    INTEGER  shift, and go to state 1
    VAR      shift, and go to state 42

    params_exec  go to state 65
    param_exec   go to state 36
    exp          go to state 37
    factor       go to state 14
    term         go to state 15


state 57

   22 exec: VAR '<' '=' exp .
   32 exp: exp . '+' factor
   33    | exp . '-' factor

    '+'  shift, and go to state 27
    '-'  shift, and go to state 28

    $default  reduce using rule 22 (exec)


state 58

   12 def_fun: VAR params ':' @1 . '(' stmts ')'

    '('  shift, and go to state 66


state 59

   30 if_head: IF '(' exp ',' . @4 stmt

    $default  reduce using rule 29 (@4)

    @4  go to state 67


state 60

   28 exec: WHILE @2 '(' exp . ',' @3 stmt ')'
   32 exp: exp . '+' factor
   33    | exp . '-' factor

    '+'  shift, and go to state 27
    '-'  shift, and go to state 28
    ','  shift, and go to state 68


state 61

   24 exec: if_head ',' stmt ')' .

    $default  reduce using rule 24 (exec)


state 62

   18 param_def: VAR ':' INTEGER .

    $default  reduce using rule 18 (param_def)


state 63

   18 param_def: VAR . ':' INTEGER

    ':'  shift, and go to state 52


state 64

   17 params_def: param_def ',' params_def .

    $default  reduce using rule 17 (params_def)


state 65

   20 params_exec: param_exec ',' params_exec .

    $default  reduce using rule 20 (params_exec)


state 66

   12 def_fun: VAR params ':' @1 '(' . stmts ')'

    INTEGER  shift, and go to state 1
    VAR      shift, and go to state 2
    IF       shift, and go to state 3
    WHILE    shift, and go to state 4
    '('      shift, and go to state 5

    $default  reduce using rule 1 (stmts)

    stmts    go to state 69
    stmt     go to state 7
    def      go to state 8
    def_var  go to state 9
    def_fun  go to state 10
    exec     go to state 11
    if_head  go to state 12
    exp      go to state 13
    factor   go to state 14
    term     go to state 15


state 67

   30 if_head: IF '(' exp ',' @4 . stmt

    INTEGER  shift, and go to state 1
    VAR      shift, and go to state 2
    IF       shift, and go to state 3
    WHILE    shift, and go to state 4
    '('      shift, and go to state 5

    stmt     go to state 70
    def      go to state 8
    def_var  go to state 9
    def_fun  go to state 10
    exec     go to state 11
    if_head  go to state 12
    exp      go to state 13
    factor   go to state 14
    term     go to state 15


state 68

   28 exec: WHILE @2 '(' exp ',' . @3 stmt ')'

    $default  reduce using rule 27 (@3)

    @3  go to state 71


state 69

   12 def_fun: VAR params ':' @1 '(' stmts . ')'

    ')'  shift, and go to state 72


state 70

   30 if_head: IF '(' exp ',' @4 stmt .

    $default  reduce using rule 30 (if_head)


state 71

   28 exec: WHILE @2 '(' exp ',' @3 . stmt ')'

    INTEGER  shift, and go to state 1
    VAR      shift, and go to state 2
    IF       shift, and go to state 3
    WHILE    shift, and go to state 4
    '('      shift, and go to state 5

    stmt     go to state 73
    def      go to state 8
    def_var  go to state 9
    def_fun  go to state 10
    exec     go to state 11
    if_head  go to state 12
    exp      go to state 13
    factor   go to state 14
    term     go to state 15


state 72

   12 def_fun: VAR params ':' @1 '(' stmts ')' .

    $default  reduce using rule 12 (def_fun)


state 73

   28 exec: WHILE @2 '(' exp ',' @3 stmt . ')'

    ')'  shift, and go to state 74


state 74

   28 exec: WHILE @2 '(' exp ',' @3 stmt ')' .

    $default  reduce using rule 28 (exec)
