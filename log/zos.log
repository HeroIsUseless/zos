     1                                  [bits 32]
     2                                  ORG 0x280000
     3 00000000 B840010000              mov eax, 320
     4 00000005 50                      push eax
     5 00000006 EB04                    jmp main_z_screenWidth$next
     6 00000008 00000000                main_z_screenWidth: dd 0
     7                                  main_z_screenWidth$next:
     8 0000000C 58                      pop eax
     9 0000000D A3[08000000]            mov [main_z_screenWidth], eax
    10 00000012 B8C8000000              mov eax, 200
    11 00000017 50                      push eax
    12 00000018 EB04                    jmp main_z_screenHeight$next
    13 0000001A 00000000                main_z_screenHeight: dd 0
    14                                  main_z_screenHeight$next:
    15 0000001E 58                      pop eax
    16 0000001F A3[1A000000]            mov [main_z_screenHeight], eax
    17 00000024 B800000A00              mov eax, 0x000a0000
    18 00000029 50                      push eax
    19 0000002A EB04                    jmp main_z_addrVram$next
    20 0000002C 00000000                main_z_addrVram: dd 0
    21                                  main_z_addrVram$next:
    22 00000030 58                      pop eax
    23 00000031 A3[2C000000]            mov [main_z_addrVram], eax
    24 00000036 B800E02400              mov eax, 0x0024e000
    25 0000003B 50                      push eax
    26 0000003C EB04                    jmp main_z_addrPM$next
    27 0000003E 00000000                main_z_addrPM: dd 0
    28                                  main_z_addrPM$next:
    29 00000042 58                      pop eax
    30 00000043 A3[3E000000]            mov [main_z_addrPM], eax
    31 00000048 B800E02600              mov eax, 0x0026e000
    32 0000004D 50                      push eax
    33 0000004E EB04                    jmp main_z_addrPDT$next
    34 00000050 00000000                main_z_addrPDT: dd 0
    35                                  main_z_addrPDT$next:
    36 00000054 58                      pop eax
    37 00000055 A3[50000000]            mov [main_z_addrPDT], eax
    38 0000005A B800F82600              mov eax, 0x0026f800
    39 0000005F 50                      push eax
    40 00000060 EB04                    jmp main_z_addrIDT$next
    41 00000062 00000000                main_z_addrIDT: dd 0
    42                                  main_z_addrIDT$next:
    43 00000066 58                      pop eax
    44 00000067 A3[62000000]            mov [main_z_addrIDT], eax
    45 0000006C B800002700              mov eax, 0x00270000
    46 00000071 50                      push eax
    47 00000072 EB04                    jmp main_z_addrGDT$next
    48 00000074 00000000                main_z_addrGDT: dd 0
    49                                  main_z_addrGDT$next:
    50 00000078 58                      pop eax
    51 00000079 A3[74000000]            mov [main_z_addrGDT], eax
    52                                  
    53                                  ;function
    54 0000007E EB0E                    jmp main_z_run_once$next
    55                                  main_z_run_once:
    56 00000080 5D                      pop ebp
    57 00000081 55                      push ebp
    58 00000082 A1[2C000000]            mov eax, [main_z_addrVram]
    59 00000087 50                      push eax
    60 00000088 E8B4010000              call test_z_draw
    61 0000008D C3                      ret
    62                                  main_z_run_once$next:
    63                                  
    64                                  ;function
    65 0000008E EB08                    jmp main_z_run_loop$next
    66                                  main_z_run_loop:
    67 00000090 5D                      pop ebp
    68 00000091 55                      push ebp
    69 00000092 E802030000              call kernel_z_halt
    70 00000097 C3                      ret
    71                                  main_z_run_loop$next:
    72                                  
    73                                  ;function
    74 00000098 EB2C                    jmp memory_z_set_1byte$next
    75                                  memory_z_set_1byte:
    76                                  ;param
    77 0000009A EB04                    jmp memory_z_set_1byte_val$next
    78 0000009C 00000000                memory_z_set_1byte_val: dd 0
    79                                  memory_z_set_1byte_val$next:
    80                                  ;param
    81 000000A0 EB04                    jmp memory_z_set_1byte_addr$next
    82 000000A2 00000000                memory_z_set_1byte_addr: dd 0
    83                                  memory_z_set_1byte_addr$next:
    84 000000A6 5D                      pop ebp
    85 000000A7 58                      pop eax
    86 000000A8 A3[A2000000]            mov [memory_z_set_1byte_addr], eax
    87 000000AD 58                      pop eax
    88 000000AE A3[9C000000]            mov [memory_z_set_1byte_val], eax
    89 000000B3 55                      push ebp
    90 000000B4 A1[9C000000]            mov eax, [memory_z_set_1byte_val]
    91 000000B9 50                      push eax
    92 000000BA A1[A2000000]            mov eax, [memory_z_set_1byte_addr]
    93 000000BF 50                      push eax
    94 000000C0 E8BE020000              call kernel_z_setMem_1byte
    95 000000C5 C3                      ret
    96                                  memory_z_set_1byte$next:
    97                                  
    98                                  ;function
    99 000000C6 EB2C                    jmp memory_z_set_2byte$next
   100                                  memory_z_set_2byte:
   101                                  ;param
   102 000000C8 EB04                    jmp memory_z_set_2byte_val$next
   103 000000CA 00000000                memory_z_set_2byte_val: dd 0
   104                                  memory_z_set_2byte_val$next:
   105                                  ;param
   106 000000CE EB04                    jmp memory_z_set_2byte_addr$next
   107 000000D0 00000000                memory_z_set_2byte_addr: dd 0
   108                                  memory_z_set_2byte_addr$next:
   109 000000D4 5D                      pop ebp
   110 000000D5 58                      pop eax
   111 000000D6 A3[D0000000]            mov [memory_z_set_2byte_addr], eax
   112 000000DB 58                      pop eax
   113 000000DC A3[CA000000]            mov [memory_z_set_2byte_val], eax
   114 000000E1 55                      push ebp
   115 000000E2 A1[CA000000]            mov eax, [memory_z_set_2byte_val]
   116 000000E7 50                      push eax
   117 000000E8 A1[D0000000]            mov eax, [memory_z_set_2byte_addr]
   118 000000ED 50                      push eax
   119 000000EE E897020000              call kernel_z_setMem_2byte
   120 000000F3 C3                      ret
   121                                  memory_z_set_2byte$next:
   122                                  
   123                                  ;function
   124 000000F4 EB7D                    jmp draw_z_pixel$next
   125                                  draw_z_pixel:
   126                                  ;param
   127 000000F6 EB04                    jmp draw_z_pixel_x$next
   128 000000F8 00000000                draw_z_pixel_x: dd 0
   129                                  draw_z_pixel_x$next:
   130                                  ;param
   131 000000FC EB04                    jmp draw_z_pixel_y$next
   132 000000FE 00000000                draw_z_pixel_y: dd 0
   133                                  draw_z_pixel_y$next:
   134                                  ;param
   135 00000102 EB04                    jmp draw_z_pixel_color$next
   136 00000104 00000000                draw_z_pixel_color: dd 0
   137                                  draw_z_pixel_color$next:
   138                                  ;param
   139 00000108 EB04                    jmp draw_z_pixel_screenWidth$next
   140 0000010A 00000000                draw_z_pixel_screenWidth: dd 0
   141                                  draw_z_pixel_screenWidth$next:
   142                                  ;param
   143 0000010E EB04                    jmp draw_z_pixel_vramAddr$next
   144 00000110 00000000                draw_z_pixel_vramAddr: dd 0
   145                                  draw_z_pixel_vramAddr$next:
   146 00000114 5D                      pop ebp
   147 00000115 58                      pop eax
   148 00000116 A3[10010000]            mov [draw_z_pixel_vramAddr], eax
   149 0000011B 58                      pop eax
   150 0000011C A3[0A010000]            mov [draw_z_pixel_screenWidth], eax
   151 00000121 58                      pop eax
   152 00000122 A3[04010000]            mov [draw_z_pixel_color], eax
   153 00000127 58                      pop eax
   154 00000128 A3[FE000000]            mov [draw_z_pixel_y], eax
   155 0000012D 58                      pop eax
   156 0000012E A3[F8000000]            mov [draw_z_pixel_x], eax
   157 00000133 55                      push ebp
   158 00000134 A1[FE000000]            mov eax, [draw_z_pixel_y]
   159 00000139 50                      push eax
   160 0000013A A1[0A010000]            mov eax, [draw_z_pixel_screenWidth]
   161 0000013F 5B                      pop ebx
   162 00000140 F7E3                    mul ebx
   163 00000142 50                      push eax
   164 00000143 A1[F8000000]            mov eax, [draw_z_pixel_x]
   165 00000148 5B                      pop ebx
   166 00000149 01D8                    add eax, ebx
   167 0000014B 50                      push eax
   168 0000014C A1[10010000]            mov eax, [draw_z_pixel_vramAddr]
   169 00000151 5B                      pop ebx
   170 00000152 01D8                    add eax, ebx
   171 00000154 50                      push eax
   172 00000155 EB04                    jmp draw_z_pixel_addr$next
   173 00000157 00000000                draw_z_pixel_addr: dd 0
   174                                  draw_z_pixel_addr$next:
   175 0000015B 58                      pop eax
   176 0000015C A3[57010000]            mov [draw_z_pixel_addr], eax
   177 00000161 A1[04010000]            mov eax, [draw_z_pixel_color]
   178 00000166 50                      push eax
   179 00000167 A1[57010000]            mov eax, [draw_z_pixel_addr]
   180 0000016C 50                      push eax
   181 0000016D E828FFFFFF              call memory_z_set_1byte
   182 00000172 C3                      ret
   183                                  draw_z_pixel$next:
   184                                  
   185                                  ;function
   186 00000173 E9C4000000              jmp draw_z_hLine$next
   187                                  draw_z_hLine:
   188                                  ;param
   189 00000178 EB04                    jmp draw_z_hLine_bx$next
   190 0000017A 00000000                draw_z_hLine_bx: dd 0
   191                                  draw_z_hLine_bx$next:
   192                                  ;param
   193 0000017E EB04                    jmp draw_z_hLine_by$next
   194 00000180 00000000                draw_z_hLine_by: dd 0
   195                                  draw_z_hLine_by$next:
   196                                  ;param
   197 00000184 EB04                    jmp draw_z_hLine_ex$next
   198 00000186 00000000                draw_z_hLine_ex: dd 0
   199                                  draw_z_hLine_ex$next:
   200                                  ;param
   201 0000018A EB04                    jmp draw_z_hLine_ey$next
   202 0000018C 00000000                draw_z_hLine_ey: dd 0
   203                                  draw_z_hLine_ey$next:
   204                                  ;param
   205 00000190 EB04                    jmp draw_z_hLine_color$next
   206 00000192 00000000                draw_z_hLine_color: dd 0
   207                                  draw_z_hLine_color$next:
   208                                  ;param
   209 00000196 EB04                    jmp draw_z_hLine_screenWidth$next
   210 00000198 00000000                draw_z_hLine_screenWidth: dd 0
   211                                  draw_z_hLine_screenWidth$next:
   212                                  ;param
   213 0000019C EB04                    jmp draw_z_hLine_vramAddr$next
   214 0000019E 00000000                draw_z_hLine_vramAddr: dd 0
   215                                  draw_z_hLine_vramAddr$next:
   216 000001A2 5D                      pop ebp
   217 000001A3 58                      pop eax
   218 000001A4 A3[9E010000]            mov [draw_z_hLine_vramAddr], eax
   219 000001A9 58                      pop eax
   220 000001AA A3[98010000]            mov [draw_z_hLine_screenWidth], eax
   221 000001AF 58                      pop eax
   222 000001B0 A3[92010000]            mov [draw_z_hLine_color], eax
   223 000001B5 58                      pop eax
   224 000001B6 A3[8C010000]            mov [draw_z_hLine_ey], eax
   225 000001BB 58                      pop eax
   226 000001BC A3[86010000]            mov [draw_z_hLine_ex], eax
   227 000001C1 58                      pop eax
   228 000001C2 A3[80010000]            mov [draw_z_hLine_by], eax
   229 000001C7 58                      pop eax
   230 000001C8 A3[7A010000]            mov [draw_z_hLine_bx], eax
   231 000001CD 55                      push ebp
   232 000001CE A1[7A010000]            mov eax, [draw_z_hLine_bx]
   233 000001D3 50                      push eax
   234 000001D4 EB04                    jmp draw_z_hLine_i$next
   235 000001D6 00000000                draw_z_hLine_i: dd 0
   236                                  draw_z_hLine_i$next:
   237 000001DA 58                      pop eax
   238 000001DB A3[D6010000]            mov [draw_z_hLine_i], eax
   239                                  ; while start
   240                                  draw_z_hLine_while$1_start:
   241 000001E0 A1[D6010000]            mov eax, [draw_z_hLine_i]
   242 000001E5 50                      push eax
   243 000001E6 A1[86010000]            mov eax, [draw_z_hLine_ex]
   244 000001EB 50                      push eax
   245 000001EC 5B                      pop ebx
   246 000001ED 58                      pop eax
   247 000001EE 39D8                    cmp eax, ebx
   248 000001F0 7607                    jbe draw_z_hLine_while$1_lessequal@true$1
   249 000001F2 B800000000              mov eax, 0
   250 000001F7 EB05                    jmp draw_z_hLine_while$1_lessequal@false$1
   251                                  draw_z_hLine_while$1_lessequal@true$1:
   252 000001F9 B801000000              mov eax, 1
   253                                  draw_z_hLine_while$1_lessequal@false$1:
   254 000001FE 83F800                  cmp eax, 0
   255 00000201 7438                    je draw_z_hLine_while$1_end
   256 00000203 A1[D6010000]            mov eax, [draw_z_hLine_i]
   257 00000208 50                      push eax
   258 00000209 A1[80010000]            mov eax, [draw_z_hLine_by]
   259 0000020E 50                      push eax
   260 0000020F A1[92010000]            mov eax, [draw_z_hLine_color]
   261 00000214 50                      push eax
   262 00000215 A1[98010000]            mov eax, [draw_z_hLine_screenWidth]
   263 0000021A 50                      push eax
   264 0000021B A1[9E010000]            mov eax, [draw_z_hLine_vramAddr]
   265 00000220 50                      push eax
   266 00000221 E8D0FEFFFF              call draw_z_pixel
   267 00000226 A1[D6010000]            mov eax, [draw_z_hLine_i]
   268 0000022B 50                      push eax
   269 0000022C B801000000              mov eax, 1
   270 00000231 5B                      pop ebx
   271 00000232 01D8                    add eax, ebx
   272 00000234 A3[D6010000]            mov [draw_z_hLine_i], eax
   273 00000239 EBA5                    jmp draw_z_hLine_while$1_start
   274                                  draw_z_hLine_while$1_end:
   275                                  ;while end
   276 0000023B C3                      ret
   277                                  draw_z_hLine$next:
   278                                  
   279                                  ;function
   280 0000023C E940010000              jmp test_z_draw$next
   281                                  test_z_draw:
   282                                  ;param
   283 00000241 EB04                    jmp test_z_draw_addrVram$next
   284 00000243 00000000                test_z_draw_addrVram: dd 0
   285                                  test_z_draw_addrVram$next:
   286 00000247 5D                      pop ebp
   287 00000248 58                      pop eax
   288 00000249 A3[43020000]            mov [test_z_draw_addrVram], eax
   289 0000024E 55                      push ebp
   290 0000024F B800000000              mov eax, 0
   291 00000254 50                      push eax
   292 00000255 EB04                    jmp test_z_draw_i$next
   293 00000257 00000000                test_z_draw_i: dd 0
   294                                  test_z_draw_i$next:
   295 0000025B 58                      pop eax
   296 0000025C A3[57020000]            mov [test_z_draw_i], eax
   297                                  ; while start
   298                                  test_z_draw_while$1_start:
   299 00000261 A1[57020000]            mov eax, [test_z_draw_i]
   300 00000266 50                      push eax
   301 00000267 B82C010000              mov eax, 300
   302 0000026C 50                      push eax
   303 0000026D 5B                      pop ebx
   304 0000026E 58                      pop eax
   305 0000026F 39D8                    cmp eax, ebx
   306 00000271 7207                    jb test_z_draw_while$1_less@true$1
   307 00000273 B800000000              mov eax, 0
   308 00000278 EB05                    jmp test_z_draw_while$1_less@false$1
   309                                  test_z_draw_while$1_less@true$1:
   310 0000027A B801000000              mov eax, 1
   311                                  test_z_draw_while$1_less@false$1:
   312 0000027F 83F800                  cmp eax, 0
   313 00000282 7438                    je test_z_draw_while$1_end
   314 00000284 A1[57020000]            mov eax, [test_z_draw_i]
   315 00000289 50                      push eax
   316 0000028A A1[57020000]            mov eax, [test_z_draw_i]
   317 0000028F 50                      push eax
   318 00000290 A1[57020000]            mov eax, [test_z_draw_i]
   319 00000295 50                      push eax
   320 00000296 B840010000              mov eax, 320
   321 0000029B 50                      push eax
   322 0000029C A1[43020000]            mov eax, [test_z_draw_addrVram]
   323 000002A1 50                      push eax
   324 000002A2 E84FFEFFFF              call draw_z_pixel
   325 000002A7 A1[57020000]            mov eax, [test_z_draw_i]
   326 000002AC 50                      push eax
   327 000002AD B801000000              mov eax, 1
   328 000002B2 5B                      pop ebx
   329 000002B3 01D8                    add eax, ebx
   330 000002B5 A3[57020000]            mov [test_z_draw_i], eax
   331 000002BA EBA5                    jmp test_z_draw_while$1_start
   332                                  test_z_draw_while$1_end:
   333                                  ;while end
   334 000002BC B800000000              mov eax, 0
   335 000002C1 50                      push eax
   336 000002C2 EB04                    jmp test_z_draw_x$next
   337 000002C4 00000000                test_z_draw_x: dd 0
   338                                  test_z_draw_x$next:
   339 000002C8 58                      pop eax
   340 000002C9 A3[C4020000]            mov [test_z_draw_x], eax
   341 000002CE B800000000              mov eax, 0
   342 000002D3 50                      push eax
   343 000002D4 EB04                    jmp test_z_draw_y$next
   344 000002D6 00000000                test_z_draw_y: dd 0
   345                                  test_z_draw_y$next:
   346 000002DA 58                      pop eax
   347 000002DB A3[D6020000]            mov [test_z_draw_y], eax
   348                                  ; while start
   349                                  test_z_draw_while$2_start:
   350 000002E0 A1[D6020000]            mov eax, [test_z_draw_y]
   351 000002E5 50                      push eax
   352 000002E6 B8C8000000              mov eax, 200
   353 000002EB 50                      push eax
   354 000002EC 5B                      pop ebx
   355 000002ED 58                      pop eax
   356 000002EE 39D8                    cmp eax, ebx
   357 000002F0 7607                    jbe test_z_draw_while$2_lessequal@true$2
   358 000002F2 B800000000              mov eax, 0
   359 000002F7 EB05                    jmp test_z_draw_while$2_lessequal@false$2
   360                                  test_z_draw_while$2_lessequal@true$2:
   361 000002F9 B801000000              mov eax, 1
   362                                  test_z_draw_while$2_lessequal@false$2:
   363 000002FE 83F800                  cmp eax, 0
   364 00000301 747D                    je test_z_draw_while$2_end
   365 00000303 B800000000              mov eax, 0
   366 00000308 A3[C4020000]            mov [test_z_draw_x], eax
   367                                  ; while start
   368                                  test_z_draw_while$2_while$1_start:
   369 0000030D A1[C4020000]            mov eax, [test_z_draw_x]
   370 00000312 50                      push eax
   371 00000313 B840010000              mov eax, 320
   372 00000318 50                      push eax
   373 00000319 5B                      pop ebx
   374 0000031A 58                      pop eax
   375 0000031B 39D8                    cmp eax, ebx
   376 0000031D 7607                    jbe test_z_draw_while$2_while$1_lessequal@true$3
   377 0000031F B800000000              mov eax, 0
   378 00000324 EB05                    jmp test_z_draw_while$2_while$1_lessequal@false$3
   379                                  test_z_draw_while$2_while$1_lessequal@true$3:
   380 00000326 B801000000              mov eax, 1
   381                                  test_z_draw_while$2_while$1_lessequal@false$3:
   382 0000032B 83F800                  cmp eax, 0
   383 0000032E 7438                    je test_z_draw_while$2_while$1_end
   384 00000330 A1[C4020000]            mov eax, [test_z_draw_x]
   385 00000335 50                      push eax
   386 00000336 A1[D6020000]            mov eax, [test_z_draw_y]
   387 0000033B 50                      push eax
   388 0000033C A1[D6020000]            mov eax, [test_z_draw_y]
   389 00000341 50                      push eax
   390 00000342 B840010000              mov eax, 320
   391 00000347 50                      push eax
   392 00000348 A1[43020000]            mov eax, [test_z_draw_addrVram]
   393 0000034D 50                      push eax
   394 0000034E E8A3FDFFFF              call draw_z_pixel
   395 00000353 A1[C4020000]            mov eax, [test_z_draw_x]
   396 00000358 50                      push eax
   397 00000359 B801000000              mov eax, 1
   398 0000035E 5B                      pop ebx
   399 0000035F 01D8                    add eax, ebx
   400 00000361 A3[C4020000]            mov [test_z_draw_x], eax
   401 00000366 EBA5                    jmp test_z_draw_while$2_while$1_start
   402                                  test_z_draw_while$2_while$1_end:
   403                                  ;while end
   404 00000368 A1[D6020000]            mov eax, [test_z_draw_y]
   405 0000036D 50                      push eax
   406 0000036E B801000000              mov eax, 1
   407 00000373 5B                      pop ebx
   408 00000374 01D8                    add eax, ebx
   409 00000376 A3[D6020000]            mov [test_z_draw_y], eax
   410 0000037B E960FFFFFF              jmp test_z_draw_while$2_start
   411                                  test_z_draw_while$2_end:
   412                                  ;while end
   413 00000380 C3                      ret
   414                                  test_z_draw$next:
   415 00000381 EB18                    jmp main
   416                                  
   417                                  ; 读写内存
   418                                  ; kernel.z\setMem.1byte(val:dword, addr:dword)
   419                                  kernel_z_setMem_1byte:
   420 00000383 5D                        pop ebp
   421 00000384 5B                        pop ebx
   422 00000385 58                        pop eax
   423 00000386 55                        push ebp
   424 00000387 8803                      mov [ebx], al
   425 00000389 C3                      ret
   426                                  
   427                                  ; kernel.z\setMem.2byte(val:dword, addr:dword)
   428                                  kernel_z_setMem_2byte:
   429 0000038A 5D                        pop ebp
   430 0000038B 5B                        pop ebx
   431 0000038C 58                        pop eax
   432 0000038D 55                        push ebp
   433 0000038E 668903                    mov [ebx], ax
   434 00000391 C3                      ret
   435                                  
   436                                  ; kernel.z\setMem.4byte(val:dword, addr:dword)
   437                                  kernel_z_setMem_4byte:
   438 00000392 5D                        pop ebp
   439 00000393 5B                        pop ebx
   440 00000394 58                        pop eax
   441 00000395 55                        push ebp
   442 00000396 8903                      mov [ebx], eax
   443 00000398 C3                      ret
   444                                  
   445                                  ; kernel.z\halt()
   446                                  kernel_z_halt:
   447 00000399 F4                        hlt
   448 0000039A C3                      ret
   449                                  
   450                                  main:
   451 0000039B E8E0FCFFFF                call main_z_run_once
   452                                    .loop:
   453 000003A0 E8EBFCFFFF                  call main_z_run_loop
   454 000003A5 EBF9                      jmp .loop
   455                                  
