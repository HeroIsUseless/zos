     1                                  [bits 32]
     2                                  ORG 0x280000
     3 00000000 B840010000              mov eax, 320
     4 00000005 50                      push eax
     5 00000006 EB04                    jmp main_z_screenWidth$pass
     6 00000008 00000000                main_z_screenWidth: dd 0
     7                                  main_z_screenWidth$pass:
     8 0000000C 58                      pop eax
     9 0000000D A3[08000000]            mov [main_z_screenWidth], eax
    10                                  
    11 00000012 B8C8000000              mov eax, 200
    12 00000017 50                      push eax
    13 00000018 EB04                    jmp main_z_screenHeight$pass
    14 0000001A 00000000                main_z_screenHeight: dd 0
    15                                  main_z_screenHeight$pass:
    16 0000001E 58                      pop eax
    17 0000001F A3[1A000000]            mov [main_z_screenHeight], eax
    18                                  
    19 00000024 B800000A00              mov eax, 0x000a0000
    20 00000029 50                      push eax
    21 0000002A EB04                    jmp main_z_addrVram$pass
    22 0000002C 00000000                main_z_addrVram: dd 0
    23                                  main_z_addrVram$pass:
    24 00000030 58                      pop eax
    25 00000031 A3[2C000000]            mov [main_z_addrVram], eax
    26                                  
    27 00000036 B800E02400              mov eax, 0x0024e000
    28 0000003B 50                      push eax
    29 0000003C EB04                    jmp main_z_addrPM$pass
    30 0000003E 00000000                main_z_addrPM: dd 0
    31                                  main_z_addrPM$pass:
    32 00000042 58                      pop eax
    33 00000043 A3[3E000000]            mov [main_z_addrPM], eax
    34                                  
    35 00000048 B800E02600              mov eax, 0x0026e000
    36 0000004D 50                      push eax
    37 0000004E EB04                    jmp main_z_addrPDT$pass
    38 00000050 00000000                main_z_addrPDT: dd 0
    39                                  main_z_addrPDT$pass:
    40 00000054 58                      pop eax
    41 00000055 A3[50000000]            mov [main_z_addrPDT], eax
    42                                  
    43 0000005A B800F82600              mov eax, 0x0026f800
    44 0000005F 50                      push eax
    45 00000060 EB04                    jmp main_z_addrIDT$pass
    46 00000062 00000000                main_z_addrIDT: dd 0
    47                                  main_z_addrIDT$pass:
    48 00000066 58                      pop eax
    49 00000067 A3[62000000]            mov [main_z_addrIDT], eax
    50                                  
    51 0000006C B800002700              mov eax, 0x00270000
    52 00000071 50                      push eax
    53 00000072 EB04                    jmp main_z_addrGDT$pass
    54 00000074 00000000                main_z_addrGDT: dd 0
    55                                  main_z_addrGDT$pass:
    56 00000078 58                      pop eax
    57 00000079 A3[74000000]            mov [main_z_addrGDT], eax
    58                                  
    59                                  
    60                                  ;############[fun begin]run_once############
    61 0000007E EB18                    jmp main_z_run_once$pass
    62                                  main_z_run_once:
    63 00000080 5D                      pop ebp
    64 00000081 55                      push ebp
    65 00000082 A1[2C000000]            mov eax, [main_z_addrVram]
    66 00000087 50                      push eax
    67 00000088 E8313D0000              call test_z_draw
    68                                  
    69 0000008D E8843D0000              call GDT_z_init
    70                                  
    71 00000092 E8AC3E0000              call IDT_z_init
    72                                  
    73 00000097 C3                      ret
    74                                  main_z_run_once$pass:
    75                                  ;============[fun end]run_once=============
    76                                  
    77                                  
    78                                  ;############[fun begin]run_loop############
    79 00000098 EB08                    jmp main_z_run_loop$pass
    80                                  main_z_run_loop:
    81 0000009A 5D                      pop ebp
    82 0000009B 55                      push ebp
    83 0000009C E8A03F0000              call kernel_z_halt
    84                                  
    85 000000A1 C3                      ret
    86                                  main_z_run_loop$pass:
    87                                  ;============[fun end]run_loop=============
    88                                  
    89                                  
    90                                  
    91                                  ;############[fun begin]set_1byte############
    92 000000A2 EB2C                    jmp memory_z_set_1byte$pass
    93                                  memory_z_set_1byte:
    94 000000A4 5D                      pop ebp
    95                                  ;param: addr
    96 000000A5 EB04                    jmp memory_z_set_1byte_addr$pass
    97 000000A7 00000000                memory_z_set_1byte_addr: dd 0
    98                                  memory_z_set_1byte_addr$pass:
    99 000000AB 58                      pop eax
   100 000000AC A3[A7000000]            mov [memory_z_set_1byte_addr], eax
   101                                  ;param: val
   102 000000B1 EB04                    jmp memory_z_set_1byte_val$pass
   103 000000B3 00000000                memory_z_set_1byte_val: dd 0
   104                                  memory_z_set_1byte_val$pass:
   105 000000B7 58                      pop eax
   106 000000B8 A3[B3000000]            mov [memory_z_set_1byte_val], eax
   107 000000BD 55                      push ebp
   108 000000BE A1[B3000000]            mov eax, [memory_z_set_1byte_val]
   109 000000C3 50                      push eax
   110 000000C4 A1[A7000000]            mov eax, [memory_z_set_1byte_addr]
   111 000000C9 50                      push eax
   112 000000CA E85C3F0000              call kernel_z_setMem_1byte
   113                                  
   114 000000CF C3                      ret
   115                                  memory_z_set_1byte$pass:
   116                                  ;============[fun end]set_1byte=============
   117                                  
   118                                  
   119                                  ;############[fun begin]set_2byte############
   120 000000D0 EB2C                    jmp memory_z_set_2byte$pass
   121                                  memory_z_set_2byte:
   122 000000D2 5D                      pop ebp
   123                                  ;param: addr
   124 000000D3 EB04                    jmp memory_z_set_2byte_addr$pass
   125 000000D5 00000000                memory_z_set_2byte_addr: dd 0
   126                                  memory_z_set_2byte_addr$pass:
   127 000000D9 58                      pop eax
   128 000000DA A3[D5000000]            mov [memory_z_set_2byte_addr], eax
   129                                  ;param: val
   130 000000DF EB04                    jmp memory_z_set_2byte_val$pass
   131 000000E1 00000000                memory_z_set_2byte_val: dd 0
   132                                  memory_z_set_2byte_val$pass:
   133 000000E5 58                      pop eax
   134 000000E6 A3[E1000000]            mov [memory_z_set_2byte_val], eax
   135 000000EB 55                      push ebp
   136 000000EC A1[E1000000]            mov eax, [memory_z_set_2byte_val]
   137 000000F1 50                      push eax
   138 000000F2 A1[D5000000]            mov eax, [memory_z_set_2byte_addr]
   139 000000F7 50                      push eax
   140 000000F8 E8353F0000              call kernel_z_setMem_2byte
   141                                  
   142 000000FD C3                      ret
   143                                  memory_z_set_2byte$pass:
   144                                  ;============[fun end]set_2byte=============
   145                                  
   146                                  
   147                                  ;############[fun begin]set_4byte############
   148 000000FE EB2C                    jmp memory_z_set_4byte$pass
   149                                  memory_z_set_4byte:
   150 00000100 5D                      pop ebp
   151                                  ;param: addr
   152 00000101 EB04                    jmp memory_z_set_4byte_addr$pass
   153 00000103 00000000                memory_z_set_4byte_addr: dd 0
   154                                  memory_z_set_4byte_addr$pass:
   155 00000107 58                      pop eax
   156 00000108 A3[03010000]            mov [memory_z_set_4byte_addr], eax
   157                                  ;param: val
   158 0000010D EB04                    jmp memory_z_set_4byte_val$pass
   159 0000010F 00000000                memory_z_set_4byte_val: dd 0
   160                                  memory_z_set_4byte_val$pass:
   161 00000113 58                      pop eax
   162 00000114 A3[0F010000]            mov [memory_z_set_4byte_val], eax
   163 00000119 55                      push ebp
   164 0000011A A1[0F010000]            mov eax, [memory_z_set_4byte_val]
   165 0000011F 50                      push eax
   166 00000120 A1[03010000]            mov eax, [memory_z_set_4byte_addr]
   167 00000125 50                      push eax
   168 00000126 E80F3F0000              call kernel_z_setMem_4byte
   169                                  
   170 0000012B C3                      ret
   171                                  memory_z_set_4byte$pass:
   172                                  ;============[fun end]set_4byte=============
   173                                  
   174                                  
   175                                  
   176                                  ;############[fun begin]pixel############
   177 0000012C E983000000              jmp draw_z_pixel$pass
   178                                  draw_z_pixel:
   179 00000131 5D                      pop ebp
   180                                  ;param: vramAddr
   181 00000132 EB04                    jmp draw_z_pixel_vramAddr$pass
   182 00000134 00000000                draw_z_pixel_vramAddr: dd 0
   183                                  draw_z_pixel_vramAddr$pass:
   184 00000138 58                      pop eax
   185 00000139 A3[34010000]            mov [draw_z_pixel_vramAddr], eax
   186                                  ;param: screenWidth
   187 0000013E EB04                    jmp draw_z_pixel_screenWidth$pass
   188 00000140 00000000                draw_z_pixel_screenWidth: dd 0
   189                                  draw_z_pixel_screenWidth$pass:
   190 00000144 58                      pop eax
   191 00000145 A3[40010000]            mov [draw_z_pixel_screenWidth], eax
   192                                  ;param: color
   193 0000014A EB04                    jmp draw_z_pixel_color$pass
   194 0000014C 00000000                draw_z_pixel_color: dd 0
   195                                  draw_z_pixel_color$pass:
   196 00000150 58                      pop eax
   197 00000151 A3[4C010000]            mov [draw_z_pixel_color], eax
   198                                  ;param: y
   199 00000156 EB04                    jmp draw_z_pixel_y$pass
   200 00000158 00000000                draw_z_pixel_y: dd 0
   201                                  draw_z_pixel_y$pass:
   202 0000015C 58                      pop eax
   203 0000015D A3[58010000]            mov [draw_z_pixel_y], eax
   204                                  ;param: x
   205 00000162 EB04                    jmp draw_z_pixel_x$pass
   206 00000164 00000000                draw_z_pixel_x: dd 0
   207                                  draw_z_pixel_x$pass:
   208 00000168 58                      pop eax
   209 00000169 A3[64010000]            mov [draw_z_pixel_x], eax
   210 0000016E 55                      push ebp
   211 0000016F A1[58010000]            mov eax, [draw_z_pixel_y]
   212 00000174 50                      push eax
   213 00000175 A1[40010000]            mov eax, [draw_z_pixel_screenWidth]
   214 0000017A 50                      push eax
   215 0000017B 58                      pop eax
   216 0000017C 5B                      pop ebx
   217 0000017D F7E3                    mul ebx
   218 0000017F 50                      push eax
   219 00000180 A1[64010000]            mov eax, [draw_z_pixel_x]
   220 00000185 50                      push eax
   221 00000186 58                      pop eax
   222 00000187 5B                      pop ebx
   223 00000188 01D8                    add eax, ebx
   224 0000018A 50                      push eax
   225 0000018B A1[34010000]            mov eax, [draw_z_pixel_vramAddr]
   226 00000190 50                      push eax
   227 00000191 58                      pop eax
   228 00000192 5B                      pop ebx
   229 00000193 01D8                    add eax, ebx
   230 00000195 50                      push eax
   231 00000196 EB04                    jmp draw_z_pixel_addr$pass
   232 00000198 00000000                draw_z_pixel_addr: dd 0
   233                                  draw_z_pixel_addr$pass:
   234 0000019C 58                      pop eax
   235 0000019D A3[98010000]            mov [draw_z_pixel_addr], eax
   236                                  
   237 000001A2 A1[4C010000]            mov eax, [draw_z_pixel_color]
   238 000001A7 50                      push eax
   239 000001A8 A1[98010000]            mov eax, [draw_z_pixel_addr]
   240 000001AD 50                      push eax
   241 000001AE E8F1FEFFFF              call memory_z_set_1byte
   242                                  
   243 000001B3 C3                      ret
   244                                  draw_z_pixel$pass:
   245                                  ;============[fun end]pixel=============
   246                                  
   247                                  
   248                                  ;############[fun begin]hLine############
   249 000001B4 E9CA000000              jmp draw_z_hLine$pass
   250                                  draw_z_hLine:
   251 000001B9 5D                      pop ebp
   252                                  ;param: vramAddr
   253 000001BA EB04                    jmp draw_z_hLine_vramAddr$pass
   254 000001BC 00000000                draw_z_hLine_vramAddr: dd 0
   255                                  draw_z_hLine_vramAddr$pass:
   256 000001C0 58                      pop eax
   257 000001C1 A3[BC010000]            mov [draw_z_hLine_vramAddr], eax
   258                                  ;param: screenWidth
   259 000001C6 EB04                    jmp draw_z_hLine_screenWidth$pass
   260 000001C8 00000000                draw_z_hLine_screenWidth: dd 0
   261                                  draw_z_hLine_screenWidth$pass:
   262 000001CC 58                      pop eax
   263 000001CD A3[C8010000]            mov [draw_z_hLine_screenWidth], eax
   264                                  ;param: color
   265 000001D2 EB04                    jmp draw_z_hLine_color$pass
   266 000001D4 00000000                draw_z_hLine_color: dd 0
   267                                  draw_z_hLine_color$pass:
   268 000001D8 58                      pop eax
   269 000001D9 A3[D4010000]            mov [draw_z_hLine_color], eax
   270                                  ;param: ey
   271 000001DE EB04                    jmp draw_z_hLine_ey$pass
   272 000001E0 00000000                draw_z_hLine_ey: dd 0
   273                                  draw_z_hLine_ey$pass:
   274 000001E4 58                      pop eax
   275 000001E5 A3[E0010000]            mov [draw_z_hLine_ey], eax
   276                                  ;param: ex
   277 000001EA EB04                    jmp draw_z_hLine_ex$pass
   278 000001EC 00000000                draw_z_hLine_ex: dd 0
   279                                  draw_z_hLine_ex$pass:
   280 000001F0 58                      pop eax
   281 000001F1 A3[EC010000]            mov [draw_z_hLine_ex], eax
   282                                  ;param: by
   283 000001F6 EB04                    jmp draw_z_hLine_by$pass
   284 000001F8 00000000                draw_z_hLine_by: dd 0
   285                                  draw_z_hLine_by$pass:
   286 000001FC 58                      pop eax
   287 000001FD A3[F8010000]            mov [draw_z_hLine_by], eax
   288                                  ;param: bx
   289 00000202 EB04                    jmp draw_z_hLine_bx$pass
   290 00000204 00000000                draw_z_hLine_bx: dd 0
   291                                  draw_z_hLine_bx$pass:
   292 00000208 58                      pop eax
   293 00000209 A3[04020000]            mov [draw_z_hLine_bx], eax
   294 0000020E 55                      push ebp
   295 0000020F A1[04020000]            mov eax, [draw_z_hLine_bx]
   296 00000214 50                      push eax
   297 00000215 EB04                    jmp draw_z_hLine_i$pass
   298 00000217 00000000                draw_z_hLine_i: dd 0
   299                                  draw_z_hLine_i$pass:
   300 0000021B 58                      pop eax
   301 0000021C A3[17020000]            mov [draw_z_hLine_i], eax
   302                                  
   303                                  ;########## draw_z_hLine_while#r1_$start ##########
   304                                  draw_z_hLine_while#r1_$start:
   305 00000221 A1[17020000]            mov eax, [draw_z_hLine_i]
   306 00000226 50                      push eax
   307 00000227 A1[EC010000]            mov eax, [draw_z_hLine_ex]
   308 0000022C 50                      push eax
   309 0000022D 5B                      pop ebx
   310 0000022E 58                      pop eax
   311 0000022F 39D8                    cmp eax, ebx
   312 00000231 7607                    jbe draw_z_hLine_while#r1_leq#r2$true
   313 00000233 B800000000              mov eax, 0
   314 00000238 EB05                    jmp draw_z_hLine_while#r1_leq#r2$false
   315                                  draw_z_hLine_while#r1_leq#r2$true:
   316 0000023A B801000000              mov eax, 1
   317                                  draw_z_hLine_while#r1_leq#r2$false:
   318 0000023F 50                      push eax
   319 00000240 58                      pop eax
   320 00000241 83F800                  cmp eax, 0
   321 00000244 743C                    je draw_z_hLine_while#r1_$end
   322 00000246 A1[17020000]            mov eax, [draw_z_hLine_i]
   323 0000024B 50                      push eax
   324 0000024C A1[F8010000]            mov eax, [draw_z_hLine_by]
   325 00000251 50                      push eax
   326 00000252 A1[D4010000]            mov eax, [draw_z_hLine_color]
   327 00000257 50                      push eax
   328 00000258 A1[C8010000]            mov eax, [draw_z_hLine_screenWidth]
   329 0000025D 50                      push eax
   330 0000025E A1[BC010000]            mov eax, [draw_z_hLine_vramAddr]
   331 00000263 50                      push eax
   332 00000264 E8C8FEFFFF              call draw_z_pixel
   333                                  
   334 00000269 A1[17020000]            mov eax, [draw_z_hLine_i]
   335 0000026E 50                      push eax
   336 0000026F B801000000              mov eax, 1
   337 00000274 50                      push eax
   338 00000275 58                      pop eax
   339 00000276 5B                      pop ebx
   340 00000277 01D8                    add eax, ebx
   341 00000279 50                      push eax
   342 0000027A 58                      pop eax
   343 0000027B A3[17020000]            mov [draw_z_hLine_i], eax
   344 00000280 EB9F                    jmp draw_z_hLine_while#r1_$start
   345                                  draw_z_hLine_while#r1_$end:
   346                                  ;========== draw_z_hLine_while#r1_$end ==========
   347                                  
   348 00000282 C3                      ret
   349                                  draw_z_hLine$pass:
   350                                  ;============[fun end]hLine=============
   351                                  
   352                                  
   353                                  ;############[fun begin]font############
   354 00000283 EB3F                    jmp draw_z_font$pass
   355                                  draw_z_font:
   356 00000285 5D                      pop ebp
   357                                  ;param: backColor
   358 00000286 EB04                    jmp draw_z_font_backColor$pass
   359 00000288 00000000                draw_z_font_backColor: dd 0
   360                                  draw_z_font_backColor$pass:
   361 0000028C 58                      pop eax
   362 0000028D A3[88020000]            mov [draw_z_font_backColor], eax
   363                                  ;param: foreColor
   364 00000292 EB04                    jmp draw_z_font_foreColor$pass
   365 00000294 00000000                draw_z_font_foreColor: dd 0
   366                                  draw_z_font_foreColor$pass:
   367 00000298 58                      pop eax
   368 00000299 A3[94020000]            mov [draw_z_font_foreColor], eax
   369                                  ;param: top
   370 0000029E EB04                    jmp draw_z_font_top$pass
   371 000002A0 00000000                draw_z_font_top: dd 0
   372                                  draw_z_font_top$pass:
   373 000002A4 58                      pop eax
   374 000002A5 A3[A0020000]            mov [draw_z_font_top], eax
   375                                  ;param: left
   376 000002AA EB04                    jmp draw_z_font_left$pass
   377 000002AC 00000000                draw_z_font_left: dd 0
   378                                  draw_z_font_left$pass:
   379 000002B0 58                      pop eax
   380 000002B1 A3[AC020000]            mov [draw_z_font_left], eax
   381                                  ;param: charAddr
   382 000002B6 EB04                    jmp draw_z_font_charAddr$pass
   383 000002B8 00000000                draw_z_font_charAddr: dd 0
   384                                  draw_z_font_charAddr$pass:
   385 000002BC 58                      pop eax
   386 000002BD A3[B8020000]            mov [draw_z_font_charAddr], eax
   387 000002C2 55                      push ebp
   388 000002C3 C3                      ret
   389                                  draw_z_font$pass:
   390                                  ;============[fun end]font=============
   391                                  
   392                                  
   393                                  ;############[fun begin]flush############
   394 000002C4 E910010000              jmp draw_z_flush$pass
   395                                  draw_z_flush:
   396 000002C9 5D                      pop ebp
   397                                  ;param: addrVram
   398 000002CA EB04                    jmp draw_z_flush_addrVram$pass
   399 000002CC 00000000                draw_z_flush_addrVram: dd 0
   400                                  draw_z_flush_addrVram$pass:
   401 000002D0 58                      pop eax
   402 000002D1 A3[CC020000]            mov [draw_z_flush_addrVram], eax
   403 000002D6 55                      push ebp
   404 000002D7 B800000000              mov eax, 0
   405 000002DC 50                      push eax
   406 000002DD EB04                    jmp draw_z_flush_left$pass
   407 000002DF 00000000                draw_z_flush_left: dd 0
   408                                  draw_z_flush_left$pass:
   409 000002E3 58                      pop eax
   410 000002E4 A3[DF020000]            mov [draw_z_flush_left], eax
   411                                  
   412 000002E9 B800000000              mov eax, 0
   413 000002EE 50                      push eax
   414 000002EF EB04                    jmp draw_z_flush_top$pass
   415 000002F1 00000000                draw_z_flush_top: dd 0
   416                                  draw_z_flush_top$pass:
   417 000002F5 58                      pop eax
   418 000002F6 A3[F1020000]            mov [draw_z_flush_top], eax
   419                                  
   420                                  ;########## draw_z_flush_while#r3_$start ##########
   421                                  draw_z_flush_while#r3_$start:
   422 000002FB A1[F1020000]            mov eax, [draw_z_flush_top]
   423 00000300 50                      push eax
   424 00000301 B819000000              mov eax, 25
   425 00000306 50                      push eax
   426 00000307 5B                      pop ebx
   427 00000308 58                      pop eax
   428 00000309 39D8                    cmp eax, ebx
   429 0000030B 7207                    jb draw_z_flush_while#r3_les#r4$true
   430 0000030D B800000000              mov eax, 0
   431 00000312 EB05                    jmp draw_z_flush_while#r3_les#r4$false
   432                                  draw_z_flush_while#r3_les#r4$true:
   433 00000314 B801000000              mov eax, 1
   434                                  draw_z_flush_while#r3_les#r4$false:
   435 00000319 50                      push eax
   436 0000031A 58                      pop eax
   437 0000031B 83F800                  cmp eax, 0
   438 0000031E 0F84B4000000            je draw_z_flush_while#r3_$end
   439 00000324 B800000000              mov eax, 0
   440 00000329 50                      push eax
   441 0000032A 58                      pop eax
   442 0000032B A3[DF020000]            mov [draw_z_flush_left], eax
   443                                  ;########## draw_z_flush_while#r3_while#r5_$start ##########
   444                                  draw_z_flush_while#r3_while#r5_$start:
   445 00000330 A1[DF020000]            mov eax, [draw_z_flush_left]
   446 00000335 50                      push eax
   447 00000336 B828000000              mov eax, 40
   448 0000033B 50                      push eax
   449 0000033C 5B                      pop ebx
   450 0000033D 58                      pop eax
   451 0000033E 39D8                    cmp eax, ebx
   452 00000340 7207                    jb draw_z_flush_while#r3_while#r5_les#r6$true
   453 00000342 B800000000              mov eax, 0
   454 00000347 EB05                    jmp draw_z_flush_while#r3_while#r5_les#r6$false
   455                                  draw_z_flush_while#r3_while#r5_les#r6$true:
   456 00000349 B801000000              mov eax, 1
   457                                  draw_z_flush_while#r3_while#r5_les#r6$false:
   458 0000034E 50                      push eax
   459 0000034F 58                      pop eax
   460 00000350 83F800                  cmp eax, 0
   461 00000353 7467                    je draw_z_flush_while#r3_while#r5_$end
   462 00000355 B80F000000              mov eax, 15
   463 0000035A 50                      push eax
   464 0000035B EB04                    jmp draw_z_flush_while#r3_while#r5_color$pass
   465 0000035D 00000000                draw_z_flush_while#r3_while#r5_color: dd 0
   466                                  draw_z_flush_while#r3_while#r5_color$pass:
   467 00000361 58                      pop eax
   468 00000362 A3[5D030000]            mov [draw_z_flush_while#r3_while#r5_color], eax
   469                                  
   470 00000367 A1[DF020000]            mov eax, [draw_z_flush_left]
   471 0000036C 50                      push eax
   472 0000036D B808000000              mov eax, 8
   473 00000372 50                      push eax
   474 00000373 58                      pop eax
   475 00000374 5B                      pop ebx
   476 00000375 F7E3                    mul ebx
   477 00000377 50                      push eax
   478 00000378 A1[F1020000]            mov eax, [draw_z_flush_top]
   479 0000037D 50                      push eax
   480 0000037E B808000000              mov eax, 8
   481 00000383 50                      push eax
   482 00000384 58                      pop eax
   483 00000385 5B                      pop ebx
   484 00000386 F7E3                    mul ebx
   485 00000388 50                      push eax
   486 00000389 A1[5D030000]            mov eax, [draw_z_flush_while#r3_while#r5_color]
   487 0000038E 50                      push eax
   488 0000038F B840010000              mov eax, 320
   489 00000394 50                      push eax
   490 00000395 A1[CC020000]            mov eax, [draw_z_flush_addrVram]
   491 0000039A 50                      push eax
   492 0000039B E891FDFFFF              call draw_z_pixel
   493                                  
   494 000003A0 A1[DF020000]            mov eax, [draw_z_flush_left]
   495 000003A5 50                      push eax
   496 000003A6 B801000000              mov eax, 1
   497 000003AB 50                      push eax
   498 000003AC 58                      pop eax
   499 000003AD 5B                      pop ebx
   500 000003AE 01D8                    add eax, ebx
   501 000003B0 50                      push eax
   502 000003B1 58                      pop eax
   503 000003B2 A3[DF020000]            mov [draw_z_flush_left], eax
   504 000003B7 E974FFFFFF              jmp draw_z_flush_while#r3_while#r5_$start
   505                                  draw_z_flush_while#r3_while#r5_$end:
   506                                  ;========== draw_z_flush_while#r3_while#r5_$end ==========
   507                                  
   508 000003BC A1[F1020000]            mov eax, [draw_z_flush_top]
   509 000003C1 50                      push eax
   510 000003C2 B801000000              mov eax, 1
   511 000003C7 50                      push eax
   512 000003C8 58                      pop eax
   513 000003C9 5B                      pop ebx
   514 000003CA 01D8                    add eax, ebx
   515 000003CC 50                      push eax
   516 000003CD 58                      pop eax
   517 000003CE A3[F1020000]            mov [draw_z_flush_top], eax
   518 000003D3 E923FFFFFF              jmp draw_z_flush_while#r3_$start
   519                                  draw_z_flush_while#r3_$end:
   520                                  ;========== draw_z_flush_while#r3_$end ==========
   521                                  
   522 000003D8 C3                      ret
   523                                  draw_z_flush$pass:
   524                                  ;============[fun end]flush=============
   525                                  
   526                                  
   527                                  ;############[fun begin]char############
   528 000003D9 E903020000              jmp draw_z_char$pass
   529                                  draw_z_char:
   530 000003DE 5D                      pop ebp
   531                                  ;param: addrVram
   532 000003DF EB04                    jmp draw_z_char_addrVram$pass
   533 000003E1 00000000                draw_z_char_addrVram: dd 0
   534                                  draw_z_char_addrVram$pass:
   535 000003E5 58                      pop eax
   536 000003E6 A3[E1030000]            mov [draw_z_char_addrVram], eax
   537                                  ;param: screenWidth
   538 000003EB EB04                    jmp draw_z_char_screenWidth$pass
   539 000003ED 00000000                draw_z_char_screenWidth: dd 0
   540                                  draw_z_char_screenWidth$pass:
   541 000003F1 58                      pop eax
   542 000003F2 A3[ED030000]            mov [draw_z_char_screenWidth], eax
   543                                  ;param: ascii
   544 000003F7 EB04                    jmp draw_z_char_ascii$pass
   545 000003F9 00000000                draw_z_char_ascii: dd 0
   546                                  draw_z_char_ascii$pass:
   547 000003FD 58                      pop eax
   548 000003FE A3[F9030000]            mov [draw_z_char_ascii], eax
   549                                  ;param: backColor
   550 00000403 EB04                    jmp draw_z_char_backColor$pass
   551 00000405 00000000                draw_z_char_backColor: dd 0
   552                                  draw_z_char_backColor$pass:
   553 00000409 58                      pop eax
   554 0000040A A3[05040000]            mov [draw_z_char_backColor], eax
   555                                  ;param: foreColor
   556 0000040F EB04                    jmp draw_z_char_foreColor$pass
   557 00000411 00000000                draw_z_char_foreColor: dd 0
   558                                  draw_z_char_foreColor$pass:
   559 00000415 58                      pop eax
   560 00000416 A3[11040000]            mov [draw_z_char_foreColor], eax
   561                                  ;param: top
   562 0000041B EB04                    jmp draw_z_char_top$pass
   563 0000041D 00000000                draw_z_char_top: dd 0
   564                                  draw_z_char_top$pass:
   565 00000421 58                      pop eax
   566 00000422 A3[1D040000]            mov [draw_z_char_top], eax
   567                                  ;param: left
   568 00000427 EB04                    jmp draw_z_char_left$pass
   569 00000429 00000000                draw_z_char_left: dd 0
   570                                  draw_z_char_left$pass:
   571 0000042D 58                      pop eax
   572 0000042E A3[29040000]            mov [draw_z_char_left], eax
   573 00000433 55                      push ebp
   574 00000434 A1[F9030000]            mov eax, [draw_z_char_ascii]
   575 00000439 50                      push eax
   576 0000043A E880320000              call font_z_getAddrByAscii
   577                                  
   578 0000043F EB04                    jmp draw_z_char_fontAddr$pass
   579 00000441 00000000                draw_z_char_fontAddr: dd 0
   580                                  draw_z_char_fontAddr$pass:
   581 00000445 58                      pop eax
   582 00000446 A3[41040000]            mov [draw_z_char_fontAddr], eax
   583                                  
   584 0000044B B800000000              mov eax, 0
   585 00000450 50                      push eax
   586 00000451 EB04                    jmp draw_z_char_y$pass
   587 00000453 00000000                draw_z_char_y: dd 0
   588                                  draw_z_char_y$pass:
   589 00000457 58                      pop eax
   590 00000458 A3[53040000]            mov [draw_z_char_y], eax
   591                                  
   592                                  ;########## draw_z_char_while#r7_$start ##########
   593                                  draw_z_char_while#r7_$start:
   594 0000045D A1[53040000]            mov eax, [draw_z_char_y]
   595 00000462 50                      push eax
   596 00000463 B808000000              mov eax, 8
   597 00000468 50                      push eax
   598 00000469 5B                      pop ebx
   599 0000046A 58                      pop eax
   600 0000046B 39D8                    cmp eax, ebx
   601 0000046D 7207                    jb draw_z_char_while#r7_les#r8$true
   602 0000046F B800000000              mov eax, 0
   603 00000474 EB05                    jmp draw_z_char_while#r7_les#r8$false
   604                                  draw_z_char_while#r7_les#r8$true:
   605 00000476 B801000000              mov eax, 1
   606                                  draw_z_char_while#r7_les#r8$false:
   607 0000047B 50                      push eax
   608 0000047C 58                      pop eax
   609 0000047D 83F800                  cmp eax, 0
   610 00000480 0F845A010000            je draw_z_char_while#r7_$end
   611 00000486 B800000000              mov eax, 0
   612 0000048B 50                      push eax
   613 0000048C EB04                    jmp draw_z_char_while#r7_x$pass
   614 0000048E 00000000                draw_z_char_while#r7_x: dd 0
   615                                  draw_z_char_while#r7_x$pass:
   616 00000492 58                      pop eax
   617 00000493 A3[8E040000]            mov [draw_z_char_while#r7_x], eax
   618                                  
   619                                  ;########## draw_z_char_while#r7_while#r9_$start ##########
   620                                  draw_z_char_while#r7_while#r9_$start:
   621 00000498 A1[8E040000]            mov eax, [draw_z_char_while#r7_x]
   622 0000049D 50                      push eax
   623 0000049E B808000000              mov eax, 8
   624 000004A3 50                      push eax
   625 000004A4 5B                      pop ebx
   626 000004A5 58                      pop eax
   627 000004A6 39D8                    cmp eax, ebx
   628 000004A8 7207                    jb draw_z_char_while#r7_while#r9_les#r01$true
   629 000004AA B800000000              mov eax, 0
   630 000004AF EB05                    jmp draw_z_char_while#r7_while#r9_les#r01$false
   631                                  draw_z_char_while#r7_while#r9_les#r01$true:
   632 000004B1 B801000000              mov eax, 1
   633                                  draw_z_char_while#r7_while#r9_les#r01$false:
   634 000004B6 50                      push eax
   635 000004B7 58                      pop eax
   636 000004B8 83F800                  cmp eax, 0
   637 000004BB 0F8403010000            je draw_z_char_while#r7_while#r9_$end
   638 000004C1 A1[11040000]            mov eax, [draw_z_char_foreColor]
   639 000004C6 50                      push eax
   640 000004C7 EB04                    jmp draw_z_char_while#r7_while#r9_color$pass
   641 000004C9 00000000                draw_z_char_while#r7_while#r9_color: dd 0
   642                                  draw_z_char_while#r7_while#r9_color$pass:
   643 000004CD 58                      pop eax
   644 000004CE A3[C9040000]            mov [draw_z_char_while#r7_while#r9_color], eax
   645                                  
   646 000004D3 A1[41040000]            mov eax, [draw_z_char_fontAddr]
   647 000004D8 50                      push eax
   648 000004D9 A1[53040000]            mov eax, [draw_z_char_y]
   649 000004DE 50                      push eax
   650 000004DF B808000000              mov eax, 8
   651 000004E4 50                      push eax
   652 000004E5 58                      pop eax
   653 000004E6 5B                      pop ebx
   654 000004E7 F7E3                    mul ebx
   655 000004E9 50                      push eax
   656 000004EA B804000000              mov eax, 4
   657 000004EF 50                      push eax
   658 000004F0 58                      pop eax
   659 000004F1 5B                      pop ebx
   660 000004F2 F7E3                    mul ebx
   661 000004F4 50                      push eax
   662 000004F5 58                      pop eax
   663 000004F6 5B                      pop ebx
   664 000004F7 01D8                    add eax, ebx
   665 000004F9 50                      push eax
   666 000004FA A1[8E040000]            mov eax, [draw_z_char_while#r7_x]
   667 000004FF 50                      push eax
   668 00000500 B804000000              mov eax, 4
   669 00000505 50                      push eax
   670 00000506 58                      pop eax
   671 00000507 5B                      pop ebx
   672 00000508 F7E3                    mul ebx
   673 0000050A 50                      push eax
   674 0000050B 58                      pop eax
   675 0000050C 5B                      pop ebx
   676 0000050D 01D8                    add eax, ebx
   677 0000050F 50                      push eax
   678 00000510 EB04                    jmp draw_z_char_while#r7_while#r9_fontByteAddr$pass
   679 00000512 00000000                draw_z_char_while#r7_while#r9_fontByteAddr: dd 0
   680                                  draw_z_char_while#r7_while#r9_fontByteAddr$pass:
   681 00000516 58                      pop eax
   682 00000517 A3[12050000]            mov [draw_z_char_while#r7_while#r9_fontByteAddr], eax
   683                                  
   684 0000051C A1[12050000]            mov eax, [draw_z_char_while#r7_while#r9_fontByteAddr]
   685 00000521 8B18                    mov ebx, [eax]
   686 00000523 53                      push ebx
   687 00000524 EB04                    jmp draw_z_char_while#r7_while#r9_fontByte$pass
   688 00000526 00000000                draw_z_char_while#r7_while#r9_fontByte: dd 0
   689                                  draw_z_char_while#r7_while#r9_fontByte$pass:
   690 0000052A 58                      pop eax
   691 0000052B A3[26050000]            mov [draw_z_char_while#r7_while#r9_fontByte], eax
   692                                  
   693                                  ;########## draw_z_char_while#r7_while#r9_if#r11_$start ##########
   694 00000530 A1[26050000]            mov eax, [draw_z_char_while#r7_while#r9_fontByte]
   695 00000535 50                      push eax
   696 00000536 B800000000              mov eax, 0
   697 0000053B 50                      push eax
   698 0000053C 5B                      pop ebx
   699 0000053D 58                      pop eax
   700 0000053E 39D8                    cmp eax, ebx
   701 00000540 7507                    jne draw_z_char_while#r7_while#r9_if#r11_neq#r21$true
   702 00000542 B800000000              mov eax, 0
   703 00000547 EB05                    jmp draw_z_char_while#r7_while#r9_if#r11_neq#r21$false
   704                                  draw_z_char_while#r7_while#r9_if#r11_neq#r21$true:
   705 00000549 B801000000              mov eax, 1
   706                                  draw_z_char_while#r7_while#r9_if#r11_neq#r21$false:
   707 0000054E 50                      push eax
   708 0000054F 58                      pop eax
   709 00000550 83F800                  cmp eax, 0
   710 00000553 740E                    je draw_z_char_while#r7_while#r9_if#r11_$else
   711 00000555 B80F000000              mov eax, 15
   712 0000055A 50                      push eax
   713 0000055B 58                      pop eax
   714 0000055C A3[C9040000]            mov [draw_z_char_while#r7_while#r9_color], eax
   715 00000561 EB0C                    jmp draw_z_char_while#r7_while#r9_if#r11_$end
   716                                  draw_z_char_while#r7_while#r9_if#r11_$else:
   717 00000563 B800000000              mov eax, 0
   718 00000568 50                      push eax
   719 00000569 58                      pop eax
   720 0000056A A3[C9040000]            mov [draw_z_char_while#r7_while#r9_color], eax
   721                                  draw_z_char_while#r7_while#r9_if#r11_$end:
   722                                  ;========== draw_z_char_while#r7_while#r9_if#r11_$end ==========
   723                                  
   724 0000056F A1[29040000]            mov eax, [draw_z_char_left]
   725 00000574 50                      push eax
   726 00000575 A1[8E040000]            mov eax, [draw_z_char_while#r7_x]
   727 0000057A 50                      push eax
   728 0000057B 58                      pop eax
   729 0000057C 5B                      pop ebx
   730 0000057D 01D8                    add eax, ebx
   731 0000057F 50                      push eax
   732 00000580 A1[1D040000]            mov eax, [draw_z_char_top]
   733 00000585 50                      push eax
   734 00000586 A1[53040000]            mov eax, [draw_z_char_y]
   735 0000058B 50                      push eax
   736 0000058C 58                      pop eax
   737 0000058D 5B                      pop ebx
   738 0000058E 01D8                    add eax, ebx
   739 00000590 50                      push eax
   740 00000591 A1[C9040000]            mov eax, [draw_z_char_while#r7_while#r9_color]
   741 00000596 50                      push eax
   742 00000597 B840010000              mov eax, 320
   743 0000059C 50                      push eax
   744 0000059D A1[E1030000]            mov eax, [draw_z_char_addrVram]
   745 000005A2 50                      push eax
   746 000005A3 E889FBFFFF              call draw_z_pixel
   747                                  
   748 000005A8 A1[8E040000]            mov eax, [draw_z_char_while#r7_x]
   749 000005AD 50                      push eax
   750 000005AE B801000000              mov eax, 1
   751 000005B3 50                      push eax
   752 000005B4 58                      pop eax
   753 000005B5 5B                      pop ebx
   754 000005B6 01D8                    add eax, ebx
   755 000005B8 50                      push eax
   756 000005B9 58                      pop eax
   757 000005BA A3[8E040000]            mov [draw_z_char_while#r7_x], eax
   758 000005BF E9D4FEFFFF              jmp draw_z_char_while#r7_while#r9_$start
   759                                  draw_z_char_while#r7_while#r9_$end:
   760                                  ;========== draw_z_char_while#r7_while#r9_$end ==========
   761                                  
   762 000005C4 A1[53040000]            mov eax, [draw_z_char_y]
   763 000005C9 50                      push eax
   764 000005CA B801000000              mov eax, 1
   765 000005CF 50                      push eax
   766 000005D0 58                      pop eax
   767 000005D1 5B                      pop ebx
   768 000005D2 01D8                    add eax, ebx
   769 000005D4 50                      push eax
   770 000005D5 58                      pop eax
   771 000005D6 A3[53040000]            mov [draw_z_char_y], eax
   772 000005DB E97DFEFFFF              jmp draw_z_char_while#r7_$start
   773                                  draw_z_char_while#r7_$end:
   774                                  ;========== draw_z_char_while#r7_$end ==========
   775                                  
   776 000005E0 C3                      ret
   777                                  draw_z_char$pass:
   778                                  ;============[fun end]char=============
   779                                  
   780                                  
   781                                  ;############[fun begin]string############
   782 000005E1 E963010000              jmp draw_z_string$pass
   783                                  draw_z_string:
   784 000005E6 5D                      pop ebp
   785                                  ;param: addrVram
   786 000005E7 EB04                    jmp draw_z_string_addrVram$pass
   787 000005E9 00000000                draw_z_string_addrVram: dd 0
   788                                  draw_z_string_addrVram$pass:
   789 000005ED 58                      pop eax
   790 000005EE A3[E9050000]            mov [draw_z_string_addrVram], eax
   791                                  ;param: screenWidth
   792 000005F3 EB04                    jmp draw_z_string_screenWidth$pass
   793 000005F5 00000000                draw_z_string_screenWidth: dd 0
   794                                  draw_z_string_screenWidth$pass:
   795 000005F9 58                      pop eax
   796 000005FA A3[F5050000]            mov [draw_z_string_screenWidth], eax
   797                                  ;param: strAddr
   798 000005FF EB04                    jmp draw_z_string_strAddr$pass
   799 00000601 00000000                draw_z_string_strAddr: dd 0
   800                                  draw_z_string_strAddr$pass:
   801 00000605 58                      pop eax
   802 00000606 A3[01060000]            mov [draw_z_string_strAddr], eax
   803                                  ;param: top
   804 0000060B EB04                    jmp draw_z_string_top$pass
   805 0000060D 00000000                draw_z_string_top: dd 0
   806                                  draw_z_string_top$pass:
   807 00000611 58                      pop eax
   808 00000612 A3[0D060000]            mov [draw_z_string_top], eax
   809                                  ;param: left
   810 00000617 EB04                    jmp draw_z_string_left$pass
   811 00000619 00000000                draw_z_string_left: dd 0
   812                                  draw_z_string_left$pass:
   813 0000061D 58                      pop eax
   814 0000061E A3[19060000]            mov [draw_z_string_left], eax
   815 00000623 55                      push ebp
   816 00000624 B800000000              mov eax, 0
   817 00000629 50                      push eax
   818 0000062A EB04                    jmp draw_z_string_i$pass
   819 0000062C 00000000                draw_z_string_i: dd 0
   820                                  draw_z_string_i$pass:
   821 00000630 58                      pop eax
   822 00000631 A3[2C060000]            mov [draw_z_string_i], eax
   823                                  
   824 00000636 A1[01060000]            mov eax, [draw_z_string_strAddr]
   825 0000063B 50                      push eax
   826 0000063C B801000000              mov eax, 1
   827 00000641 50                      push eax
   828 00000642 58                      pop eax
   829 00000643 5B                      pop ebx
   830 00000644 01D8                    add eax, ebx
   831 00000646 50                      push eax
   832 00000647 58                      pop eax
   833 00000648 A3[01060000]            mov [draw_z_string_strAddr], eax
   834 0000064D A1[01060000]            mov eax, [draw_z_string_strAddr]
   835 00000652 50                      push eax
   836 00000653 EB04                    jmp draw_z_string_charAddr$pass
   837 00000655 00000000                draw_z_string_charAddr: dd 0
   838                                  draw_z_string_charAddr$pass:
   839 00000659 58                      pop eax
   840 0000065A A3[55060000]            mov [draw_z_string_charAddr], eax
   841                                  
   842 0000065F A1[55060000]            mov eax, [draw_z_string_charAddr]
   843 00000664 8B18                    mov ebx, [eax]
   844 00000666 53                      push ebx
   845 00000667 EB04                    jmp draw_z_string_t_char$pass
   846 00000669 00000000                draw_z_string_t_char: dd 0
   847                                  draw_z_string_t_char$pass:
   848 0000066D 58                      pop eax
   849 0000066E A3[69060000]            mov [draw_z_string_t_char], eax
   850                                  
   851 00000673 A1[69060000]            mov eax, [draw_z_string_t_char]
   852 00000678 50                      push eax
   853 00000679 B818000000              mov eax, 24
   854 0000067E 50                      push eax
   855 0000067F 59                      pop ecx
   856 00000680 58                      pop eax
   857 00000681 D3E8                    shr eax, cl
   858 00000683 50                      push eax
   859 00000684 58                      pop eax
   860 00000685 A3[69060000]            mov [draw_z_string_t_char], eax
   861                                  ;########## draw_z_string_while#r31_$start ##########
   862                                  draw_z_string_while#r31_$start:
   863 0000068A A1[69060000]            mov eax, [draw_z_string_t_char]
   864 0000068F 50                      push eax
   865 00000690 B800000000              mov eax, 0
   866 00000695 50                      push eax
   867 00000696 5B                      pop ebx
   868 00000697 58                      pop eax
   869 00000698 39D8                    cmp eax, ebx
   870 0000069A 7507                    jne draw_z_string_while#r31_neq#r41$true
   871 0000069C B800000000              mov eax, 0
   872 000006A1 EB05                    jmp draw_z_string_while#r31_neq#r41$false
   873                                  draw_z_string_while#r31_neq#r41$true:
   874 000006A3 B801000000              mov eax, 1
   875                                  draw_z_string_while#r31_neq#r41$false:
   876 000006A8 50                      push eax
   877 000006A9 58                      pop eax
   878 000006AA 83F800                  cmp eax, 0
   879 000006AD 0F8495000000            je draw_z_string_while#r31_$end
   880 000006B3 A1[19060000]            mov eax, [draw_z_string_left]
   881 000006B8 50                      push eax
   882 000006B9 A1[2C060000]            mov eax, [draw_z_string_i]
   883 000006BE 50                      push eax
   884 000006BF B808000000              mov eax, 8
   885 000006C4 50                      push eax
   886 000006C5 58                      pop eax
   887 000006C6 5B                      pop ebx
   888 000006C7 F7E3                    mul ebx
   889 000006C9 50                      push eax
   890 000006CA 58                      pop eax
   891 000006CB 5B                      pop ebx
   892 000006CC 01D8                    add eax, ebx
   893 000006CE 50                      push eax
   894 000006CF A1[0D060000]            mov eax, [draw_z_string_top]
   895 000006D4 50                      push eax
   896 000006D5 B807000000              mov eax, 7
   897 000006DA 50                      push eax
   898 000006DB B808000000              mov eax, 8
   899 000006E0 50                      push eax
   900 000006E1 A1[69060000]            mov eax, [draw_z_string_t_char]
   901 000006E6 50                      push eax
   902 000006E7 A1[F5050000]            mov eax, [draw_z_string_screenWidth]
   903 000006EC 50                      push eax
   904 000006ED A1[E9050000]            mov eax, [draw_z_string_addrVram]
   905 000006F2 50                      push eax
   906 000006F3 E8E6FCFFFF              call draw_z_char
   907                                  
   908 000006F8 A1[2C060000]            mov eax, [draw_z_string_i]
   909 000006FD 50                      push eax
   910 000006FE B801000000              mov eax, 1
   911 00000703 50                      push eax
   912 00000704 58                      pop eax
   913 00000705 5B                      pop ebx
   914 00000706 01D8                    add eax, ebx
   915 00000708 50                      push eax
   916 00000709 58                      pop eax
   917 0000070A A3[2C060000]            mov [draw_z_string_i], eax
   918 0000070F A1[01060000]            mov eax, [draw_z_string_strAddr]
   919 00000714 50                      push eax
   920 00000715 A1[2C060000]            mov eax, [draw_z_string_i]
   921 0000071A 50                      push eax
   922 0000071B 58                      pop eax
   923 0000071C 5B                      pop ebx
   924 0000071D 01D8                    add eax, ebx
   925 0000071F 50                      push eax
   926 00000720 58                      pop eax
   927 00000721 A3[55060000]            mov [draw_z_string_charAddr], eax
   928 00000726 A1[55060000]            mov eax, [draw_z_string_charAddr]
   929 0000072B 8B18                    mov ebx, [eax]
   930 0000072D 53                      push ebx
   931 0000072E 58                      pop eax
   932 0000072F A3[69060000]            mov [draw_z_string_t_char], eax
   933 00000734 A1[69060000]            mov eax, [draw_z_string_t_char]
   934 00000739 C1E818                  shr eax, 24
   935 0000073C 50                      push eax
   936 0000073D 58                      pop eax
   937 0000073E A3[69060000]            mov [draw_z_string_t_char], eax
   938 00000743 E942FFFFFF              jmp draw_z_string_while#r31_$start
   939                                  draw_z_string_while#r31_$end:
   940                                  ;========== draw_z_string_while#r31_$end ==========
   941                                  
   942 00000748 C3                      ret
   943                                  draw_z_string$pass:
   944                                  ;============[fun end]string=============
   945                                  
   946                                  
   947 00000749 E900010000              jmp font_z_A$pass
   948 0000074E 000000000000000000-     font_z_A: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   948 00000757 000000000000000000-
   948 00000760 000000000000000000-
   948 00000769 000000000000000000-
   948 00000772 000000000000000001-
   948 0000077B 000000010000000000-
   948 00000784 000000000000000000-
   948 0000078D 000000000000000000-
   948 00000796 010000000000000000-
   948 0000079F 000000010000000000-
   948 000007A8 000000000000000000-
   948 000007B1 000100000000000000-
   948 000007BA 000000000000000000-
   948 000007C3 000000010000000000-
   948 000007CC 000000000000010000-
   948 000007D5 000100000001000000-
   948 000007DE 010000000100000001-
   948 000007E7 000000000000000000-
   948 000007F0 000001000000000000-
   948 000007F9 000000000000000000-
   948 00000802 000000000100000000-
   948 0000080B 000000000000000100-
   948 00000814 000000000000000000-
   948 0000081D 000000000000000000-
   948 00000826 010000000000000000-
   948 0000082F 000000000000000000-
   948 00000838 000000000000000000-
   948 00000841 000000000000000000-
   948 0000084A 00000000           
   950                                  font_z_A$pass:
   951 0000084E B8[4E070000]            mov eax, font_z_A
   952 00000853 A1[52070000]            mov eax, [font_z_A+4]
   953                                  
   954 00000858 E900010000              jmp font_z_B$pass
   955 0000085D 000000000000000000-     font_z_B: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   955 00000866 000000000000000000-
   955 0000086F 000000000000000000-
   955 00000878 000000000000000000-
   955 00000881 010000000100000001-
   955 0000088A 000000010000000100-
   955 00000893 000000000000000000-
   955 0000089C 000000000001000000-
   955 000008A5 000000000000000000-
   955 000008AE 000000000000000100-
   955 000008B7 000000000000000000-
   955 000008C0 000100000001000000-
   955 000008C9 010000000100000001-
   955 000008D2 000000000000000000-
   955 000008DB 000000000000010000-
   955 000008E4 000000000000000000-
   955 000008ED 000000000000000001-
   955 000008F6 000000000000000000-
   955 000008FF 000001000000000000-
   955 00000908 000000000000000000-
   955 00000911 000000000100000000-
   955 0000091A 000000000000000100-
   955 00000923 000001000000010000-
   955 0000092C 000100000001000000-
   955 00000935 000000000000000000-
   955 0000093E 000000000000000000-
   955 00000947 000000000000000000-
   955 00000950 000000000000000000-
   955 00000959 00000000           
   957                                  font_z_B$pass:
   958 0000095D B8[5D080000]            mov eax, font_z_B
   959 00000962 A1[61080000]            mov eax, [font_z_B+4]
   960                                  
   961 00000967 E900010000              jmp font_z_C$pass
   962 0000096C 000000000000000000-     font_z_C: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   962 00000975 000000000000000000-
   962 0000097E 000000000000000000-
   962 00000987 000000000000000000-
   962 00000990 000000000100000001-
   962 00000999 000000010000000100-
   962 000009A2 000000000000000000-
   962 000009AB 000000000001000000-
   962 000009B4 000000000000000000-
   962 000009BD 000000000000000100-
   962 000009C6 000000000000000000-
   962 000009CF 000100000000000000-
   962 000009D8 000000000000000000-
   962 000009E1 000000000000000000-
   962 000009EA 000000000000010000-
   962 000009F3 000000000000000000-
   962 000009FC 000000000000000000-
   962 00000A05 000000000000000000-
   962 00000A0E 000001000000000000-
   962 00000A17 000000000000000000-
   962 00000A20 000000000100000000-
   962 00000A29 000000000000000000-
   962 00000A32 000001000000010000-
   962 00000A3B 000100000001000000-
   962 00000A44 000000000000000000-
   962 00000A4D 000000000000000000-
   962 00000A56 000000000000000000-
   962 00000A5F 000000000000000000-
   962 00000A68 00000000           
   964                                  font_z_C$pass:
   965 00000A6C B8[6C090000]            mov eax, font_z_C
   966 00000A71 A1[70090000]            mov eax, [font_z_C+4]
   967                                  
   968 00000A76 E900010000              jmp font_z_D$pass
   969 00000A7B 000000000000000000-     font_z_D: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   969 00000A84 000000000000000000-
   969 00000A8D 000000000000000000-
   969 00000A96 000000000000000000-
   969 00000A9F 010000000100000001-
   969 00000AA8 000000010000000100-
   969 00000AB1 000000000000000000-
   969 00000ABA 000000000001000000-
   969 00000AC3 000000000000000000-
   969 00000ACC 000000000000000100-
   969 00000AD5 000000000000000000-
   969 00000ADE 000100000000000000-
   969 00000AE7 000000000000000000-
   969 00000AF0 000000010000000000-
   969 00000AF9 000000000000010000-
   969 00000B02 000000000000000000-
   969 00000B0B 000000000000000001-
   969 00000B14 000000000000000000-
   969 00000B1D 000001000000000000-
   969 00000B26 000000000000000000-
   969 00000B2F 000000000100000000-
   969 00000B38 000000000000000100-
   969 00000B41 000001000000010000-
   969 00000B4A 000100000001000000-
   969 00000B53 000000000000000000-
   969 00000B5C 000000000000000000-
   969 00000B65 000000000000000000-
   969 00000B6E 000000000000000000-
   969 00000B77 00000000           
   971                                  font_z_D$pass:
   972 00000B7B B8[7B0A0000]            mov eax, font_z_D
   973 00000B80 A1[7F0A0000]            mov eax, [font_z_D+4]
   974                                  
   975 00000B85 E900010000              jmp font_z_E$pass
   976 00000B8A 000000000000000000-     font_z_E: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   976 00000B93 000000000000000000-
   976 00000B9C 000000000000000000-
   976 00000BA5 000000000000000000-
   976 00000BAE 010000000100000001-
   976 00000BB7 000000010000000100-
   976 00000BC0 000001000000000000-
   976 00000BC9 000000000001000000-
   976 00000BD2 000000000000000000-
   976 00000BDB 000000000000000000-
   976 00000BE4 000000000000000000-
   976 00000BED 000100000001000000-
   976 00000BF6 010000000100000001-
   976 00000BFF 000000010000000000-
   976 00000C08 000000000000010000-
   976 00000C11 000000000000000000-
   976 00000C1A 000000000000000000-
   976 00000C23 000000000000000000-
   976 00000C2C 000001000000000000-
   976 00000C35 000000000000000000-
   976 00000C3E 000000000000000000-
   976 00000C47 000000000000000100-
   976 00000C50 000001000000010000-
   976 00000C59 000100000001000000-
   976 00000C62 010000000000000000-
   976 00000C6B 000000000000000000-
   976 00000C74 000000000000000000-
   976 00000C7D 000000000000000000-
   976 00000C86 00000000           
   978                                  font_z_E$pass:
   979 00000C8A B8[8A0B0000]            mov eax, font_z_E
   980 00000C8F A1[8E0B0000]            mov eax, [font_z_E+4]
   981                                  
   982 00000C94 E900010000              jmp font_z_F$pass
   983 00000C99 000000000000000000-     font_z_F: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   983 00000CA2 000000000000000000-
   983 00000CAB 000000000000000000-
   983 00000CB4 000000000000000000-
   983 00000CBD 010000000100000001-
   983 00000CC6 000000010000000100-
   983 00000CCF 000001000000000000-
   983 00000CD8 000000000001000000-
   983 00000CE1 000000000000000000-
   983 00000CEA 000000000000000000-
   983 00000CF3 000000000000000000-
   983 00000CFC 000100000001000000-
   983 00000D05 010000000100000001-
   983 00000D0E 000000000000000000-
   983 00000D17 000000000000010000-
   983 00000D20 000000000000000000-
   983 00000D29 000000000000000000-
   983 00000D32 000000000000000000-
   983 00000D3B 000001000000000000-
   983 00000D44 000000000000000000-
   983 00000D4D 000000000000000000-
   983 00000D56 000000000000000100-
   983 00000D5F 000000000000000000-
   983 00000D68 000000000000000000-
   983 00000D71 000000000000000000-
   983 00000D7A 000000000000000000-
   983 00000D83 000000000000000000-
   983 00000D8C 000000000000000000-
   983 00000D95 00000000           
   985                                  font_z_F$pass:
   986 00000D99 B8[990C0000]            mov eax, font_z_F
   987 00000D9E A1[9D0C0000]            mov eax, [font_z_F+4]
   988                                  
   989 00000DA3 E900010000              jmp font_z_G$pass
   990 00000DA8 000000000000000000-     font_z_G: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   990 00000DB1 000000000000000000-
   990 00000DBA 000000000000000000-
   990 00000DC3 000000000000000000-
   990 00000DCC 000000000100000001-
   990 00000DD5 000000010000000100-
   990 00000DDE 000000000000000000-
   990 00000DE7 000000000001000000-
   990 00000DF0 000000000000000000-
   990 00000DF9 000000000000000100-
   990 00000E02 000000000000000000-
   990 00000E0B 000100000000000000-
   990 00000E14 000000000000000000-
   990 00000E1D 000000000000000000-
   990 00000E26 000000000000010000-
   990 00000E2F 000000000000000000-
   990 00000E38 000000000100000001-
   990 00000E41 000000000000000000-
   990 00000E4A 000001000000000000-
   990 00000E53 000000000000000000-
   990 00000E5C 000000000100000000-
   990 00000E65 000000000000000000-
   990 00000E6E 000001000000010000-
   990 00000E77 000100000001000000-
   990 00000E80 010000000000000000-
   990 00000E89 000000000000000000-
   990 00000E92 000000000000000000-
   990 00000E9B 000000000000000000-
   990 00000EA4 00000000           
   992                                  font_z_G$pass:
   993 00000EA8 B8[A80D0000]            mov eax, font_z_G
   994 00000EAD A1[AC0D0000]            mov eax, [font_z_G+4]
   995                                  
   996 00000EB2 E900010000              jmp font_z_H$pass
   997 00000EB7 000000000000000000-     font_z_H: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   997 00000EC0 000000000000000000-
   997 00000EC9 000000000000000000-
   997 00000ED2 000000000000000000-
   997 00000EDB 010000000000000000-
   997 00000EE4 000000000000000000-
   997 00000EED 000001000000000000-
   997 00000EF6 000000000001000000-
   997 00000EFF 000000000000000000-
   997 00000F08 000000000000000100-
   997 00000F11 000000000000000000-
   997 00000F1A 000100000001000000-
   997 00000F23 010000000100000001-
   997 00000F2C 000000010000000000-
   997 00000F35 000000000000010000-
   997 00000F3E 000000000000000000-
   997 00000F47 000000000000000001-
   997 00000F50 000000000000000000-
   997 00000F59 000001000000000000-
   997 00000F62 000000000000000000-
   997 00000F6B 000000000100000000-
   997 00000F74 000000000000000100-
   997 00000F7D 000000000000000000-
   997 00000F86 000000000000000000-
   997 00000F8F 010000000000000000-
   997 00000F98 000000000000000000-
   997 00000FA1 000000000000000000-
   997 00000FAA 000000000000000000-
   997 00000FB3 00000000           
   999                                  font_z_H$pass:
  1000 00000FB7 B8[B70E0000]            mov eax, font_z_H
  1001 00000FBC A1[BB0E0000]            mov eax, [font_z_H+4]
  1002                                  
  1003 00000FC1 E900010000              jmp font_z_I$pass
  1004 00000FC6 000000000000000000-     font_z_I: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  1004 00000FCF 000000000000000000-
  1004 00000FD8 000000000000000000-
  1004 00000FE1 000000000000000000-
  1004 00000FEA 000000000100000001-
  1004 00000FF3 000000010000000000-
  1004 00000FFC 000000000000000000-
  1004 00001005 000000000000000000-
  1004 0000100E 000000000100000000-
  1004 00001017 000000000000000000-
  1004 00001020 000000000000000000-
  1004 00001029 000000000000000000-
  1004 00001032 010000000000000000-
  1004 0000103B 000000000000000000-
  1004 00001044 000000000000000000-
  1004 0000104D 000000000001000000-
  1004 00001056 000000000000000000-
  1004 0000105F 000000000000000000-
  1004 00001068 000000000000000000-
  1004 00001071 000100000000000000-
  1004 0000107A 000000000000000000-
  1004 00001083 000000000000000000-
  1004 0000108C 000001000000010000-
  1004 00001095 000100000000000000-
  1004 0000109E 000000000000000000-
  1004 000010A7 000000000000000000-
  1004 000010B0 000000000000000000-
  1004 000010B9 000000000000000000-
  1004 000010C2 00000000           
  1006                                  font_z_I$pass:
  1007 000010C6 B8[C60F0000]            mov eax, font_z_I
  1008 000010CB A1[CA0F0000]            mov eax, [font_z_I+4]
  1009                                  
  1010 000010D0 E900010000              jmp font_z_J$pass
  1011 000010D5 000000000000000000-     font_z_J: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  1011 000010DE 000000000000000000-
  1011 000010E7 000000000000000000-
  1011 000010F0 000000000000000000-
  1011 000010F9 000000000100000001-
  1011 00001102 000000010000000100-
  1011 0000110B 000000000000000000-
  1011 00001114 000000000000000000-
  1011 0000111D 000000000000000000-
  1011 00001126 000000010000000000-
  1011 0000112F 000000000000000000-
  1011 00001138 000000000000000000-
  1011 00001141 000000000000000001-
  1011 0000114A 000000000000000000-
  1011 00001153 000000000000000000-
  1011 0000115C 000000000000000000-
  1011 00001165 000000000100000000-
  1011 0000116E 000000000000000000-
  1011 00001177 000000000000000000-
  1011 00001180 000100000000000000-
  1011 00001189 010000000000000000-
  1011 00001192 000000000000000000-
  1011 0000119B 000000000000000000-
  1011 000011A4 000100000000000000-
  1011 000011AD 000000000000000000-
  1011 000011B6 000000000000000000-
  1011 000011BF 000000000000000000-
  1011 000011C8 000000000000000000-
  1011 000011D1 00000000           
  1013                                  font_z_J$pass:
  1014 000011D5 B8[D5100000]            mov eax, font_z_J
  1015 000011DA A1[D9100000]            mov eax, [font_z_J+4]
  1016                                  
  1017 000011DF E900010000              jmp font_z_K$pass
  1018 000011E4 000000000000000000-     font_z_K: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  1018 000011ED 000000000000000000-
  1018 000011F6 000000000000000000-
  1018 000011FF 000000000000000000-
  1018 00001208 010000000000000000-
  1018 00001211 000000010000000100-
  1018 0000121A 000000000000000000-
  1018 00001223 000000000001000000-
  1018 0000122C 000000000100000001-
  1018 00001235 000000000000000000-
  1018 0000123E 000000000000000000-
  1018 00001247 000100000001000000-
  1018 00001250 010000000000000000-
  1018 00001259 000000000000000000-
  1018 00001262 000000000000010000-
  1018 0000126B 000000000001000000-
  1018 00001274 010000000000000000-
  1018 0000127D 000000000000000000-
  1018 00001286 000001000000000000-
  1018 0000128F 000000000001000000-
  1018 00001298 010000000000000000-
  1018 000012A1 000000000000000100-
  1018 000012AA 000000000000000000-
  1018 000012B3 000000000001000000-
  1018 000012BC 010000000000000000-
  1018 000012C5 000000000000000000-
  1018 000012CE 000000000000000000-
  1018 000012D7 000000000000000000-
  1018 000012E0 00000000           
  1020                                  font_z_K$pass:
  1021 000012E4 B8[E4110000]            mov eax, font_z_K
  1022 000012E9 A1[E8110000]            mov eax, [font_z_K+4]
  1023                                  
  1024 000012EE E900010000              jmp font_z_L$pass
  1025 000012F3 000000000000000000-     font_z_L: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  1025 000012FC 000000000000000000-
  1025 00001305 000000000000000000-
  1025 0000130E 000000000000000000-
  1025 00001317 000000000100000000-
  1025 00001320 000000000000000000-
  1025 00001329 000000000000000000-
  1025 00001332 000000000000000000-
  1025 0000133B 010000000000000000-
  1025 00001344 000000000000000000-
  1025 0000134D 000000000000000000-
  1025 00001356 000000000001000000-
  1025 0000135F 000000000000000000-
  1025 00001368 000000000000000000-
  1025 00001371 000000000000000000-
  1025 0000137A 000100000000000000-
  1025 00001383 000000000000000000-
  1025 0000138C 000000000000000000-
  1025 00001395 000000000000010000-
  1025 0000139E 000000000000000000-
  1025 000013A7 000000000000000000-
  1025 000013B0 000000000000000000-
  1025 000013B9 000001000000010000-
  1025 000013C2 000100000001000000-
  1025 000013CB 000000000000000000-
  1025 000013D4 000000000000000000-
  1025 000013DD 000000000000000000-
  1025 000013E6 000000000000000000-
  1025 000013EF 00000000           
  1027                                  font_z_L$pass:
  1028 000013F3 B8[F3120000]            mov eax, font_z_L
  1029 000013F8 A1[F7120000]            mov eax, [font_z_L+4]
  1030                                  
  1031 000013FD E900010000              jmp font_z_M$pass
  1032 00001402 000000000000000000-     font_z_M: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  1032 0000140B 000000000000000000-
  1032 00001414 000000000000000000-
  1032 0000141D 000000000000000000-
  1032 00001426 010000000000000000-
  1032 0000142F 000000000000000000-
  1032 00001438 000001000000000000-
  1032 00001441 000000000001000000-
  1032 0000144A 010000000000000000-
  1032 00001453 000000010000000100-
  1032 0000145C 000000000000000000-
  1032 00001465 000100000000000000-
  1032 0000146E 010000000100000000-
  1032 00001477 000000010000000000-
  1032 00001480 000000000000010000-
  1032 00001489 000000000000000000-
  1032 00001492 000000000000000001-
  1032 0000149B 000000000000000000-
  1032 000014A4 000001000000000000-
  1032 000014AD 000000000000000000-
  1032 000014B6 000000000100000000-
  1032 000014BF 000000000000000100-
  1032 000014C8 000000000000000000-
  1032 000014D1 000000000000000000-
  1032 000014DA 010000000000000000-
  1032 000014E3 000000000000000000-
  1032 000014EC 000000000000000000-
  1032 000014F5 000000000000000000-
  1032 000014FE 00000000           
  1034                                  font_z_M$pass:
  1035 00001502 B8[02140000]            mov eax, font_z_M
  1036 00001507 A1[06140000]            mov eax, [font_z_M+4]
  1037                                  
  1038 0000150C E900010000              jmp font_z_N$pass
  1039 00001511 000000000000000000-     font_z_N: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  1039 0000151A 000000000000000000-
  1039 00001523 000000000000000000-
  1039 0000152C 000000000000000000-
  1039 00001535 010000000000000000-
  1039 0000153E 000000000000000000-
  1039 00001547 000001000000000000-
  1039 00001550 000000000001000000-
  1039 00001559 010000000000000000-
  1039 00001562 000000000000000100-
  1039 0000156B 000000000000000000-
  1039 00001574 000100000000000000-
  1039 0000157D 010000000000000000-
  1039 00001586 000000010000000000-
  1039 0000158F 000000000000010000-
  1039 00001598 000000000000000000-
  1039 000015A1 010000000000000001-
  1039 000015AA 000000000000000000-
  1039 000015B3 000001000000000000-
  1039 000015BC 000000000000000000-
  1039 000015C5 010000000100000000-
  1039 000015CE 000000000000000100-
  1039 000015D7 000000000000000000-
  1039 000015E0 000000000000000000-
  1039 000015E9 010000000000000000-
  1039 000015F2 000000000000000000-
  1039 000015FB 000000000000000000-
  1039 00001604 000000000000000000-
  1039 0000160D 00000000           
  1041                                  font_z_N$pass:
  1042 00001611 B8[11150000]            mov eax, font_z_N
  1043 00001616 A1[15150000]            mov eax, [font_z_N+4]
  1044                                  
  1045 0000161B E900010000              jmp font_z_O$pass
  1046 00001620 000000000000000000-     font_z_O: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  1046 00001629 000000000000000000-
  1046 00001632 000000000000000000-
  1046 0000163B 000000000000000000-
  1046 00001644 010000000100000001-
  1046 0000164D 000000010000000100-
  1046 00001656 000001000000000000-
  1046 0000165F 000000000001000000-
  1046 00001668 000000000000000000-
  1046 00001671 000000000000000100-
  1046 0000167A 000000000000000000-
  1046 00001683 000100000000000000-
  1046 0000168C 000000000000000000-
  1046 00001695 000000010000000000-
  1046 0000169E 000000000000010000-
  1046 000016A7 000000000000000000-
  1046 000016B0 000000000000000001-
  1046 000016B9 000000000000000000-
  1046 000016C2 000001000000000000-
  1046 000016CB 000000000000000000-
  1046 000016D4 000000000100000000-
  1046 000016DD 000000000000000100-
  1046 000016E6 000001000000010000-
  1046 000016EF 000100000001000000-
  1046 000016F8 010000000000000000-
  1046 00001701 000000000000000000-
  1046 0000170A 000000000000000000-
  1046 00001713 000000000000000000-
  1046 0000171C 00000000           
  1048                                  font_z_O$pass:
  1049 00001720 B8[20160000]            mov eax, font_z_O
  1050 00001725 A1[24160000]            mov eax, [font_z_O+4]
  1051                                  
  1052 0000172A E900010000              jmp font_z_P$pass
  1053 0000172F 000000000000000000-     font_z_P: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  1053 00001738 000000000000000000-
  1053 00001741 000000000000000000-
  1053 0000174A 000000000000000000-
  1053 00001753 000000000100000001-
  1053 0000175C 000000010000000000-
  1053 00001765 000000000000000000-
  1053 0000176E 000000000000000000-
  1053 00001777 010000000000000000-
  1053 00001780 000000010000000000-
  1053 00001789 000000000000000000-
  1053 00001792 000000000001000000-
  1053 0000179B 000000000000000001-
  1053 000017A4 000000000000000000-
  1053 000017AD 000000000000000000-
  1053 000017B6 000100000001000000-
  1053 000017BF 010000000000000000-
  1053 000017C8 000000000000000000-
  1053 000017D1 000000000000010000-
  1053 000017DA 000000000000000000-
  1053 000017E3 000000000000000000-
  1053 000017EC 000000000000000000-
  1053 000017F5 000001000000000000-
  1053 000017FE 000000000000000000-
  1053 00001807 000000000000000000-
  1053 00001810 000000000000000000-
  1053 00001819 000000000000000000-
  1053 00001822 000000000000000000-
  1053 0000182B 00000000           
  1055                                  font_z_P$pass:
  1056 0000182F B8[2F170000]            mov eax, font_z_P
  1057 00001834 A1[33170000]            mov eax, [font_z_P+4]
  1058                                  
  1059 00001839 E900010000              jmp font_z_Q$pass
  1060 0000183E 000000000000000000-     font_z_Q: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  1060 00001847 000000000000000000-
  1060 00001850 000000000000000000-
  1060 00001859 000000000000000000-
  1060 00001862 000000000000000001-
  1060 0000186B 000000010000000000-
  1060 00001874 000000000000000000-
  1060 0000187D 000000000000000000-
  1060 00001886 010000000000000000-
  1060 0000188F 000000010000000000-
  1060 00001898 000000000000000000-
  1060 000018A1 000100000000000000-
  1060 000018AA 000000000000000000-
  1060 000018B3 000000010000000000-
  1060 000018BC 000000000000010000-
  1060 000018C5 000000000000000000-
  1060 000018CE 010000000000000001-
  1060 000018D7 000000000000000000-
  1060 000018E0 000000000000010000-
  1060 000018E9 000000000000000000-
  1060 000018F2 010000000000000000-
  1060 000018FB 000000000000000000-
  1060 00001904 000000000000010000-
  1060 0000190D 000100000000000000-
  1060 00001916 010000000000000000-
  1060 0000191F 000000000000000000-
  1060 00001928 000000000000000000-
  1060 00001931 000000000000000000-
  1060 0000193A 00000000           
  1062                                  font_z_Q$pass:
  1063 0000193E B8[3E180000]            mov eax, font_z_Q
  1064 00001943 A1[42180000]            mov eax, [font_z_Q+4]
  1065                                  
  1066 00001948 E900010000              jmp font_z_R$pass
  1067 0000194D 000000000000000000-     font_z_R: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  1067 00001956 000000000000000000-
  1067 0000195F 000000000000000000-
  1067 00001968 000000000000000000-
  1067 00001971 000000000100000001-
  1067 0000197A 000000010000000000-
  1067 00001983 000000000000000000-
  1067 0000198C 000000000000000000-
  1067 00001995 010000000000000000-
  1067 0000199E 000000010000000000-
  1067 000019A7 000000000000000000-
  1067 000019B0 000000000001000000-
  1067 000019B9 000000000000000001-
  1067 000019C2 000000000000000000-
  1067 000019CB 000000000000000000-
  1067 000019D4 000100000001000000-
  1067 000019DD 010000000000000000-
  1067 000019E6 000000000000000000-
  1067 000019EF 000000000000010000-
  1067 000019F8 000000000000000000-
  1067 00001A01 010000000000000000-
  1067 00001A0A 000000000000000000-
  1067 00001A13 000001000000000000-
  1067 00001A1C 000000000000000000-
  1067 00001A25 010000000000000000-
  1067 00001A2E 000000000000000000-
  1067 00001A37 000000000000000000-
  1067 00001A40 000000000000000000-
  1067 00001A49 00000000           
  1069                                  font_z_R$pass:
  1070 00001A4D B8[4D190000]            mov eax, font_z_R
  1071 00001A52 A1[51190000]            mov eax, [font_z_R+4]
  1072                                  
  1073 00001A57 E900010000              jmp font_z_S$pass
  1074 00001A5C 000000000000000000-     font_z_S: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  1074 00001A65 000000000000000000-
  1074 00001A6E 000000000000000000-
  1074 00001A77 000000000000000000-
  1074 00001A80 000000000100000001-
  1074 00001A89 000000010000000100-
  1074 00001A92 000000000000000000-
  1074 00001A9B 000000000001000000-
  1074 00001AA4 000000000000000000-
  1074 00001AAD 000000000000000100-
  1074 00001AB6 000000000000000000-
  1074 00001ABF 000000000001000000-
  1074 00001AC8 010000000000000000-
  1074 00001AD1 000000000000000000-
  1074 00001ADA 000000000000000000-
  1074 00001AE3 000000000000000000-
  1074 00001AEC 010000000100000000-
  1074 00001AF5 000000000000000000-
  1074 00001AFE 000001000000000000-
  1074 00001B07 000000000000000000-
  1074 00001B10 000000000100000000-
  1074 00001B19 000000000000000000-
  1074 00001B22 000001000000010000-
  1074 00001B2B 000100000001000000-
  1074 00001B34 000000000000000000-
  1074 00001B3D 000000000000000000-
  1074 00001B46 000000000000000000-
  1074 00001B4F 000000000000000000-
  1074 00001B58 00000000           
  1076                                  font_z_S$pass:
  1077 00001B5C B8[5C1A0000]            mov eax, font_z_S
  1078 00001B61 A1[601A0000]            mov eax, [font_z_S+4]
  1079                                  
  1080 00001B66 E900010000              jmp font_z_T$pass
  1081 00001B6B 000000000000000000-     font_z_T: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  1081 00001B74 000000000000000000-
  1081 00001B7D 000000000000000000-
  1081 00001B86 000000000000000000-
  1081 00001B8F 010000000100000001-
  1081 00001B98 000000010000000100-
  1081 00001BA1 000000000000000000-
  1081 00001BAA 000000000000000000-
  1081 00001BB3 000000000100000000-
  1081 00001BBC 000000000000000000-
  1081 00001BC5 000000000000000000-
  1081 00001BCE 000000000000000000-
  1081 00001BD7 010000000000000000-
  1081 00001BE0 000000000000000000-
  1081 00001BE9 000000000000000000-
  1081 00001BF2 000000000001000000-
  1081 00001BFB 000000000000000000-
  1081 00001C04 000000000000000000-
  1081 00001C0D 000000000000000000-
  1081 00001C16 000100000000000000-
  1081 00001C1F 000000000000000000-
  1081 00001C28 000000000000000000-
  1081 00001C31 000000000000010000-
  1081 00001C3A 000000000000000000-
  1081 00001C43 000000000000000000-
  1081 00001C4C 000000000000000000-
  1081 00001C55 000000000000000000-
  1081 00001C5E 000000000000000000-
  1081 00001C67 00000000           
  1083                                  font_z_T$pass:
  1084 00001C6B B8[6B1B0000]            mov eax, font_z_T
  1085 00001C70 A1[6F1B0000]            mov eax, [font_z_T+4]
  1086                                  
  1087 00001C75 E900010000              jmp font_z_U$pass
  1088 00001C7A 000000000000000000-     font_z_U: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  1088 00001C83 000000000000000000-
  1088 00001C8C 000000000000000000-
  1088 00001C95 000000000000000000-
  1088 00001C9E 010000000000000000-
  1088 00001CA7 000000000000000000-
  1088 00001CB0 000001000000000000-
  1088 00001CB9 000000000001000000-
  1088 00001CC2 000000000000000000-
  1088 00001CCB 000000000000000100-
  1088 00001CD4 000000000000000000-
  1088 00001CDD 000100000000000000-
  1088 00001CE6 000000000000000000-
  1088 00001CEF 000000010000000000-
  1088 00001CF8 000000000000010000-
  1088 00001D01 000000000000000000-
  1088 00001D0A 000000000000000001-
  1088 00001D13 000000000000000000-
  1088 00001D1C 000000000000010000-
  1088 00001D25 000000000000000000-
  1088 00001D2E 010000000000000000-
  1088 00001D37 000000000000000000-
  1088 00001D40 000000000000010000-
  1088 00001D49 000100000000000000-
  1088 00001D52 000000000000000000-
  1088 00001D5B 000000000000000000-
  1088 00001D64 000000000000000000-
  1088 00001D6D 000000000000000000-
  1088 00001D76 00000000           
  1090                                  font_z_U$pass:
  1091 00001D7A B8[7A1C0000]            mov eax, font_z_U
  1092 00001D7F A1[7E1C0000]            mov eax, [font_z_U+4]
  1093                                  
  1094 00001D84 E900010000              jmp font_z_V$pass
  1095 00001D89 000000000000000000-     font_z_V: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  1095 00001D92 000000000000000000-
  1095 00001D9B 000000000000000000-
  1095 00001DA4 000000000000000000-
  1095 00001DAD 010000000000000000-
  1095 00001DB6 000000000000000000-
  1095 00001DBF 000001000000000000-
  1095 00001DC8 000000000001000000-
  1095 00001DD1 000000000000000000-
  1095 00001DDA 000000000000000100-
  1095 00001DE3 000000000000000000-
  1095 00001DEC 000000000001000000-
  1095 00001DF5 000000000000000001-
  1095 00001DFE 000000000000000000-
  1095 00001E07 000000000000000000-
  1095 00001E10 000100000000000000-
  1095 00001E19 000000000100000000-
  1095 00001E22 000000000000000000-
  1095 00001E2B 000000000000000000-
  1095 00001E34 000100000001000000-
  1095 00001E3D 000000000000000000-
  1095 00001E46 000000000000000000-
  1095 00001E4F 000000000000010000-
  1095 00001E58 000100000000000000-
  1095 00001E61 000000000000000000-
  1095 00001E6A 000000000000000000-
  1095 00001E73 000000000000000000-
  1095 00001E7C 000000000000000000-
  1095 00001E85 00000000           
  1097                                  font_z_V$pass:
  1098 00001E89 B8[891D0000]            mov eax, font_z_V
  1099 00001E8E A1[8D1D0000]            mov eax, [font_z_V+4]
  1100                                  
  1101 00001E93 E900010000              jmp font_z_W$pass
  1102 00001E98 000000000000000000-     font_z_W: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  1102 00001EA1 000000000000000000-
  1102 00001EAA 000000000000000000-
  1102 00001EB3 000000000000000000-
  1102 00001EBC 010000000000000000-
  1102 00001EC5 000000000000000000-
  1102 00001ECE 000001000000000000-
  1102 00001ED7 000000000001000000-
  1102 00001EE0 000000000000000000-
  1102 00001EE9 000000000000000100-
  1102 00001EF2 000000000000000000-
  1102 00001EFB 000100000000000000-
  1102 00001F04 000000000000000000-
  1102 00001F0D 000000010000000000-
  1102 00001F16 000000000000010000-
  1102 00001F1F 000000000001000000-
  1102 00001F28 010000000000000001-
  1102 00001F31 000000000000000000-
  1102 00001F3A 000001000000010000-
  1102 00001F43 000000000000000000-
  1102 00001F4C 010000000100000000-
  1102 00001F55 000000000000000100-
  1102 00001F5E 000000000000000000-
  1102 00001F67 000000000000000000-
  1102 00001F70 010000000000000000-
  1102 00001F79 000000000000000000-
  1102 00001F82 000000000000000000-
  1102 00001F8B 000000000000000000-
  1102 00001F94 00000000           
  1104                                  font_z_W$pass:
  1105 00001F98 B8[981E0000]            mov eax, font_z_W
  1106 00001F9D A1[9C1E0000]            mov eax, [font_z_W+4]
  1107                                  
  1108 00001FA2 E900010000              jmp font_z_X$pass
  1109 00001FA7 000000000000000000-     font_z_X: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  1109 00001FB0 000000000000000000-
  1109 00001FB9 000000000000000000-
  1109 00001FC2 000000000000000000-
  1109 00001FCB 010000000000000000-
  1109 00001FD4 000000000000000000-
  1109 00001FDD 000001000000000000-
  1109 00001FE6 000000000000000000-
  1109 00001FEF 010000000000000000-
  1109 00001FF8 000000010000000000-
  1109 00002001 000000000000000000-
  1109 0000200A 000000000000000000-
  1109 00002013 010000000100000000-
  1109 0000201C 000000000000000000-
  1109 00002025 000000000000000000-
  1109 0000202E 000000000001000000-
  1109 00002037 010000000000000000-
  1109 00002040 000000000000000000-
  1109 00002049 000000000000010000-
  1109 00002052 000000000000000000-
  1109 0000205B 010000000000000000-
  1109 00002064 000000000000000100-
  1109 0000206D 000000000000000000-
  1109 00002076 000000000000000000-
  1109 0000207F 010000000000000000-
  1109 00002088 000000000000000000-
  1109 00002091 000000000000000000-
  1109 0000209A 000000000000000000-
  1109 000020A3 00000000           
  1111                                  font_z_X$pass:
  1112 000020A7 B8[A71F0000]            mov eax, font_z_X
  1113 000020AC A1[AB1F0000]            mov eax, [font_z_X+4]
  1114                                  
  1115 000020B1 E900010000              jmp font_z_Y$pass
  1116 000020B6 000000000000000000-     font_z_Y: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  1116 000020BF 000000000000000000-
  1116 000020C8 000000000000000000-
  1116 000020D1 000000000000000000-
  1116 000020DA 010000000000000000-
  1116 000020E3 000000000000000100-
  1116 000020EC 000000000000000000-
  1116 000020F5 000000000000000000-
  1116 000020FE 010000000000000001-
  1116 00002107 000000000000000000-
  1116 00002110 000000000000000000-
  1116 00002119 000000000000000000-
  1116 00002122 010000000000000000-
  1116 0000212B 000000000000000000-
  1116 00002134 000000000000000000-
  1116 0000213D 000000000001000000-
  1116 00002146 000000000000000000-
  1116 0000214F 000000000000000000-
  1116 00002158 000000000000000000-
  1116 00002161 000100000000000000-
  1116 0000216A 000000000000000000-
  1116 00002173 000000000000000000-
  1116 0000217C 000000000000010000-
  1116 00002185 000000000000000000-
  1116 0000218E 000000000000000000-
  1116 00002197 000000000000000000-
  1116 000021A0 000000000000000000-
  1116 000021A9 000000000000000000-
  1116 000021B2 00000000           
  1118                                  font_z_Y$pass:
  1119 000021B6 B8[B6200000]            mov eax, font_z_Y
  1120 000021BB A1[BA200000]            mov eax, [font_z_Y+4]
  1121                                  
  1122 000021C0 E900010000              jmp font_z_Z$pass
  1123 000021C5 000000000000000000-     font_z_Z: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  1123 000021CE 000000000000000000-
  1123 000021D7 000000000000000000-
  1123 000021E0 000000000000000000-
  1123 000021E9 010000000100000001-
  1123 000021F2 000000010000000100-
  1123 000021FB 000001000000000000-
  1123 00002204 000000000000000000-
  1123 0000220D 000000000000000000-
  1123 00002216 000000010000000000-
  1123 0000221F 000000000000000000-
  1123 00002228 000000000000000000-
  1123 00002231 000000000100000000-
  1123 0000223A 000000000000000000-
  1123 00002243 000000000000000000-
  1123 0000224C 000000000001000000-
  1123 00002255 000000000000000000-
  1123 0000225E 000000000000000000-
  1123 00002267 000000000000010000-
  1123 00002270 000000000000000000-
  1123 00002279 000000000000000000-
  1123 00002282 000000000000000100-
  1123 0000228B 000001000000010000-
  1123 00002294 000100000001000000-
  1123 0000229D 010000000000000000-
  1123 000022A6 000000000000000000-
  1123 000022AF 000000000000000000-
  1123 000022B8 000000000000000000-
  1123 000022C1 00000000           
  1125                                  font_z_Z$pass:
  1126 000022C5 B8[C5210000]            mov eax, font_z_Z
  1127 000022CA A1[C9210000]            mov eax, [font_z_Z+4]
  1128                                  
  1129 000022CF E900010000              jmp font_z_question$pass
  1130 000022D4 000000000000000000-     font_z_question: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 
  1130 000022DD 000000000000000000-
  1130 000022E6 000000000000000000-
  1130 000022EF 000000000000000000-
  1130 000022F8 000000000100000001-
  1130 00002301 000000010000000100-
  1130 0000230A 000000000000000000-
  1130 00002313 000000000001000000-
  1130 0000231C 000000000000000000-
  1130 00002325 000000000000000100-
  1130 0000232E 000000000000000000-
  1130 00002337 000000000000000000-
  1130 00002340 000000000000000001-
  1130 00002349 000000000000000000-
  1130 00002352 000000000000000000-
  1130 0000235B 000000000000000000-
  1130 00002364 010000000000000000-
  1130 0000236D 000000000000000000-
  1130 00002376 000000000000000000-
  1130 0000237F 000000000001000000-
  1130 00002388 000000000000000000-
  1130 00002391 000000000000000000-
  1130 0000239A 000000000000000000-
  1130 000023A3 000000000000000000-
  1130 000023AC 000000000000000000-
  1130 000023B5 000000000000000000-
  1130 000023BE 000000000000010000-
  1130 000023C7 000000000000000000-
  1130 000023D0 00000000           
  1132                                  font_z_question$pass:
  1133 000023D4 B8[D4220000]            mov eax, font_z_question
  1134 000023D9 A1[D8220000]            mov eax, [font_z_question+4]
  1135                                  
  1136 000023DE E900010000              jmp font_z_space$pass
  1137 000023E3 000000000000000000-     font_z_space: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  1137 000023EC 000000000000000000-
  1137 000023F5 000000000000000000-
  1137 000023FE 000000000000000000-
  1137 00002407 000000000000000000-
  1137 00002410 000000000000000000-
  1137 00002419 000000000000000000-
  1137 00002422 000000000000000000-
  1137 0000242B 000000000000000000-
  1137 00002434 000000000000000000-
  1137 0000243D 000000000000000000-
  1137 00002446 000000000000000000-
  1137 0000244F 000000000000000000-
  1137 00002458 000000000000000000-
  1137 00002461 000000000000000000-
  1137 0000246A 000000000000000000-
  1137 00002473 000000000000000000-
  1137 0000247C 000000000000000000-
  1137 00002485 000000000000000000-
  1137 0000248E 000000000000000000-
  1137 00002497 000000000000000000-
  1137 000024A0 000000000000000000-
  1137 000024A9 000000000000000000-
  1137 000024B2 000000000000000000-
  1137 000024BB 000000000000000000-
  1137 000024C4 000000000000000000-
  1137 000024CD 000000000000000000-
  1137 000024D6 000000000000000000-
  1137 000024DF 00000000           
  1139                                  font_z_space$pass:
  1140 000024E3 B8[E3230000]            mov eax, font_z_space
  1141 000024E8 A1[E7230000]            mov eax, [font_z_space+4]
  1142                                  
  1143 000024ED E900010000              jmp font_z_add$pass
  1144 000024F2 000000000000000000-     font_z_add: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  1144 000024FB 000000000000000000-
  1144 00002504 000000000000000000-
  1144 0000250D 000000000000000000-
  1144 00002516 000000000000000001-
  1144 0000251F 000000010000000000-
  1144 00002528 000000000000000000-
  1144 00002531 000000000000000000-
  1144 0000253A 000000000100000001-
  1144 00002543 000000000000000000-
  1144 0000254C 000000000000000000-
  1144 00002555 000100000001000000-
  1144 0000255E 010000000100000001-
  1144 00002567 000000010000000000-
  1144 00002570 000000000000010000-
  1144 00002579 000100000001000000-
  1144 00002582 010000000100000001-
  1144 0000258B 000000000000000000-
  1144 00002594 000000000000000000-
  1144 0000259D 000100000001000000-
  1144 000025A6 000000000000000000-
  1144 000025AF 000000000000000000-
  1144 000025B8 000000000000010000-
  1144 000025C1 000100000000000000-
  1144 000025CA 000000000000000000-
  1144 000025D3 000000000000000000-
  1144 000025DC 000000000000000000-
  1144 000025E5 000000000000000000-
  1144 000025EE 00000000           
  1146                                  font_z_add$pass:
  1147 000025F2 B8[F2240000]            mov eax, font_z_add
  1148 000025F7 A1[F6240000]            mov eax, [font_z_add+4]
  1149                                  
  1150 000025FC E900010000              jmp font_z_sub$pass
  1151 00002601 000000000000000000-     font_z_sub: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  1151 0000260A 000000000000000000-
  1151 00002613 000000000000000000-
  1151 0000261C 000000000000000000-
  1151 00002625 000000000000000000-
  1151 0000262E 000000000000000000-
  1151 00002637 000000000000000000-
  1151 00002640 000000000000000000-
  1151 00002649 000000000000000000-
  1151 00002652 000000000000000000-
  1151 0000265B 000000000000000000-
  1151 00002664 000100000001000000-
  1151 0000266D 010000000100000001-
  1151 00002676 000000010000000000-
  1151 0000267F 000000000000010000-
  1151 00002688 000100000001000000-
  1151 00002691 010000000100000001-
  1151 0000269A 000000000000000000-
  1151 000026A3 000000000000000000-
  1151 000026AC 000000000000000000-
  1151 000026B5 000000000000000000-
  1151 000026BE 000000000000000000-
  1151 000026C7 000000000000000000-
  1151 000026D0 000000000000000000-
  1151 000026D9 000000000000000000-
  1151 000026E2 000000000000000000-
  1151 000026EB 000000000000000000-
  1151 000026F4 000000000000000000-
  1151 000026FD 00000000           
  1153                                  font_z_sub$pass:
  1154 00002701 B8[01260000]            mov eax, font_z_sub
  1155 00002706 A1[05260000]            mov eax, [font_z_sub+4]
  1156                                  
  1157 0000270B E9A00F0000              jmp font_z_screen_buf$pass
  1158 00002710 000000002000000020-     font_z_screen_buf: dd 0 32, 32, 32, 32, 33, 34, 35, 36, 37, 38, 39, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, ...
  1158 00002719 000000200000002100-
  1158 00002722 000022000000230000-
  1158 0000272B 002400000025000000-
  1158 00002734 260000002700000020-
  1158 0000273D 000000200000002000-
  1158 00002746 000020000000200000-
  1158 0000274F 002000000020000000-
  1158 00002758 200000002000000020-
  1158 00002761 000000200000002000-
  1158 0000276A 000020000000200000-
  1158 00002773 002000000020000000-
  1158 0000277C 200000002000000020-
  1158 00002785 000000200000002000-
  1158 0000278E 000020000000200000-
  1158 00002797 002000000020000000-
  1158 000027A0 200000002000000020-
  1158 000027A9 000000200000002000-
  1158 000027B2 000020000000200000-
  1158 000027BB 002000000020000000-
  1158 000027C4 200000002000000020-
  1158 000027CD 000000200000002000-
  1158 000027D6 000020000000200000-
  1158 000027DF 002000000020000000-
  1158 000027E8 200000002000000020-
  1158 000027F1 000000200000002000-
  1158 000027FA 000020000000200000-
  1158 00002803 002000000020000000-
  1158 0000280C 200000002000000020-
  1158 00002815 000000200000002000-
  1158 0000281E 000020000000200000-
  1158 00002827 002000000020000000-
  1158 00002830 200000002000000020-
  1158 00002839 000000200000002000-
  1158 00002842 000020000000200000-
  1158 0000284B 002000000020000000-
  1158 00002854 200000002000000020-
  1158 0000285D 000000200000002000-
  1158 00002866 000020000000200000-
  1158 0000286F 002000000020000000-
  1158 00002878 200000002000000020-
  1158 00002881 000000200000002000-
  1158 0000288A 000020000000200000-
  1158 00002893 002000000020000000-
  1158 0000289C 200000002000000020-
  1158 000028A5 000000200000002000-
  1158 000028AE 000020000000200000-
  1158 000028B7 002000000020000000-
  1158 000028C0 200000002000000020-
  1158 000028C9 000000200000002000-
  1158 000028D2 000020000000200000-
  1158 000028DB 002000000020000000-
  1158 000028E4 200000002000000020-
  1158 000028ED 000000200000002000-
  1158 000028F6 000020000000200000-
  1158 000028FF 002000000020000000-
  1158 00002908 200000002000000020-
  1158 00002911 000000200000002000-
  1158 0000291A 000020000000200000-
  1158 00002923 002000000020000000-
  1158 0000292C 200000002000000020-
  1158 00002935 000000200000002000-
  1158 0000293E 000020000000200000-
  1158 00002947 002000000020000000-
  1158 00002950 200000002000000020-
  1158 00002959 000000200000002000-
  1158 00002962 000020000000200000-
  1158 0000296B 002000000020000000-
  1158 00002974 200000002000000020-
  1158 0000297D 000000200000002000-
  1158 00002986 000020000000200000-
  1158 0000298F 002000000020000000-
  1158 00002998 200000002000000020-
  1158 000029A1 000000200000002000-
  1158 000029AA 000020000000200000-
  1158 000029B3 002000000020000000-
  1158 000029BC 200000002000000020-
  1158 000029C5 000000200000002000-
  1158 000029CE 000020000000200000-
  1158 000029D7 002000000020000000-
  1158 000029E0 200000002000000020-
  1158 000029E9 000000200000002000-
  1158 000029F2 000020000000200000-
  1158 000029FB 002000000020000000-
  1158 00002A04 200000002000000020-
  1158 00002A0D 000000200000002000-
  1158 00002A16 000020000000200000-
  1158 00002A1F 002000000020000000-
  1158 00002A28 200000002000000020-
  1158 00002A31 000000200000002000-
  1158 00002A3A 000020000000200000-
  1158 00002A43 002000000020000000-
  1158 00002A4C 200000002000000020-
  1158 00002A55 000000200000002000-
  1158 00002A5E 000020000000200000-
  1158 00002A67 002000000020000000-
  1158 00002A70 200000002000000020-
  1158 00002A79 000000200000002000-
  1158 00002A82 000020000000200000-
  1158 00002A8B 002000000020000000-
  1158 00002A94 200000002000000020-
  1158 00002A9D 000000200000002000-
  1158 00002AA6 000020000000200000-
  1158 00002AAF 002000000020000000-
  1158 00002AB8 200000002000000020-
  1158 00002AC1 000000200000002000-
  1158 00002ACA 000020000000200000-
  1158 00002AD3 002000000020000000-
  1158 00002ADC 200000002000000020-
  1158 00002AE5 000000200000002000-
  1158 00002AEE 000020000000200000-
  1158 00002AF7 002000000020000000-
  1158 00002B00 200000002000000020-
  1158 00002B09 000000200000002000-
  1158 00002B12 000020000000200000-
  1158 00002B1B 002000000020000000-
  1158 00002B24 200000002000000020-
  1158 00002B2D 000000200000002000-
  1158 00002B36 000020000000200000-
  1158 00002B3F 002000000020000000-
  1158 00002B48 200000002000000020-
  1158 00002B51 000000200000002000-
  1158 00002B5A 000020000000200000-
  1158 00002B63 002000000020000000-
  1158 00002B6C 200000002000000020-
  1158 00002B75 000000200000002000-
  1158 00002B7E 000020000000200000-
  1158 00002B87 002000000020000000-
  1158 00002B90 200000002000000020-
  1158 00002B99 000000200000002000-
  1158 00002BA2 000020000000200000-
  1158 00002BAB 002000000020000000-
  1158 00002BB4 200000002000000020-
  1158 00002BBD 000000200000002000-
  1158 00002BC6 000020000000200000-
  1158 00002BCF 002000000020000000-
  1158 00002BD8 200000002000000020-
  1158 00002BE1 000000200000002000-
  1158 00002BEA 000020000000200000-
  1158 00002BF3 002000000020000000-
  1158 00002BFC 200000002000000020-
  1158 00002C05 000000200000002000-
  1158 00002C0E 000020000000200000-
  1158 00002C17 002000000020000000-
  1158 00002C20 200000002000000020-
  1158 00002C29 000000200000002000-
  1158 00002C32 000020000000200000-
  1158 00002C3B 002000000020000000-
  1158 00002C44 200000002000000020-
  1158 00002C4D 000000200000002000-
  1158 00002C56 000020000000200000-
  1158 00002C5F 002000000020000000-
  1158 00002C68 200000002000000020-
  1158 00002C71 000000200000002000-
  1158 00002C7A 000020000000200000-
  1158 00002C83 002000000020000000-
  1158 00002C8C 200000002000000020-
  1158 00002C95 000000200000002000-
  1158 00002C9E 000020000000200000-
  1158 00002CA7 002000000020000000-
  1158 00002CB0 200000002000000020-
  1158 00002CB9 000000200000002000-
  1158 00002CC2 000020000000200000-
  1158 00002CCB 002000000020000000-
  1158 00002CD4 200000002000000020-
  1158 00002CDD 000000200000002000-
  1158 00002CE6 000020000000200000-
  1158 00002CEF 002000000020000000-
  1158 00002CF8 200000002000000020-
  1158 00002D01 000000200000002000-
  1158 00002D0A 000020000000200000-
  1158 00002D13 002000000020000000-
  1158 00002D1C 200000002000000020-
  1158 00002D25 000000200000002000-
  1158 00002D2E 000020000000200000-
  1158 00002D37 002000000020000000-
  1158 00002D40 200000002000000020-
  1158 00002D49 000000200000002000-
  1158 00002D52 000020000000200000-
  1158 00002D5B 002000000020000000-
  1158 00002D64 200000002000000020-
  1158 00002D6D 000000200000002000-
  1158 00002D76 000020000000200000-
  1158 00002D7F 002000000020000000-
  1158 00002D88 200000002000000020-
  1158 00002D91 000000200000002000-
  1158 00002D9A 000020000000200000-
  1158 00002DA3 002000000020000000-
  1158 00002DAC 200000002000000020-
  1158 00002DB5 000000200000002000-
  1158 00002DBE 000020000000200000-
  1158 00002DC7 002000000020000000-
  1158 00002DD0 200000002000000020-
  1158 00002DD9 000000200000002000-
  1158 00002DE2 000020000000200000-
  1158 00002DEB 002000000020000000-
  1158 00002DF4 200000002000000020-
  1158 00002DFD 000000200000002000-
  1158 00002E06 000020000000200000-
  1158 00002E0F 002000000020000000-
  1158 00002E18 200000002000000020-
  1158 00002E21 000000200000002000-
  1158 00002E2A 000020000000200000-
  1158 00002E33 002000000020000000-
  1158 00002E3C 200000002000000020-
  1158 00002E45 000000200000002000-
  1158 00002E4E 000020000000200000-
  1158 00002E57 002000000020000000-
  1158 00002E60 200000002000000020-
  1158 00002E69 000000200000002000-
  1158 00002E72 000020000000200000-
  1158 00002E7B 002000000020000000-
  1158 00002E84 200000002000000020-
  1158 00002E8D 000000200000002000-
  1158 00002E96 000020000000200000-
  1158 00002E9F 002000000020000000-
  1158 00002EA8 200000002000000020-
  1158 00002EB1 000000200000002000-
  1158 00002EBA 000020000000200000-
  1158 00002EC3 002000000020000000-
  1158 00002ECC 200000002000000020-
  1158 00002ED5 000000200000002000-
  1158 00002EDE 000020000000200000-
  1158 00002EE7 002000000020000000-
  1158 00002EF0 200000002000000020-
  1158 00002EF9 000000200000002000-
  1158 00002F02 000020000000200000-
  1158 00002F0B 002000000020000000-
  1158 00002F14 200000002000000020-
  1158 00002F1D 000000200000002000-
  1158 00002F26 000020000000200000-
  1158 00002F2F 002000000020000000-
  1158 00002F38 200000002000000020-
  1158 00002F41 000000200000002000-
  1158 00002F4A 000020000000200000-
  1158 00002F53 002000000020000000-
  1158 00002F5C 200000002000000020-
  1158 00002F65 000000200000002000-
  1158 00002F6E 000020000000200000-
  1158 00002F77 002000000020000000-
  1158 00002F80 200000002000000020-
  1158 00002F89 000000200000002000-
  1158 00002F92 000020000000200000-
  1158 00002F9B 002000000020000000-
  1158 00002FA4 200000002000000020-
  1158 00002FAD 000000200000002000-
  1158 00002FB6 000020000000200000-
  1158 00002FBF 002000000020000000-
  1158 00002FC8 200000002000000020-
  1158 00002FD1 000000200000002000-
  1158 00002FDA 000020000000200000-
  1158 00002FE3 002000000020000000-
  1158 00002FEC 200000002000000020-
  1158 00002FF5 000000200000002000-
  1158 00002FFE 000020000000200000-
  1158 00003007 002000000020000000-
  1158 00003010 200000002000000020-
  1158 00003019 000000200000002000-
  1158 00003022 000020000000200000-
  1158 0000302B 002000000020000000-
  1158 00003034 200000002000000020-
  1158 0000303D 000000200000002000-
  1158 00003046 000020000000200000-
  1158 0000304F 002000000020000000-
  1158 00003058 200000002000000020-
  1158 00003061 000000200000002000-
  1158 0000306A 000020000000200000-
  1158 00003073 002000000020000000-
  1158 0000307C 200000002000000020-
  1158 00003085 000000200000002000-
  1158 0000308E 000020000000200000-
  1158 00003097 002000000020000000-
  1158 000030A0 200000002000000020-
  1158 000030A9 000000200000002000-
  1158 000030B2 000020000000200000-
  1158 000030BB 002000000020000000-
  1158 000030C4 200000002000000020-
  1158 000030CD 000000200000002000-
  1158 000030D6 000020000000200000-
  1158 000030DF 002000000020000000-
  1158 000030E8 200000002000000020-
  1158 000030F1 000000200000002000-
  1158 000030FA 000020000000200000-
  1158 00003103 002000000020000000-
  1158 0000310C 200000002000000020-
  1158 00003115 000000200000002000-
  1158 0000311E 000020000000200000-
  1158 00003127 002000000020000000-
  1158 00003130 200000002000000020-
  1158 00003139 000000200000002000-
  1158 00003142 000020000000200000-
  1158 0000314B 002000000020000000-
  1158 00003154 200000002000000020-
  1158 0000315D 000000200000002000-
  1158 00003166 000020000000200000-
  1158 0000316F 002000000020000000-
  1158 00003178 200000002000000020-
  1158 00003181 000000200000002000-
  1158 0000318A 000020000000200000-
  1158 00003193 002000000020000000-
  1158 0000319C 200000002000000020-
  1158 000031A5 000000200000002000-
  1158 000031AE 000020000000200000-
  1158 000031B7 002000000020000000-
  1158 000031C0 200000002000000020-
  1158 000031C9 000000200000002000-
  1158 000031D2 000020000000200000-
  1158 000031DB 002000000020000000-
  1158 000031E4 200000002000000020-
  1158 000031ED 000000200000002000-
  1158 000031F6 000020000000200000-
  1158 000031FF 002000000020000000-
  1158 00003208 200000002000000020-
  1158 00003211 000000200000002000-
  1158 0000321A 000020000000200000-
  1158 00003223 002000000020000000-
  1158 0000322C 200000002000000020-
  1158 00003235 000000200000002000-
  1158 0000323E 000020000000200000-
  1158 00003247 002000000020000000-
  1158 00003250 200000002000000020-
  1158 00003259 000000200000002000-
  1158 00003262 000020000000200000-
  1158 0000326B 002000000020000000-
  1158 00003274 200000002000000020-
  1158 0000327D 000000200000002000-
  1158 00003286 000020000000200000-
  1158 0000328F 002000000020000000-
  1158 00003298 200000002000000020-
  1158 000032A1 000000200000002000-
  1158 000032AA 000020000000200000-
  1158 000032B3 002000000020000000-
  1158 000032BC 200000002000000020-
  1158 000032C5 000000200000002000-
  1158 000032CE 000020000000200000-
  1158 000032D7 002000000020000000-
  1158 000032E0 200000002000000020-
  1158 000032E9 000000200000002000-
  1158 000032F2 000020000000200000-
  1158 000032FB 002000000020000000-
  1158 00003304 200000002000000020-
  1158 0000330D 000000200000002000-
  1158 00003316 000020000000200000-
  1158 0000331F 002000000020000000-
  1158 00003328 200000002000000020-
  1158 00003331 000000200000002000-
  1158 0000333A 000020000000200000-
  1158 00003343 002000000020000000-
  1158 0000334C 200000002000000020-
  1158 00003355 000000200000002000-
  1158 0000335E 000020000000200000-
  1158 00003367 002000000020000000-
  1158 00003370 200000002000000020-
  1158 00003379 000000200000002000-
  1158 00003382 000020000000200000-
  1158 0000338B 002000000020000000-
  1158 00003394 200000002000000020-
  1158 0000339D 000000200000002000-
  1158 000033A6 000020000000200000-
  1158 000033AF 002000000020000000-
  1158 000033B8 200000002000000020-
  1158 000033C1 000000200000002000-
  1158 000033CA 000020000000200000-
  1158 000033D3 002000000020000000-
  1158 000033DC 200000002000000020-
  1158 000033E5 000000200000002000-
  1158 000033EE 000020000000200000-
  1158 000033F7 002000000020000000-
  1158 00003400 200000002000000020-
  1158 00003409 000000200000002000-
  1158 00003412 000020000000200000-
  1158 0000341B 002000000020000000-
  1158 00003424 200000002000000020-
  1158 0000342D 000000200000002000-
  1158 00003436 000020000000200000-
  1158 0000343F 002000000020000000-
  1158 00003448 200000002000000020-
  1158 00003451 000000200000002000-
  1158 0000345A 000020000000200000-
  1158 00003463 002000000020000000-
  1158 0000346C 200000002000000020-
  1158 00003475 000000200000002000-
  1158 0000347E 000020000000200000-
  1158 00003487 002000000020000000-
  1158 00003490 200000002000000020-
  1158 00003499 000000200000002000-
  1158 000034A2 000020000000200000-
  1158 000034AB 002000000020000000-
  1158 000034B4 200000002000000020-
  1158 000034BD 000000200000002000-
  1158 000034C6 000020000000200000-
  1158 000034CF 002000000020000000-
  1158 000034D8 200000002000000020-
  1158 000034E1 000000200000002000-
  1158 000034EA 000020000000200000-
  1158 000034F3 002000000020000000-
  1158 000034FC 200000002000000020-
  1158 00003505 000000200000002000-
  1158 0000350E 000020000000200000-
  1158 00003517 002000000020000000-
  1158 00003520 200000002000000020-
  1158 00003529 000000200000002000-
  1158 00003532 000020000000200000-
  1158 0000353B 002000000020000000-
  1158 00003544 200000002000000020-
  1158 0000354D 000000200000002000-
  1158 00003556 000020000000200000-
  1158 0000355F 002000000020000000-
  1158 00003568 200000002000000020-
  1158 00003571 000000200000002000-
  1158 0000357A 000020000000200000-
  1158 00003583 002000000020000000-
  1158 0000358C 200000002000000020-
  1158 00003595 000000200000002000-
  1158 0000359E 000020000000200000-
  1158 000035A7 002000000020000000-
  1158 000035B0 200000002000000020-
  1158 000035B9 000000200000002000-
  1158 000035C2 000020000000200000-
  1158 000035CB 002000000020000000-
  1158 000035D4 200000002000000020-
  1158 000035DD 000000200000002000-
  1158 000035E6 000020000000200000-
  1158 000035EF 002000000020000000-
  1158 000035F8 200000002000000020-
  1158 00003601 000000200000002000-
  1158 0000360A 000020000000200000-
  1158 00003613 002000000020000000-
  1158 0000361C 200000002000000020-
  1158 00003625 000000200000002000-
  1158 0000362E 000020000000200000-
  1158 00003637 002000000020000000-
  1158 00003640 200000002000000020-
  1158 00003649 000000200000002000-
  1158 00003652 000020000000200000-
  1158 0000365B 002000000020000000-
  1158 00003664 200000002000000020-
  1158 0000366D 000000200000002000-
  1158 00003676 000020000000200000-
  1158 0000367F 002000000020000000-
  1158 00003688 200000002000000020-
  1158 00003691 000000200000002000-
  1158 0000369A 000020000000200000-
  1158 000036A3 002000000020000000-
  1158 000036AC 20000000           
  1160                                  font_z_screen_buf$pass:
  1161 000036B0 B8[10270000]            mov eax, font_z_screen_buf
  1162 000036B5 A1[14270000]            mov eax, [font_z_screen_buf+4]
  1163                                  
  1164                                  
  1165                                  ;############[fun begin]getAddrByAscii############
  1166 000036BA E955050000              jmp font_z_getAddrByAscii$pass
  1167                                  font_z_getAddrByAscii:
  1168 000036BF 5D                      pop ebp
  1169                                  ;param: ascii
  1170 000036C0 EB04                    jmp font_z_getAddrByAscii_ascii$pass
  1171 000036C2 00000000                font_z_getAddrByAscii_ascii: dd 0
  1172                                  font_z_getAddrByAscii_ascii$pass:
  1173 000036C6 58                      pop eax
  1174 000036C7 A3[C2360000]            mov [font_z_getAddrByAscii_ascii], eax
  1175 000036CC 55                      push ebp
  1176                                  ;########## font_z_getAddrByAscii_if#r1_$start ##########
  1177 000036CD A1[C2360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1178 000036D2 50                      push eax
  1179 000036D3 B820000000              mov eax, 32
  1180 000036D8 50                      push eax
  1181 000036D9 5B                      pop ebx
  1182 000036DA 58                      pop eax
  1183 000036DB 39D8                    cmp eax, ebx
  1184 000036DD 7407                    je font_z_getAddrByAscii_if#r1_equ#r2$true
  1185 000036DF B800000000              mov eax, 0
  1186 000036E4 EB05                    jmp font_z_getAddrByAscii_if#r1_equ#r2$false
  1187                                  font_z_getAddrByAscii_if#r1_equ#r2$true:
  1188 000036E6 B801000000              mov eax, 1
  1189                                  font_z_getAddrByAscii_if#r1_equ#r2$false:
  1190 000036EB 50                      push eax
  1191 000036EC 58                      pop eax
  1192 000036ED 83F800                  cmp eax, 0
  1193 000036F0 740D                    je font_z_getAddrByAscii_if#r1_$else
  1194 000036F2 B8[E3230000]            mov eax, font_z_space
  1195 000036F7 50                      push eax
  1196 000036F8 58                      pop eax
  1197 000036F9 5D                      pop ebp
  1198 000036FA 50                      push eax
  1199 000036FB 55                      push ebp
  1200 000036FC C3                      ret
  1201 000036FD EB00                    jmp font_z_getAddrByAscii_if#r1_$end
  1202                                  font_z_getAddrByAscii_if#r1_$else:
  1203                                  font_z_getAddrByAscii_if#r1_$end:
  1204                                  ;========== font_z_getAddrByAscii_if#r1_$end ==========
  1205                                  
  1206                                  ;########## font_z_getAddrByAscii_if#r3_$start ##########
  1207 000036FF A1[C2360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1208 00003704 50                      push eax
  1209 00003705 B841000000              mov eax, 65
  1210 0000370A 50                      push eax
  1211 0000370B 5B                      pop ebx
  1212 0000370C 58                      pop eax
  1213 0000370D 39D8                    cmp eax, ebx
  1214 0000370F 7407                    je font_z_getAddrByAscii_if#r3_equ#r4$true
  1215 00003711 B800000000              mov eax, 0
  1216 00003716 EB05                    jmp font_z_getAddrByAscii_if#r3_equ#r4$false
  1217                                  font_z_getAddrByAscii_if#r3_equ#r4$true:
  1218 00003718 B801000000              mov eax, 1
  1219                                  font_z_getAddrByAscii_if#r3_equ#r4$false:
  1220 0000371D 50                      push eax
  1221 0000371E 58                      pop eax
  1222 0000371F 83F800                  cmp eax, 0
  1223 00003722 740D                    je font_z_getAddrByAscii_if#r3_$else
  1224 00003724 B8[4E070000]            mov eax, font_z_A
  1225 00003729 50                      push eax
  1226 0000372A 58                      pop eax
  1227 0000372B 5D                      pop ebp
  1228 0000372C 50                      push eax
  1229 0000372D 55                      push ebp
  1230 0000372E C3                      ret
  1231 0000372F EB00                    jmp font_z_getAddrByAscii_if#r3_$end
  1232                                  font_z_getAddrByAscii_if#r3_$else:
  1233                                  font_z_getAddrByAscii_if#r3_$end:
  1234                                  ;========== font_z_getAddrByAscii_if#r3_$end ==========
  1235                                  
  1236                                  ;########## font_z_getAddrByAscii_if#r5_$start ##########
  1237 00003731 A1[C2360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1238 00003736 50                      push eax
  1239 00003737 B842000000              mov eax, 66
  1240 0000373C 50                      push eax
  1241 0000373D 5B                      pop ebx
  1242 0000373E 58                      pop eax
  1243 0000373F 39D8                    cmp eax, ebx
  1244 00003741 7407                    je font_z_getAddrByAscii_if#r5_equ#r6$true
  1245 00003743 B800000000              mov eax, 0
  1246 00003748 EB05                    jmp font_z_getAddrByAscii_if#r5_equ#r6$false
  1247                                  font_z_getAddrByAscii_if#r5_equ#r6$true:
  1248 0000374A B801000000              mov eax, 1
  1249                                  font_z_getAddrByAscii_if#r5_equ#r6$false:
  1250 0000374F 50                      push eax
  1251 00003750 58                      pop eax
  1252 00003751 83F800                  cmp eax, 0
  1253 00003754 740D                    je font_z_getAddrByAscii_if#r5_$else
  1254 00003756 B8[5D080000]            mov eax, font_z_B
  1255 0000375B 50                      push eax
  1256 0000375C 58                      pop eax
  1257 0000375D 5D                      pop ebp
  1258 0000375E 50                      push eax
  1259 0000375F 55                      push ebp
  1260 00003760 C3                      ret
  1261 00003761 EB00                    jmp font_z_getAddrByAscii_if#r5_$end
  1262                                  font_z_getAddrByAscii_if#r5_$else:
  1263                                  font_z_getAddrByAscii_if#r5_$end:
  1264                                  ;========== font_z_getAddrByAscii_if#r5_$end ==========
  1265                                  
  1266                                  ;########## font_z_getAddrByAscii_if#r7_$start ##########
  1267 00003763 A1[C2360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1268 00003768 50                      push eax
  1269 00003769 B843000000              mov eax, 67
  1270 0000376E 50                      push eax
  1271 0000376F 5B                      pop ebx
  1272 00003770 58                      pop eax
  1273 00003771 39D8                    cmp eax, ebx
  1274 00003773 7407                    je font_z_getAddrByAscii_if#r7_equ#r8$true
  1275 00003775 B800000000              mov eax, 0
  1276 0000377A EB05                    jmp font_z_getAddrByAscii_if#r7_equ#r8$false
  1277                                  font_z_getAddrByAscii_if#r7_equ#r8$true:
  1278 0000377C B801000000              mov eax, 1
  1279                                  font_z_getAddrByAscii_if#r7_equ#r8$false:
  1280 00003781 50                      push eax
  1281 00003782 58                      pop eax
  1282 00003783 83F800                  cmp eax, 0
  1283 00003786 740D                    je font_z_getAddrByAscii_if#r7_$else
  1284 00003788 B8[6C090000]            mov eax, font_z_C
  1285 0000378D 50                      push eax
  1286 0000378E 58                      pop eax
  1287 0000378F 5D                      pop ebp
  1288 00003790 50                      push eax
  1289 00003791 55                      push ebp
  1290 00003792 C3                      ret
  1291 00003793 EB00                    jmp font_z_getAddrByAscii_if#r7_$end
  1292                                  font_z_getAddrByAscii_if#r7_$else:
  1293                                  font_z_getAddrByAscii_if#r7_$end:
  1294                                  ;========== font_z_getAddrByAscii_if#r7_$end ==========
  1295                                  
  1296                                  ;########## font_z_getAddrByAscii_if#r9_$start ##########
  1297 00003795 A1[C2360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1298 0000379A 50                      push eax
  1299 0000379B B844000000              mov eax, 68
  1300 000037A0 50                      push eax
  1301 000037A1 5B                      pop ebx
  1302 000037A2 58                      pop eax
  1303 000037A3 39D8                    cmp eax, ebx
  1304 000037A5 7407                    je font_z_getAddrByAscii_if#r9_equ#r01$true
  1305 000037A7 B800000000              mov eax, 0
  1306 000037AC EB05                    jmp font_z_getAddrByAscii_if#r9_equ#r01$false
  1307                                  font_z_getAddrByAscii_if#r9_equ#r01$true:
  1308 000037AE B801000000              mov eax, 1
  1309                                  font_z_getAddrByAscii_if#r9_equ#r01$false:
  1310 000037B3 50                      push eax
  1311 000037B4 58                      pop eax
  1312 000037B5 83F800                  cmp eax, 0
  1313 000037B8 740D                    je font_z_getAddrByAscii_if#r9_$else
  1314 000037BA B8[7B0A0000]            mov eax, font_z_D
  1315 000037BF 50                      push eax
  1316 000037C0 58                      pop eax
  1317 000037C1 5D                      pop ebp
  1318 000037C2 50                      push eax
  1319 000037C3 55                      push ebp
  1320 000037C4 C3                      ret
  1321 000037C5 EB00                    jmp font_z_getAddrByAscii_if#r9_$end
  1322                                  font_z_getAddrByAscii_if#r9_$else:
  1323                                  font_z_getAddrByAscii_if#r9_$end:
  1324                                  ;========== font_z_getAddrByAscii_if#r9_$end ==========
  1325                                  
  1326                                  ;########## font_z_getAddrByAscii_if#r11_$start ##########
  1327 000037C7 A1[C2360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1328 000037CC 50                      push eax
  1329 000037CD B845000000              mov eax, 69
  1330 000037D2 50                      push eax
  1331 000037D3 5B                      pop ebx
  1332 000037D4 58                      pop eax
  1333 000037D5 39D8                    cmp eax, ebx
  1334 000037D7 7407                    je font_z_getAddrByAscii_if#r11_equ#r21$true
  1335 000037D9 B800000000              mov eax, 0
  1336 000037DE EB05                    jmp font_z_getAddrByAscii_if#r11_equ#r21$false
  1337                                  font_z_getAddrByAscii_if#r11_equ#r21$true:
  1338 000037E0 B801000000              mov eax, 1
  1339                                  font_z_getAddrByAscii_if#r11_equ#r21$false:
  1340 000037E5 50                      push eax
  1341 000037E6 58                      pop eax
  1342 000037E7 83F800                  cmp eax, 0
  1343 000037EA 740D                    je font_z_getAddrByAscii_if#r11_$else
  1344 000037EC B8[8A0B0000]            mov eax, font_z_E
  1345 000037F1 50                      push eax
  1346 000037F2 58                      pop eax
  1347 000037F3 5D                      pop ebp
  1348 000037F4 50                      push eax
  1349 000037F5 55                      push ebp
  1350 000037F6 C3                      ret
  1351 000037F7 EB00                    jmp font_z_getAddrByAscii_if#r11_$end
  1352                                  font_z_getAddrByAscii_if#r11_$else:
  1353                                  font_z_getAddrByAscii_if#r11_$end:
  1354                                  ;========== font_z_getAddrByAscii_if#r11_$end ==========
  1355                                  
  1356                                  ;########## font_z_getAddrByAscii_if#r31_$start ##########
  1357 000037F9 A1[C2360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1358 000037FE 50                      push eax
  1359 000037FF B846000000              mov eax, 70
  1360 00003804 50                      push eax
  1361 00003805 5B                      pop ebx
  1362 00003806 58                      pop eax
  1363 00003807 39D8                    cmp eax, ebx
  1364 00003809 7407                    je font_z_getAddrByAscii_if#r31_equ#r41$true
  1365 0000380B B800000000              mov eax, 0
  1366 00003810 EB05                    jmp font_z_getAddrByAscii_if#r31_equ#r41$false
  1367                                  font_z_getAddrByAscii_if#r31_equ#r41$true:
  1368 00003812 B801000000              mov eax, 1
  1369                                  font_z_getAddrByAscii_if#r31_equ#r41$false:
  1370 00003817 50                      push eax
  1371 00003818 58                      pop eax
  1372 00003819 83F800                  cmp eax, 0
  1373 0000381C 740D                    je font_z_getAddrByAscii_if#r31_$else
  1374 0000381E B8[990C0000]            mov eax, font_z_F
  1375 00003823 50                      push eax
  1376 00003824 58                      pop eax
  1377 00003825 5D                      pop ebp
  1378 00003826 50                      push eax
  1379 00003827 55                      push ebp
  1380 00003828 C3                      ret
  1381 00003829 EB00                    jmp font_z_getAddrByAscii_if#r31_$end
  1382                                  font_z_getAddrByAscii_if#r31_$else:
  1383                                  font_z_getAddrByAscii_if#r31_$end:
  1384                                  ;========== font_z_getAddrByAscii_if#r31_$end ==========
  1385                                  
  1386                                  ;########## font_z_getAddrByAscii_if#r51_$start ##########
  1387 0000382B A1[C2360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1388 00003830 50                      push eax
  1389 00003831 B847000000              mov eax, 71
  1390 00003836 50                      push eax
  1391 00003837 5B                      pop ebx
  1392 00003838 58                      pop eax
  1393 00003839 39D8                    cmp eax, ebx
  1394 0000383B 7407                    je font_z_getAddrByAscii_if#r51_equ#r61$true
  1395 0000383D B800000000              mov eax, 0
  1396 00003842 EB05                    jmp font_z_getAddrByAscii_if#r51_equ#r61$false
  1397                                  font_z_getAddrByAscii_if#r51_equ#r61$true:
  1398 00003844 B801000000              mov eax, 1
  1399                                  font_z_getAddrByAscii_if#r51_equ#r61$false:
  1400 00003849 50                      push eax
  1401 0000384A 58                      pop eax
  1402 0000384B 83F800                  cmp eax, 0
  1403 0000384E 740D                    je font_z_getAddrByAscii_if#r51_$else
  1404 00003850 B8[A80D0000]            mov eax, font_z_G
  1405 00003855 50                      push eax
  1406 00003856 58                      pop eax
  1407 00003857 5D                      pop ebp
  1408 00003858 50                      push eax
  1409 00003859 55                      push ebp
  1410 0000385A C3                      ret
  1411 0000385B EB00                    jmp font_z_getAddrByAscii_if#r51_$end
  1412                                  font_z_getAddrByAscii_if#r51_$else:
  1413                                  font_z_getAddrByAscii_if#r51_$end:
  1414                                  ;========== font_z_getAddrByAscii_if#r51_$end ==========
  1415                                  
  1416                                  ;########## font_z_getAddrByAscii_if#r71_$start ##########
  1417 0000385D A1[C2360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1418 00003862 50                      push eax
  1419 00003863 B848000000              mov eax, 72
  1420 00003868 50                      push eax
  1421 00003869 5B                      pop ebx
  1422 0000386A 58                      pop eax
  1423 0000386B 39D8                    cmp eax, ebx
  1424 0000386D 7407                    je font_z_getAddrByAscii_if#r71_equ#r81$true
  1425 0000386F B800000000              mov eax, 0
  1426 00003874 EB05                    jmp font_z_getAddrByAscii_if#r71_equ#r81$false
  1427                                  font_z_getAddrByAscii_if#r71_equ#r81$true:
  1428 00003876 B801000000              mov eax, 1
  1429                                  font_z_getAddrByAscii_if#r71_equ#r81$false:
  1430 0000387B 50                      push eax
  1431 0000387C 58                      pop eax
  1432 0000387D 83F800                  cmp eax, 0
  1433 00003880 740D                    je font_z_getAddrByAscii_if#r71_$else
  1434 00003882 B8[B70E0000]            mov eax, font_z_H
  1435 00003887 50                      push eax
  1436 00003888 58                      pop eax
  1437 00003889 5D                      pop ebp
  1438 0000388A 50                      push eax
  1439 0000388B 55                      push ebp
  1440 0000388C C3                      ret
  1441 0000388D EB00                    jmp font_z_getAddrByAscii_if#r71_$end
  1442                                  font_z_getAddrByAscii_if#r71_$else:
  1443                                  font_z_getAddrByAscii_if#r71_$end:
  1444                                  ;========== font_z_getAddrByAscii_if#r71_$end ==========
  1445                                  
  1446                                  ;########## font_z_getAddrByAscii_if#r91_$start ##########
  1447 0000388F A1[C2360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1448 00003894 50                      push eax
  1449 00003895 B849000000              mov eax, 73
  1450 0000389A 50                      push eax
  1451 0000389B 5B                      pop ebx
  1452 0000389C 58                      pop eax
  1453 0000389D 39D8                    cmp eax, ebx
  1454 0000389F 7407                    je font_z_getAddrByAscii_if#r91_equ#r02$true
  1455 000038A1 B800000000              mov eax, 0
  1456 000038A6 EB05                    jmp font_z_getAddrByAscii_if#r91_equ#r02$false
  1457                                  font_z_getAddrByAscii_if#r91_equ#r02$true:
  1458 000038A8 B801000000              mov eax, 1
  1459                                  font_z_getAddrByAscii_if#r91_equ#r02$false:
  1460 000038AD 50                      push eax
  1461 000038AE 58                      pop eax
  1462 000038AF 83F800                  cmp eax, 0
  1463 000038B2 740D                    je font_z_getAddrByAscii_if#r91_$else
  1464 000038B4 B8[C60F0000]            mov eax, font_z_I
  1465 000038B9 50                      push eax
  1466 000038BA 58                      pop eax
  1467 000038BB 5D                      pop ebp
  1468 000038BC 50                      push eax
  1469 000038BD 55                      push ebp
  1470 000038BE C3                      ret
  1471 000038BF EB00                    jmp font_z_getAddrByAscii_if#r91_$end
  1472                                  font_z_getAddrByAscii_if#r91_$else:
  1473                                  font_z_getAddrByAscii_if#r91_$end:
  1474                                  ;========== font_z_getAddrByAscii_if#r91_$end ==========
  1475                                  
  1476                                  ;########## font_z_getAddrByAscii_if#r12_$start ##########
  1477 000038C1 A1[C2360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1478 000038C6 50                      push eax
  1479 000038C7 B84A000000              mov eax, 74
  1480 000038CC 50                      push eax
  1481 000038CD 5B                      pop ebx
  1482 000038CE 58                      pop eax
  1483 000038CF 39D8                    cmp eax, ebx
  1484 000038D1 7407                    je font_z_getAddrByAscii_if#r12_equ#r22$true
  1485 000038D3 B800000000              mov eax, 0
  1486 000038D8 EB05                    jmp font_z_getAddrByAscii_if#r12_equ#r22$false
  1487                                  font_z_getAddrByAscii_if#r12_equ#r22$true:
  1488 000038DA B801000000              mov eax, 1
  1489                                  font_z_getAddrByAscii_if#r12_equ#r22$false:
  1490 000038DF 50                      push eax
  1491 000038E0 58                      pop eax
  1492 000038E1 83F800                  cmp eax, 0
  1493 000038E4 740D                    je font_z_getAddrByAscii_if#r12_$else
  1494 000038E6 B8[A80D0000]            mov eax, font_z_G
  1495 000038EB 50                      push eax
  1496 000038EC 58                      pop eax
  1497 000038ED 5D                      pop ebp
  1498 000038EE 50                      push eax
  1499 000038EF 55                      push ebp
  1500 000038F0 C3                      ret
  1501 000038F1 EB00                    jmp font_z_getAddrByAscii_if#r12_$end
  1502                                  font_z_getAddrByAscii_if#r12_$else:
  1503                                  font_z_getAddrByAscii_if#r12_$end:
  1504                                  ;========== font_z_getAddrByAscii_if#r12_$end ==========
  1505                                  
  1506                                  ;########## font_z_getAddrByAscii_if#r32_$start ##########
  1507 000038F3 A1[C2360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1508 000038F8 50                      push eax
  1509 000038F9 B84B000000              mov eax, 75
  1510 000038FE 50                      push eax
  1511 000038FF 5B                      pop ebx
  1512 00003900 58                      pop eax
  1513 00003901 39D8                    cmp eax, ebx
  1514 00003903 7407                    je font_z_getAddrByAscii_if#r32_equ#r42$true
  1515 00003905 B800000000              mov eax, 0
  1516 0000390A EB05                    jmp font_z_getAddrByAscii_if#r32_equ#r42$false
  1517                                  font_z_getAddrByAscii_if#r32_equ#r42$true:
  1518 0000390C B801000000              mov eax, 1
  1519                                  font_z_getAddrByAscii_if#r32_equ#r42$false:
  1520 00003911 50                      push eax
  1521 00003912 58                      pop eax
  1522 00003913 83F800                  cmp eax, 0
  1523 00003916 740D                    je font_z_getAddrByAscii_if#r32_$else
  1524 00003918 B8[E4110000]            mov eax, font_z_K
  1525 0000391D 50                      push eax
  1526 0000391E 58                      pop eax
  1527 0000391F 5D                      pop ebp
  1528 00003920 50                      push eax
  1529 00003921 55                      push ebp
  1530 00003922 C3                      ret
  1531 00003923 EB00                    jmp font_z_getAddrByAscii_if#r32_$end
  1532                                  font_z_getAddrByAscii_if#r32_$else:
  1533                                  font_z_getAddrByAscii_if#r32_$end:
  1534                                  ;========== font_z_getAddrByAscii_if#r32_$end ==========
  1535                                  
  1536                                  ;########## font_z_getAddrByAscii_if#r52_$start ##########
  1537 00003925 A1[C2360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1538 0000392A 50                      push eax
  1539 0000392B B84C000000              mov eax, 76
  1540 00003930 50                      push eax
  1541 00003931 5B                      pop ebx
  1542 00003932 58                      pop eax
  1543 00003933 39D8                    cmp eax, ebx
  1544 00003935 7407                    je font_z_getAddrByAscii_if#r52_equ#r62$true
  1545 00003937 B800000000              mov eax, 0
  1546 0000393C EB05                    jmp font_z_getAddrByAscii_if#r52_equ#r62$false
  1547                                  font_z_getAddrByAscii_if#r52_equ#r62$true:
  1548 0000393E B801000000              mov eax, 1
  1549                                  font_z_getAddrByAscii_if#r52_equ#r62$false:
  1550 00003943 50                      push eax
  1551 00003944 58                      pop eax
  1552 00003945 83F800                  cmp eax, 0
  1553 00003948 740D                    je font_z_getAddrByAscii_if#r52_$else
  1554 0000394A B8[F3120000]            mov eax, font_z_L
  1555 0000394F 50                      push eax
  1556 00003950 58                      pop eax
  1557 00003951 5D                      pop ebp
  1558 00003952 50                      push eax
  1559 00003953 55                      push ebp
  1560 00003954 C3                      ret
  1561 00003955 EB00                    jmp font_z_getAddrByAscii_if#r52_$end
  1562                                  font_z_getAddrByAscii_if#r52_$else:
  1563                                  font_z_getAddrByAscii_if#r52_$end:
  1564                                  ;========== font_z_getAddrByAscii_if#r52_$end ==========
  1565                                  
  1566                                  ;########## font_z_getAddrByAscii_if#r72_$start ##########
  1567 00003957 A1[C2360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1568 0000395C 50                      push eax
  1569 0000395D B84D000000              mov eax, 77
  1570 00003962 50                      push eax
  1571 00003963 5B                      pop ebx
  1572 00003964 58                      pop eax
  1573 00003965 39D8                    cmp eax, ebx
  1574 00003967 7407                    je font_z_getAddrByAscii_if#r72_equ#r82$true
  1575 00003969 B800000000              mov eax, 0
  1576 0000396E EB05                    jmp font_z_getAddrByAscii_if#r72_equ#r82$false
  1577                                  font_z_getAddrByAscii_if#r72_equ#r82$true:
  1578 00003970 B801000000              mov eax, 1
  1579                                  font_z_getAddrByAscii_if#r72_equ#r82$false:
  1580 00003975 50                      push eax
  1581 00003976 58                      pop eax
  1582 00003977 83F800                  cmp eax, 0
  1583 0000397A 740D                    je font_z_getAddrByAscii_if#r72_$else
  1584 0000397C B8[02140000]            mov eax, font_z_M
  1585 00003981 50                      push eax
  1586 00003982 58                      pop eax
  1587 00003983 5D                      pop ebp
  1588 00003984 50                      push eax
  1589 00003985 55                      push ebp
  1590 00003986 C3                      ret
  1591 00003987 EB00                    jmp font_z_getAddrByAscii_if#r72_$end
  1592                                  font_z_getAddrByAscii_if#r72_$else:
  1593                                  font_z_getAddrByAscii_if#r72_$end:
  1594                                  ;========== font_z_getAddrByAscii_if#r72_$end ==========
  1595                                  
  1596                                  ;########## font_z_getAddrByAscii_if#r92_$start ##########
  1597 00003989 A1[C2360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1598 0000398E 50                      push eax
  1599 0000398F B84E000000              mov eax, 78
  1600 00003994 50                      push eax
  1601 00003995 5B                      pop ebx
  1602 00003996 58                      pop eax
  1603 00003997 39D8                    cmp eax, ebx
  1604 00003999 7407                    je font_z_getAddrByAscii_if#r92_equ#r03$true
  1605 0000399B B800000000              mov eax, 0
  1606 000039A0 EB05                    jmp font_z_getAddrByAscii_if#r92_equ#r03$false
  1607                                  font_z_getAddrByAscii_if#r92_equ#r03$true:
  1608 000039A2 B801000000              mov eax, 1
  1609                                  font_z_getAddrByAscii_if#r92_equ#r03$false:
  1610 000039A7 50                      push eax
  1611 000039A8 58                      pop eax
  1612 000039A9 83F800                  cmp eax, 0
  1613 000039AC 740D                    je font_z_getAddrByAscii_if#r92_$else
  1614 000039AE B8[11150000]            mov eax, font_z_N
  1615 000039B3 50                      push eax
  1616 000039B4 58                      pop eax
  1617 000039B5 5D                      pop ebp
  1618 000039B6 50                      push eax
  1619 000039B7 55                      push ebp
  1620 000039B8 C3                      ret
  1621 000039B9 EB00                    jmp font_z_getAddrByAscii_if#r92_$end
  1622                                  font_z_getAddrByAscii_if#r92_$else:
  1623                                  font_z_getAddrByAscii_if#r92_$end:
  1624                                  ;========== font_z_getAddrByAscii_if#r92_$end ==========
  1625                                  
  1626                                  ;########## font_z_getAddrByAscii_if#r13_$start ##########
  1627 000039BB A1[C2360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1628 000039C0 50                      push eax
  1629 000039C1 B84F000000              mov eax, 79
  1630 000039C6 50                      push eax
  1631 000039C7 5B                      pop ebx
  1632 000039C8 58                      pop eax
  1633 000039C9 39D8                    cmp eax, ebx
  1634 000039CB 7407                    je font_z_getAddrByAscii_if#r13_equ#r23$true
  1635 000039CD B800000000              mov eax, 0
  1636 000039D2 EB05                    jmp font_z_getAddrByAscii_if#r13_equ#r23$false
  1637                                  font_z_getAddrByAscii_if#r13_equ#r23$true:
  1638 000039D4 B801000000              mov eax, 1
  1639                                  font_z_getAddrByAscii_if#r13_equ#r23$false:
  1640 000039D9 50                      push eax
  1641 000039DA 58                      pop eax
  1642 000039DB 83F800                  cmp eax, 0
  1643 000039DE 740D                    je font_z_getAddrByAscii_if#r13_$else
  1644 000039E0 B8[20160000]            mov eax, font_z_O
  1645 000039E5 50                      push eax
  1646 000039E6 58                      pop eax
  1647 000039E7 5D                      pop ebp
  1648 000039E8 50                      push eax
  1649 000039E9 55                      push ebp
  1650 000039EA C3                      ret
  1651 000039EB EB00                    jmp font_z_getAddrByAscii_if#r13_$end
  1652                                  font_z_getAddrByAscii_if#r13_$else:
  1653                                  font_z_getAddrByAscii_if#r13_$end:
  1654                                  ;========== font_z_getAddrByAscii_if#r13_$end ==========
  1655                                  
  1656                                  ;########## font_z_getAddrByAscii_if#r33_$start ##########
  1657 000039ED A1[C2360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1658 000039F2 50                      push eax
  1659 000039F3 B850000000              mov eax, 80
  1660 000039F8 50                      push eax
  1661 000039F9 5B                      pop ebx
  1662 000039FA 58                      pop eax
  1663 000039FB 39D8                    cmp eax, ebx
  1664 000039FD 7407                    je font_z_getAddrByAscii_if#r33_equ#r43$true
  1665 000039FF B800000000              mov eax, 0
  1666 00003A04 EB05                    jmp font_z_getAddrByAscii_if#r33_equ#r43$false
  1667                                  font_z_getAddrByAscii_if#r33_equ#r43$true:
  1668 00003A06 B801000000              mov eax, 1
  1669                                  font_z_getAddrByAscii_if#r33_equ#r43$false:
  1670 00003A0B 50                      push eax
  1671 00003A0C 58                      pop eax
  1672 00003A0D 83F800                  cmp eax, 0
  1673 00003A10 740D                    je font_z_getAddrByAscii_if#r33_$else
  1674 00003A12 B8[2F170000]            mov eax, font_z_P
  1675 00003A17 50                      push eax
  1676 00003A18 58                      pop eax
  1677 00003A19 5D                      pop ebp
  1678 00003A1A 50                      push eax
  1679 00003A1B 55                      push ebp
  1680 00003A1C C3                      ret
  1681 00003A1D EB00                    jmp font_z_getAddrByAscii_if#r33_$end
  1682                                  font_z_getAddrByAscii_if#r33_$else:
  1683                                  font_z_getAddrByAscii_if#r33_$end:
  1684                                  ;========== font_z_getAddrByAscii_if#r33_$end ==========
  1685                                  
  1686                                  ;########## font_z_getAddrByAscii_if#r53_$start ##########
  1687 00003A1F A1[C2360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1688 00003A24 50                      push eax
  1689 00003A25 B851000000              mov eax, 81
  1690 00003A2A 50                      push eax
  1691 00003A2B 5B                      pop ebx
  1692 00003A2C 58                      pop eax
  1693 00003A2D 39D8                    cmp eax, ebx
  1694 00003A2F 7407                    je font_z_getAddrByAscii_if#r53_equ#r63$true
  1695 00003A31 B800000000              mov eax, 0
  1696 00003A36 EB05                    jmp font_z_getAddrByAscii_if#r53_equ#r63$false
  1697                                  font_z_getAddrByAscii_if#r53_equ#r63$true:
  1698 00003A38 B801000000              mov eax, 1
  1699                                  font_z_getAddrByAscii_if#r53_equ#r63$false:
  1700 00003A3D 50                      push eax
  1701 00003A3E 58                      pop eax
  1702 00003A3F 83F800                  cmp eax, 0
  1703 00003A42 740D                    je font_z_getAddrByAscii_if#r53_$else
  1704 00003A44 B8[3E180000]            mov eax, font_z_Q
  1705 00003A49 50                      push eax
  1706 00003A4A 58                      pop eax
  1707 00003A4B 5D                      pop ebp
  1708 00003A4C 50                      push eax
  1709 00003A4D 55                      push ebp
  1710 00003A4E C3                      ret
  1711 00003A4F EB00                    jmp font_z_getAddrByAscii_if#r53_$end
  1712                                  font_z_getAddrByAscii_if#r53_$else:
  1713                                  font_z_getAddrByAscii_if#r53_$end:
  1714                                  ;========== font_z_getAddrByAscii_if#r53_$end ==========
  1715                                  
  1716                                  ;########## font_z_getAddrByAscii_if#r73_$start ##########
  1717 00003A51 A1[C2360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1718 00003A56 50                      push eax
  1719 00003A57 B852000000              mov eax, 82
  1720 00003A5C 50                      push eax
  1721 00003A5D 5B                      pop ebx
  1722 00003A5E 58                      pop eax
  1723 00003A5F 39D8                    cmp eax, ebx
  1724 00003A61 7407                    je font_z_getAddrByAscii_if#r73_equ#r83$true
  1725 00003A63 B800000000              mov eax, 0
  1726 00003A68 EB05                    jmp font_z_getAddrByAscii_if#r73_equ#r83$false
  1727                                  font_z_getAddrByAscii_if#r73_equ#r83$true:
  1728 00003A6A B801000000              mov eax, 1
  1729                                  font_z_getAddrByAscii_if#r73_equ#r83$false:
  1730 00003A6F 50                      push eax
  1731 00003A70 58                      pop eax
  1732 00003A71 83F800                  cmp eax, 0
  1733 00003A74 740D                    je font_z_getAddrByAscii_if#r73_$else
  1734 00003A76 B8[4D190000]            mov eax, font_z_R
  1735 00003A7B 50                      push eax
  1736 00003A7C 58                      pop eax
  1737 00003A7D 5D                      pop ebp
  1738 00003A7E 50                      push eax
  1739 00003A7F 55                      push ebp
  1740 00003A80 C3                      ret
  1741 00003A81 EB00                    jmp font_z_getAddrByAscii_if#r73_$end
  1742                                  font_z_getAddrByAscii_if#r73_$else:
  1743                                  font_z_getAddrByAscii_if#r73_$end:
  1744                                  ;========== font_z_getAddrByAscii_if#r73_$end ==========
  1745                                  
  1746                                  ;########## font_z_getAddrByAscii_if#r93_$start ##########
  1747 00003A83 A1[C2360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1748 00003A88 50                      push eax
  1749 00003A89 B853000000              mov eax, 83
  1750 00003A8E 50                      push eax
  1751 00003A8F 5B                      pop ebx
  1752 00003A90 58                      pop eax
  1753 00003A91 39D8                    cmp eax, ebx
  1754 00003A93 7407                    je font_z_getAddrByAscii_if#r93_equ#r04$true
  1755 00003A95 B800000000              mov eax, 0
  1756 00003A9A EB05                    jmp font_z_getAddrByAscii_if#r93_equ#r04$false
  1757                                  font_z_getAddrByAscii_if#r93_equ#r04$true:
  1758 00003A9C B801000000              mov eax, 1
  1759                                  font_z_getAddrByAscii_if#r93_equ#r04$false:
  1760 00003AA1 50                      push eax
  1761 00003AA2 58                      pop eax
  1762 00003AA3 83F800                  cmp eax, 0
  1763 00003AA6 740D                    je font_z_getAddrByAscii_if#r93_$else
  1764 00003AA8 B8[5C1A0000]            mov eax, font_z_S
  1765 00003AAD 50                      push eax
  1766 00003AAE 58                      pop eax
  1767 00003AAF 5D                      pop ebp
  1768 00003AB0 50                      push eax
  1769 00003AB1 55                      push ebp
  1770 00003AB2 C3                      ret
  1771 00003AB3 EB00                    jmp font_z_getAddrByAscii_if#r93_$end
  1772                                  font_z_getAddrByAscii_if#r93_$else:
  1773                                  font_z_getAddrByAscii_if#r93_$end:
  1774                                  ;========== font_z_getAddrByAscii_if#r93_$end ==========
  1775                                  
  1776                                  ;########## font_z_getAddrByAscii_if#r14_$start ##########
  1777 00003AB5 A1[C2360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1778 00003ABA 50                      push eax
  1779 00003ABB B854000000              mov eax, 84
  1780 00003AC0 50                      push eax
  1781 00003AC1 5B                      pop ebx
  1782 00003AC2 58                      pop eax
  1783 00003AC3 39D8                    cmp eax, ebx
  1784 00003AC5 7407                    je font_z_getAddrByAscii_if#r14_equ#r24$true
  1785 00003AC7 B800000000              mov eax, 0
  1786 00003ACC EB05                    jmp font_z_getAddrByAscii_if#r14_equ#r24$false
  1787                                  font_z_getAddrByAscii_if#r14_equ#r24$true:
  1788 00003ACE B801000000              mov eax, 1
  1789                                  font_z_getAddrByAscii_if#r14_equ#r24$false:
  1790 00003AD3 50                      push eax
  1791 00003AD4 58                      pop eax
  1792 00003AD5 83F800                  cmp eax, 0
  1793 00003AD8 740D                    je font_z_getAddrByAscii_if#r14_$else
  1794 00003ADA B8[6B1B0000]            mov eax, font_z_T
  1795 00003ADF 50                      push eax
  1796 00003AE0 58                      pop eax
  1797 00003AE1 5D                      pop ebp
  1798 00003AE2 50                      push eax
  1799 00003AE3 55                      push ebp
  1800 00003AE4 C3                      ret
  1801 00003AE5 EB00                    jmp font_z_getAddrByAscii_if#r14_$end
  1802                                  font_z_getAddrByAscii_if#r14_$else:
  1803                                  font_z_getAddrByAscii_if#r14_$end:
  1804                                  ;========== font_z_getAddrByAscii_if#r14_$end ==========
  1805                                  
  1806                                  ;########## font_z_getAddrByAscii_if#r34_$start ##########
  1807 00003AE7 A1[C2360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1808 00003AEC 50                      push eax
  1809 00003AED B855000000              mov eax, 85
  1810 00003AF2 50                      push eax
  1811 00003AF3 5B                      pop ebx
  1812 00003AF4 58                      pop eax
  1813 00003AF5 39D8                    cmp eax, ebx
  1814 00003AF7 7407                    je font_z_getAddrByAscii_if#r34_equ#r44$true
  1815 00003AF9 B800000000              mov eax, 0
  1816 00003AFE EB05                    jmp font_z_getAddrByAscii_if#r34_equ#r44$false
  1817                                  font_z_getAddrByAscii_if#r34_equ#r44$true:
  1818 00003B00 B801000000              mov eax, 1
  1819                                  font_z_getAddrByAscii_if#r34_equ#r44$false:
  1820 00003B05 50                      push eax
  1821 00003B06 58                      pop eax
  1822 00003B07 83F800                  cmp eax, 0
  1823 00003B0A 740D                    je font_z_getAddrByAscii_if#r34_$else
  1824 00003B0C B8[7A1C0000]            mov eax, font_z_U
  1825 00003B11 50                      push eax
  1826 00003B12 58                      pop eax
  1827 00003B13 5D                      pop ebp
  1828 00003B14 50                      push eax
  1829 00003B15 55                      push ebp
  1830 00003B16 C3                      ret
  1831 00003B17 EB00                    jmp font_z_getAddrByAscii_if#r34_$end
  1832                                  font_z_getAddrByAscii_if#r34_$else:
  1833                                  font_z_getAddrByAscii_if#r34_$end:
  1834                                  ;========== font_z_getAddrByAscii_if#r34_$end ==========
  1835                                  
  1836                                  ;########## font_z_getAddrByAscii_if#r54_$start ##########
  1837 00003B19 A1[C2360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1838 00003B1E 50                      push eax
  1839 00003B1F B856000000              mov eax, 86
  1840 00003B24 50                      push eax
  1841 00003B25 5B                      pop ebx
  1842 00003B26 58                      pop eax
  1843 00003B27 39D8                    cmp eax, ebx
  1844 00003B29 7407                    je font_z_getAddrByAscii_if#r54_equ#r64$true
  1845 00003B2B B800000000              mov eax, 0
  1846 00003B30 EB05                    jmp font_z_getAddrByAscii_if#r54_equ#r64$false
  1847                                  font_z_getAddrByAscii_if#r54_equ#r64$true:
  1848 00003B32 B801000000              mov eax, 1
  1849                                  font_z_getAddrByAscii_if#r54_equ#r64$false:
  1850 00003B37 50                      push eax
  1851 00003B38 58                      pop eax
  1852 00003B39 83F800                  cmp eax, 0
  1853 00003B3C 740D                    je font_z_getAddrByAscii_if#r54_$else
  1854 00003B3E B8[891D0000]            mov eax, font_z_V
  1855 00003B43 50                      push eax
  1856 00003B44 58                      pop eax
  1857 00003B45 5D                      pop ebp
  1858 00003B46 50                      push eax
  1859 00003B47 55                      push ebp
  1860 00003B48 C3                      ret
  1861 00003B49 EB00                    jmp font_z_getAddrByAscii_if#r54_$end
  1862                                  font_z_getAddrByAscii_if#r54_$else:
  1863                                  font_z_getAddrByAscii_if#r54_$end:
  1864                                  ;========== font_z_getAddrByAscii_if#r54_$end ==========
  1865                                  
  1866                                  ;########## font_z_getAddrByAscii_if#r74_$start ##########
  1867 00003B4B A1[C2360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1868 00003B50 50                      push eax
  1869 00003B51 B857000000              mov eax, 87
  1870 00003B56 50                      push eax
  1871 00003B57 5B                      pop ebx
  1872 00003B58 58                      pop eax
  1873 00003B59 39D8                    cmp eax, ebx
  1874 00003B5B 7407                    je font_z_getAddrByAscii_if#r74_equ#r84$true
  1875 00003B5D B800000000              mov eax, 0
  1876 00003B62 EB05                    jmp font_z_getAddrByAscii_if#r74_equ#r84$false
  1877                                  font_z_getAddrByAscii_if#r74_equ#r84$true:
  1878 00003B64 B801000000              mov eax, 1
  1879                                  font_z_getAddrByAscii_if#r74_equ#r84$false:
  1880 00003B69 50                      push eax
  1881 00003B6A 58                      pop eax
  1882 00003B6B 83F800                  cmp eax, 0
  1883 00003B6E 740D                    je font_z_getAddrByAscii_if#r74_$else
  1884 00003B70 B8[981E0000]            mov eax, font_z_W
  1885 00003B75 50                      push eax
  1886 00003B76 58                      pop eax
  1887 00003B77 5D                      pop ebp
  1888 00003B78 50                      push eax
  1889 00003B79 55                      push ebp
  1890 00003B7A C3                      ret
  1891 00003B7B EB00                    jmp font_z_getAddrByAscii_if#r74_$end
  1892                                  font_z_getAddrByAscii_if#r74_$else:
  1893                                  font_z_getAddrByAscii_if#r74_$end:
  1894                                  ;========== font_z_getAddrByAscii_if#r74_$end ==========
  1895                                  
  1896                                  ;########## font_z_getAddrByAscii_if#r94_$start ##########
  1897 00003B7D A1[C2360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1898 00003B82 50                      push eax
  1899 00003B83 B858000000              mov eax, 88
  1900 00003B88 50                      push eax
  1901 00003B89 5B                      pop ebx
  1902 00003B8A 58                      pop eax
  1903 00003B8B 39D8                    cmp eax, ebx
  1904 00003B8D 7407                    je font_z_getAddrByAscii_if#r94_equ#r05$true
  1905 00003B8F B800000000              mov eax, 0
  1906 00003B94 EB05                    jmp font_z_getAddrByAscii_if#r94_equ#r05$false
  1907                                  font_z_getAddrByAscii_if#r94_equ#r05$true:
  1908 00003B96 B801000000              mov eax, 1
  1909                                  font_z_getAddrByAscii_if#r94_equ#r05$false:
  1910 00003B9B 50                      push eax
  1911 00003B9C 58                      pop eax
  1912 00003B9D 83F800                  cmp eax, 0
  1913 00003BA0 740D                    je font_z_getAddrByAscii_if#r94_$else
  1914 00003BA2 B8[A71F0000]            mov eax, font_z_X
  1915 00003BA7 50                      push eax
  1916 00003BA8 58                      pop eax
  1917 00003BA9 5D                      pop ebp
  1918 00003BAA 50                      push eax
  1919 00003BAB 55                      push ebp
  1920 00003BAC C3                      ret
  1921 00003BAD EB00                    jmp font_z_getAddrByAscii_if#r94_$end
  1922                                  font_z_getAddrByAscii_if#r94_$else:
  1923                                  font_z_getAddrByAscii_if#r94_$end:
  1924                                  ;========== font_z_getAddrByAscii_if#r94_$end ==========
  1925                                  
  1926                                  ;########## font_z_getAddrByAscii_if#r15_$start ##########
  1927 00003BAF A1[C2360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1928 00003BB4 50                      push eax
  1929 00003BB5 B859000000              mov eax, 89
  1930 00003BBA 50                      push eax
  1931 00003BBB 5B                      pop ebx
  1932 00003BBC 58                      pop eax
  1933 00003BBD 39D8                    cmp eax, ebx
  1934 00003BBF 7407                    je font_z_getAddrByAscii_if#r15_equ#r25$true
  1935 00003BC1 B800000000              mov eax, 0
  1936 00003BC6 EB05                    jmp font_z_getAddrByAscii_if#r15_equ#r25$false
  1937                                  font_z_getAddrByAscii_if#r15_equ#r25$true:
  1938 00003BC8 B801000000              mov eax, 1
  1939                                  font_z_getAddrByAscii_if#r15_equ#r25$false:
  1940 00003BCD 50                      push eax
  1941 00003BCE 58                      pop eax
  1942 00003BCF 83F800                  cmp eax, 0
  1943 00003BD2 740D                    je font_z_getAddrByAscii_if#r15_$else
  1944 00003BD4 B8[B6200000]            mov eax, font_z_Y
  1945 00003BD9 50                      push eax
  1946 00003BDA 58                      pop eax
  1947 00003BDB 5D                      pop ebp
  1948 00003BDC 50                      push eax
  1949 00003BDD 55                      push ebp
  1950 00003BDE C3                      ret
  1951 00003BDF EB00                    jmp font_z_getAddrByAscii_if#r15_$end
  1952                                  font_z_getAddrByAscii_if#r15_$else:
  1953                                  font_z_getAddrByAscii_if#r15_$end:
  1954                                  ;========== font_z_getAddrByAscii_if#r15_$end ==========
  1955                                  
  1956                                  ;########## font_z_getAddrByAscii_if#r35_$start ##########
  1957 00003BE1 A1[C2360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1958 00003BE6 50                      push eax
  1959 00003BE7 B85A000000              mov eax, 90
  1960 00003BEC 50                      push eax
  1961 00003BED 5B                      pop ebx
  1962 00003BEE 58                      pop eax
  1963 00003BEF 39D8                    cmp eax, ebx
  1964 00003BF1 7407                    je font_z_getAddrByAscii_if#r35_equ#r45$true
  1965 00003BF3 B800000000              mov eax, 0
  1966 00003BF8 EB05                    jmp font_z_getAddrByAscii_if#r35_equ#r45$false
  1967                                  font_z_getAddrByAscii_if#r35_equ#r45$true:
  1968 00003BFA B801000000              mov eax, 1
  1969                                  font_z_getAddrByAscii_if#r35_equ#r45$false:
  1970 00003BFF 50                      push eax
  1971 00003C00 58                      pop eax
  1972 00003C01 83F800                  cmp eax, 0
  1973 00003C04 740D                    je font_z_getAddrByAscii_if#r35_$else
  1974 00003C06 B8[C5210000]            mov eax, font_z_Z
  1975 00003C0B 50                      push eax
  1976 00003C0C 58                      pop eax
  1977 00003C0D 5D                      pop ebp
  1978 00003C0E 50                      push eax
  1979 00003C0F 55                      push ebp
  1980 00003C10 C3                      ret
  1981 00003C11 EB00                    jmp font_z_getAddrByAscii_if#r35_$end
  1982                                  font_z_getAddrByAscii_if#r35_$else:
  1983                                  font_z_getAddrByAscii_if#r35_$end:
  1984                                  ;========== font_z_getAddrByAscii_if#r35_$end ==========
  1985                                  
  1986 00003C13 C3                      ret
  1987                                  font_z_getAddrByAscii$pass:
  1988                                  ;============[fun end]getAddrByAscii=============
  1989                                  
  1990                                  
  1991                                  
  1992                                  ;############[fun begin]rect############
  1993 00003C14 E940010000              jmp test_z_rect$pass
  1994                                  test_z_rect:
  1995 00003C19 5D                      pop ebp
  1996                                  ;param: addrVram
  1997 00003C1A EB04                    jmp test_z_rect_addrVram$pass
  1998 00003C1C 00000000                test_z_rect_addrVram: dd 0
  1999                                  test_z_rect_addrVram$pass:
  2000 00003C20 58                      pop eax
  2001 00003C21 A3[1C3C0000]            mov [test_z_rect_addrVram], eax
  2002                                  ;param: color
  2003 00003C26 EB04                    jmp test_z_rect_color$pass
  2004 00003C28 00000000                test_z_rect_color: dd 0
  2005                                  test_z_rect_color$pass:
  2006 00003C2C 58                      pop eax
  2007 00003C2D A3[283C0000]            mov [test_z_rect_color], eax
  2008                                  ;param: height
  2009 00003C32 EB04                    jmp test_z_rect_height$pass
  2010 00003C34 00000000                test_z_rect_height: dd 0
  2011                                  test_z_rect_height$pass:
  2012 00003C38 58                      pop eax
  2013 00003C39 A3[343C0000]            mov [test_z_rect_height], eax
  2014                                  ;param: width
  2015 00003C3E EB04                    jmp test_z_rect_width$pass
  2016 00003C40 00000000                test_z_rect_width: dd 0
  2017                                  test_z_rect_width$pass:
  2018 00003C44 58                      pop eax
  2019 00003C45 A3[403C0000]            mov [test_z_rect_width], eax
  2020                                  ;param: top
  2021 00003C4A EB04                    jmp test_z_rect_top$pass
  2022 00003C4C 00000000                test_z_rect_top: dd 0
  2023                                  test_z_rect_top$pass:
  2024 00003C50 58                      pop eax
  2025 00003C51 A3[4C3C0000]            mov [test_z_rect_top], eax
  2026                                  ;param: left
  2027 00003C56 EB04                    jmp test_z_rect_left$pass
  2028 00003C58 00000000                test_z_rect_left: dd 0
  2029                                  test_z_rect_left$pass:
  2030 00003C5C 58                      pop eax
  2031 00003C5D A3[583C0000]            mov [test_z_rect_left], eax
  2032 00003C62 55                      push ebp
  2033 00003C63 B800000000              mov eax, 0
  2034 00003C68 50                      push eax
  2035 00003C69 EB04                    jmp test_z_rect_y$pass
  2036 00003C6B 00000000                test_z_rect_y: dd 0
  2037                                  test_z_rect_y$pass:
  2038 00003C6F 58                      pop eax
  2039 00003C70 A3[6B3C0000]            mov [test_z_rect_y], eax
  2040                                  
  2041                                  ;########## test_z_rect_while#r1_$start ##########
  2042                                  test_z_rect_while#r1_$start:
  2043 00003C75 A1[6B3C0000]            mov eax, [test_z_rect_y]
  2044 00003C7A 50                      push eax
  2045 00003C7B A1[343C0000]            mov eax, [test_z_rect_height]
  2046 00003C80 50                      push eax
  2047 00003C81 5B                      pop ebx
  2048 00003C82 58                      pop eax
  2049 00003C83 39D8                    cmp eax, ebx
  2050 00003C85 7607                    jbe test_z_rect_while#r1_leq#r2$true
  2051 00003C87 B800000000              mov eax, 0
  2052 00003C8C EB05                    jmp test_z_rect_while#r1_leq#r2$false
  2053                                  test_z_rect_while#r1_leq#r2$true:
  2054 00003C8E B801000000              mov eax, 1
  2055                                  test_z_rect_while#r1_leq#r2$false:
  2056 00003C93 50                      push eax
  2057 00003C94 58                      pop eax
  2058 00003C95 83F800                  cmp eax, 0
  2059 00003C98 0F84BA000000            je test_z_rect_while#r1_$end
  2060 00003C9E B800000000              mov eax, 0
  2061 00003CA3 50                      push eax
  2062 00003CA4 EB04                    jmp test_z_rect_while#r1_x$pass
  2063 00003CA6 00000000                test_z_rect_while#r1_x: dd 0
  2064                                  test_z_rect_while#r1_x$pass:
  2065 00003CAA 58                      pop eax
  2066 00003CAB A3[A63C0000]            mov [test_z_rect_while#r1_x], eax
  2067                                  
  2068                                  ;########## test_z_rect_while#r1_while#r3_$start ##########
  2069                                  test_z_rect_while#r1_while#r3_$start:
  2070 00003CB0 A1[A63C0000]            mov eax, [test_z_rect_while#r1_x]
  2071 00003CB5 50                      push eax
  2072 00003CB6 A1[403C0000]            mov eax, [test_z_rect_width]
  2073 00003CBB 50                      push eax
  2074 00003CBC 5B                      pop ebx
  2075 00003CBD 58                      pop eax
  2076 00003CBE 39D8                    cmp eax, ebx
  2077 00003CC0 7607                    jbe test_z_rect_while#r1_while#r3_leq#r4$true
  2078 00003CC2 B800000000              mov eax, 0
  2079 00003CC7 EB05                    jmp test_z_rect_while#r1_while#r3_leq#r4$false
  2080                                  test_z_rect_while#r1_while#r3_leq#r4$true:
  2081 00003CC9 B801000000              mov eax, 1
  2082                                  test_z_rect_while#r1_while#r3_leq#r4$false:
  2083 00003CCE 50                      push eax
  2084 00003CCF 58                      pop eax
  2085 00003CD0 83F800                  cmp eax, 0
  2086 00003CD3 7467                    je test_z_rect_while#r1_while#r3_$end
  2087 00003CD5 A1[283C0000]            mov eax, [test_z_rect_color]
  2088 00003CDA 50                      push eax
  2089 00003CDB EB04                    jmp test_z_rect_while#r1_while#r3_color$pass
  2090 00003CDD 00000000                test_z_rect_while#r1_while#r3_color: dd 0
  2091                                  test_z_rect_while#r1_while#r3_color$pass:
  2092 00003CE1 58                      pop eax
  2093 00003CE2 A3[DD3C0000]            mov [test_z_rect_while#r1_while#r3_color], eax
  2094                                  
  2095 00003CE7 A1[583C0000]            mov eax, [test_z_rect_left]
  2096 00003CEC 50                      push eax
  2097 00003CED A1[A63C0000]            mov eax, [test_z_rect_while#r1_x]
  2098 00003CF2 50                      push eax
  2099 00003CF3 58                      pop eax
  2100 00003CF4 5B                      pop ebx
  2101 00003CF5 01D8                    add eax, ebx
  2102 00003CF7 50                      push eax
  2103 00003CF8 A1[4C3C0000]            mov eax, [test_z_rect_top]
  2104 00003CFD 50                      push eax
  2105 00003CFE A1[6B3C0000]            mov eax, [test_z_rect_y]
  2106 00003D03 50                      push eax
  2107 00003D04 58                      pop eax
  2108 00003D05 5B                      pop ebx
  2109 00003D06 01D8                    add eax, ebx
  2110 00003D08 50                      push eax
  2111 00003D09 A1[DD3C0000]            mov eax, [test_z_rect_while#r1_while#r3_color]
  2112 00003D0E 50                      push eax
  2113 00003D0F B840010000              mov eax, 320
  2114 00003D14 50                      push eax
  2115 00003D15 A1[1C3C0000]            mov eax, [test_z_rect_addrVram]
  2116 00003D1A 50                      push eax
  2117 00003D1B E811C4FFFF              call draw_z_pixel
  2118                                  
  2119 00003D20 A1[A63C0000]            mov eax, [test_z_rect_while#r1_x]
  2120 00003D25 50                      push eax
  2121 00003D26 B801000000              mov eax, 1
  2122 00003D2B 50                      push eax
  2123 00003D2C 58                      pop eax
  2124 00003D2D 5B                      pop ebx
  2125 00003D2E 01D8                    add eax, ebx
  2126 00003D30 50                      push eax
  2127 00003D31 58                      pop eax
  2128 00003D32 A3[A63C0000]            mov [test_z_rect_while#r1_x], eax
  2129 00003D37 E974FFFFFF              jmp test_z_rect_while#r1_while#r3_$start
  2130                                  test_z_rect_while#r1_while#r3_$end:
  2131                                  ;========== test_z_rect_while#r1_while#r3_$end ==========
  2132                                  
  2133 00003D3C A1[6B3C0000]            mov eax, [test_z_rect_y]
  2134 00003D41 50                      push eax
  2135 00003D42 B801000000              mov eax, 1
  2136 00003D47 50                      push eax
  2137 00003D48 58                      pop eax
  2138 00003D49 5B                      pop ebx
  2139 00003D4A 01D8                    add eax, ebx
  2140 00003D4C 50                      push eax
  2141 00003D4D 58                      pop eax
  2142 00003D4E A3[6B3C0000]            mov [test_z_rect_y], eax
  2143 00003D53 E91DFFFFFF              jmp test_z_rect_while#r1_$start
  2144                                  test_z_rect_while#r1_$end:
  2145                                  ;========== test_z_rect_while#r1_$end ==========
  2146                                  
  2147 00003D58 C3                      ret
  2148                                  test_z_rect$pass:
  2149                                  ;============[fun end]rect=============
  2150                                  
  2151                                  
  2152                                  ;############[fun begin]blocks############
  2153 00003D59 EB61                    jmp test_z_blocks$pass
  2154                                  test_z_blocks:
  2155 00003D5B 5D                      pop ebp
  2156                                  ;param: addrVram
  2157 00003D5C EB04                    jmp test_z_blocks_addrVram$pass
  2158 00003D5E 00000000                test_z_blocks_addrVram: dd 0
  2159                                  test_z_blocks_addrVram$pass:
  2160 00003D62 58                      pop eax
  2161 00003D63 A3[5E3D0000]            mov [test_z_blocks_addrVram], eax
  2162 00003D68 55                      push ebp
  2163 00003D69 B800000000              mov eax, 0
  2164 00003D6E 50                      push eax
  2165 00003D6F B8AF000000              mov eax, 175
  2166 00003D74 50                      push eax
  2167 00003D75 B840010000              mov eax, 320
  2168 00003D7A 50                      push eax
  2169 00003D7B B818000000              mov eax, 24
  2170 00003D80 50                      push eax
  2171 00003D81 B807000000              mov eax, 7
  2172 00003D86 50                      push eax
  2173 00003D87 A1[5E3D0000]            mov eax, [test_z_blocks_addrVram]
  2174 00003D8C 50                      push eax
  2175 00003D8D E887FEFFFF              call test_z_rect
  2176                                  
  2177 00003D92 B805000000              mov eax, 5
  2178 00003D97 50                      push eax
  2179 00003D98 B8B4000000              mov eax, 180
  2180 00003D9D 50                      push eax
  2181 00003D9E B818000000              mov eax, 24
  2182 00003DA3 50                      push eax
  2183 00003DA4 B80C000000              mov eax, 12
  2184 00003DA9 50                      push eax
  2185 00003DAA B803000000              mov eax, 3
  2186 00003DAF 50                      push eax
  2187 00003DB0 A1[5E3D0000]            mov eax, [test_z_blocks_addrVram]
  2188 00003DB5 50                      push eax
  2189 00003DB6 E85EFEFFFF              call test_z_rect
  2190                                  
  2191 00003DBB C3                      ret
  2192                                  test_z_blocks$pass:
  2193                                  ;============[fun end]blocks=============
  2194                                  
  2195                                  
  2196                                  ;############[fun begin]draw############
  2197 00003DBC EB53                    jmp test_z_draw$pass
  2198                                  test_z_draw:
  2199 00003DBE 5D                      pop ebp
  2200                                  ;param: addrVram
  2201 00003DBF EB04                    jmp test_z_draw_addrVram$pass
  2202 00003DC1 00000000                test_z_draw_addrVram: dd 0
  2203                                  test_z_draw_addrVram$pass:
  2204 00003DC5 58                      pop eax
  2205 00003DC6 A3[C13D0000]            mov [test_z_draw_addrVram], eax
  2206 00003DCB 55                      push ebp
  2207 00003DCC A1[C13D0000]            mov eax, [test_z_draw_addrVram]
  2208 00003DD1 50                      push eax
  2209 00003DD2 E884FFFFFF              call test_z_blocks
  2210                                  
  2211 00003DD7 EB14                    jmp test_z_draw_tstr$pass
  2212 00003DD9 0000000048454C4C4F-     test_z_draw_tstr: dd 0, "HELLO ZOS", 0
  2212 00003DE2 205A4F530000000000-
  2212 00003DEB 0000               
  2213                                  test_z_draw_tstr$pass:
  2214 00003DED B86E000000              mov eax, 110
  2215 00003DF2 50                      push eax
  2216 00003DF3 B84B000000              mov eax, 75
  2217 00003DF8 50                      push eax
  2218 00003DF9 B8[D93D0000]            mov eax, test_z_draw_tstr
  2219 00003DFE 50                      push eax
  2220 00003DFF B840010000              mov eax, 320
  2221 00003E04 50                      push eax
  2222 00003E05 A1[C13D0000]            mov eax, [test_z_draw_addrVram]
  2223 00003E0A 50                      push eax
  2224 00003E0B E8D6C7FFFF              call draw_z_string
  2225                                  
  2226 00003E10 C3                      ret
  2227                                  test_z_draw$pass:
  2228                                  ;============[fun end]draw=============
  2229                                  
  2230                                  
  2231                                  
  2232                                  ;############[fun begin]init############
  2233 00003E11 E92B010000              jmp GDT_z_init$pass
  2234                                  GDT_z_init:
  2235 00003E16 5D                      pop ebp
  2236 00003E17 55                      push ebp
  2237 00003E18 B800000000              mov eax, 0
  2238 00003E1D 50                      push eax
  2239 00003E1E EB04                    jmp GDT_z_init_i$pass
  2240 00003E20 00000000                GDT_z_init_i: dd 0
  2241                                  GDT_z_init_i$pass:
  2242 00003E24 58                      pop eax
  2243 00003E25 A3[203E0000]            mov [GDT_z_init_i], eax
  2244                                  
  2245                                  ;########## GDT_z_init_while#r1_$start ##########
  2246                                  GDT_z_init_while#r1_$start:
  2247 00003E2A A1[203E0000]            mov eax, [GDT_z_init_i]
  2248 00003E2F 50                      push eax
  2249 00003E30 B800200000              mov eax, 8192
  2250 00003E35 50                      push eax
  2251 00003E36 5B                      pop ebx
  2252 00003E37 58                      pop eax
  2253 00003E38 39D8                    cmp eax, ebx
  2254 00003E3A 7207                    jb GDT_z_init_while#r1_les#r2$true
  2255 00003E3C B800000000              mov eax, 0
  2256 00003E41 EB05                    jmp GDT_z_init_while#r1_les#r2$false
  2257                                  GDT_z_init_while#r1_les#r2$true:
  2258 00003E43 B801000000              mov eax, 1
  2259                                  GDT_z_init_while#r1_les#r2$false:
  2260 00003E48 50                      push eax
  2261 00003E49 58                      pop eax
  2262 00003E4A 83F800                  cmp eax, 0
  2263 00003E4D 7465                    je GDT_z_init_while#r1_$end
  2264 00003E4F A1[203E0000]            mov eax, [GDT_z_init_i]
  2265 00003E54 50                      push eax
  2266 00003E55 B802000000              mov eax, 2
  2267 00003E5A 50                      push eax
  2268 00003E5B 58                      pop eax
  2269 00003E5C 5B                      pop ebx
  2270 00003E5D F7E3                    mul ebx
  2271 00003E5F 50                      push eax
  2272 00003E60 B800000000              mov eax, 0
  2273 00003E65 50                      push eax
  2274 00003E66 58                      pop eax
  2275 00003E67 5B                      pop ebx
  2276 00003E68 8983[74000000]          mov [main_z_addrGDT+ebx], eax
  2277 00003E6E A1[203E0000]            mov eax, [GDT_z_init_i]
  2278 00003E73 50                      push eax
  2279 00003E74 B802000000              mov eax, 2
  2280 00003E79 50                      push eax
  2281 00003E7A 58                      pop eax
  2282 00003E7B 5B                      pop ebx
  2283 00003E7C F7E3                    mul ebx
  2284 00003E7E 50                      push eax
  2285 00003E7F B801000000              mov eax, 1
  2286 00003E84 50                      push eax
  2287 00003E85 58                      pop eax
  2288 00003E86 5B                      pop ebx
  2289 00003E87 01D8                    add eax, ebx
  2290 00003E89 50                      push eax
  2291 00003E8A B800000000              mov eax, 0
  2292 00003E8F 50                      push eax
  2293 00003E90 58                      pop eax
  2294 00003E91 5B                      pop ebx
  2295 00003E92 8983[74000000]          mov [main_z_addrGDT+ebx], eax
  2296 00003E98 A1[203E0000]            mov eax, [GDT_z_init_i]
  2297 00003E9D 50                      push eax
  2298 00003E9E B801000000              mov eax, 1
  2299 00003EA3 50                      push eax
  2300 00003EA4 58                      pop eax
  2301 00003EA5 5B                      pop ebx
  2302 00003EA6 01D8                    add eax, ebx
  2303 00003EA8 50                      push eax
  2304 00003EA9 58                      pop eax
  2305 00003EAA A3[203E0000]            mov [GDT_z_init_i], eax
  2306 00003EAF E976FFFFFF              jmp GDT_z_init_while#r1_$start
  2307                                  GDT_z_init_while#r1_$end:
  2308                                  ;========== GDT_z_init_while#r1_$end ==========
  2309                                  
  2310 00003EB4 A1[74000000]            mov eax, [main_z_addrGDT]
  2311 00003EB9 50                      push eax
  2312 00003EBA B800000000              mov eax, 0
  2313 00003EBF 50                      push eax
  2314 00003EC0 B808000000              mov eax, 8
  2315 00003EC5 50                      push eax
  2316 00003EC6 58                      pop eax
  2317 00003EC7 5B                      pop ebx
  2318 00003EC8 F7E3                    mul ebx
  2319 00003ECA 50                      push eax
  2320 00003ECB 58                      pop eax
  2321 00003ECC 5B                      pop ebx
  2322 00003ECD 01D8                    add eax, ebx
  2323 00003ECF 50                      push eax
  2324 00003ED0 B800000000              mov eax, 0x00000000
  2325 00003ED5 50                      push eax
  2326 00003ED6 B800000000              mov eax, 0x00000000
  2327 00003EDB 50                      push eax
  2328 00003EDC E8F5000000              call kernel_z_setGDT
  2329                                  
  2330 00003EE1 A1[74000000]            mov eax, [main_z_addrGDT]
  2331 00003EE6 50                      push eax
  2332 00003EE7 B801000000              mov eax, 1
  2333 00003EEC 50                      push eax
  2334 00003EED B808000000              mov eax, 8
  2335 00003EF2 50                      push eax
  2336 00003EF3 58                      pop eax
  2337 00003EF4 5B                      pop ebx
  2338 00003EF5 F7E3                    mul ebx
  2339 00003EF7 50                      push eax
  2340 00003EF8 58                      pop eax
  2341 00003EF9 5B                      pop ebx
  2342 00003EFA 01D8                    add eax, ebx
  2343 00003EFC 50                      push eax
  2344 00003EFD B800000000              mov eax, 0x00000000
  2345 00003F02 50                      push eax
  2346 00003F03 B892FFFF0F              mov eax, 0x0fffff92
  2347 00003F08 50                      push eax
  2348 00003F09 E8C8000000              call kernel_z_setGDT
  2349                                  
  2350 00003F0E A1[74000000]            mov eax, [main_z_addrGDT]
  2351 00003F13 50                      push eax
  2352 00003F14 B802000000              mov eax, 2
  2353 00003F19 50                      push eax
  2354 00003F1A B808000000              mov eax, 8
  2355 00003F1F 50                      push eax
  2356 00003F20 58                      pop eax
  2357 00003F21 5B                      pop ebx
  2358 00003F22 F7E3                    mul ebx
  2359 00003F24 50                      push eax
  2360 00003F25 58                      pop eax
  2361 00003F26 5B                      pop ebx
  2362 00003F27 01D8                    add eax, ebx
  2363 00003F29 50                      push eax
  2364 00003F2A B800000000              mov eax, 0x00000000
  2365 00003F2F 50                      push eax
  2366 00003F30 B89AFFFF07              mov eax, 0x07ffff9a
  2367 00003F35 50                      push eax
  2368 00003F36 E89B000000              call kernel_z_setGDT
  2369                                  
  2370 00003F3B E8BE000000              call kernel_z_loadGDT
  2371                                  
  2372 00003F40 C3                      ret
  2373                                  GDT_z_init$pass:
  2374                                  ;============[fun end]init=============
  2375                                  
  2376                                  
  2377                                  
  2378                                  ;############[fun begin]init############
  2379 00003F41 EB6C                    jmp IDT_z_init$pass
  2380                                  IDT_z_init:
  2381 00003F43 5D                      pop ebp
  2382 00003F44 55                      push ebp
  2383 00003F45 B800000000              mov eax, 0
  2384 00003F4A 50                      push eax
  2385 00003F4B EB04                    jmp IDT_z_init_i$pass
  2386 00003F4D 00000000                IDT_z_init_i: dd 0
  2387                                  IDT_z_init_i$pass:
  2388 00003F51 58                      pop eax
  2389 00003F52 A3[4D3F0000]            mov [IDT_z_init_i], eax
  2390                                  
  2391                                  ;########## IDT_z_init_while#r1_$start ##########
  2392                                  IDT_z_init_while#r1_$start:
  2393 00003F57 A1[4D3F0000]            mov eax, [IDT_z_init_i]
  2394 00003F5C 50                      push eax
  2395 00003F5D B800010000              mov eax, 256
  2396 00003F62 50                      push eax
  2397 00003F63 5B                      pop ebx
  2398 00003F64 58                      pop eax
  2399 00003F65 39D8                    cmp eax, ebx
  2400 00003F67 7207                    jb IDT_z_init_while#r1_les#r2$true
  2401 00003F69 B800000000              mov eax, 0
  2402 00003F6E EB05                    jmp IDT_z_init_while#r1_les#r2$false
  2403                                  IDT_z_init_while#r1_les#r2$true:
  2404 00003F70 B801000000              mov eax, 1
  2405                                  IDT_z_init_while#r1_les#r2$false:
  2406 00003F75 50                      push eax
  2407 00003F76 58                      pop eax
  2408 00003F77 83F800                  cmp eax, 0
  2409 00003F7A 742D                    je IDT_z_init_while#r1_$end
  2410 00003F7C A1[4D3F0000]            mov eax, [IDT_z_init_i]
  2411 00003F81 50                      push eax
  2412 00003F82 B800000000              mov eax, 0
  2413 00003F87 50                      push eax
  2414 00003F88 58                      pop eax
  2415 00003F89 5B                      pop ebx
  2416 00003F8A 8983[62000000]          mov [main_z_addrIDT+ebx], eax
  2417 00003F90 A1[4D3F0000]            mov eax, [IDT_z_init_i]
  2418 00003F95 50                      push eax
  2419 00003F96 B801000000              mov eax, 1
  2420 00003F9B 50                      push eax
  2421 00003F9C 58                      pop eax
  2422 00003F9D 5B                      pop ebx
  2423 00003F9E 01D8                    add eax, ebx
  2424 00003FA0 50                      push eax
  2425 00003FA1 58                      pop eax
  2426 00003FA2 A3[4D3F0000]            mov [IDT_z_init_i], eax
  2427 00003FA7 EBAE                    jmp IDT_z_init_while#r1_$start
  2428                                  IDT_z_init_while#r1_$end:
  2429                                  ;========== IDT_z_init_while#r1_$end ==========
  2430                                  
  2431 00003FA9 E858000000              call kernel_z_loadIDT
  2432                                  
  2433 00003FAE C3                      ret
  2434                                  IDT_z_init$pass:
  2435                                  ;============[fun end]init=============
  2436                                  
  2437                                  
  2438 00003FAF E993000000              jmp main
  2439                                  
  2440                                  limit_low equ 0
  2441                                  base_low equ 2 
  2442                                  base_mid equ 4 
  2443                                  access_right equ 5
  2444                                  limit_high equ 6 
  2445                                  base_high equ 7 
  2446                                  	
  2447 00003FB4 <res Ch>                ALIGNB	16
  2448                                  GDTR:
  2449 00003FC0 FFFF                    		DW 8*8192-1 ; 最后一个字节的偏移
  2450 00003FC2 00002700                		DD 0x270000 ; 表的地址
  2451                                  
  2452 00003FC6 <res Ah>                ALIGNB	16
  2453                                  IDTR:
  2454 00003FD0 FF07                    		DW 8*256-1       ; 后16位是IDT的大小，limit
  2455 00003FD2 00F82600                		DD 0x26f800      ; 前32位是IDT在内存中的位置
  2456                                  
  2457                                  ; esi是将要填入的地址，就是GDT表的地址，例如Addr_GDT+1*8, Addr_GDT+2*8
  2458                                  ; eax是基地址，是代码的
  2459                                  ; ebx是控制参数和限制 24+8 4位扩展(自动填上)20位限长8位参数
  2460                                  ;     高4位参数 高4位限制 低16位限制 8位参数 = 32位ebx
  2461                                  ; 实际上高4位参数被自己固定掉了
  2462                                  ; 因此用一个常量代替比较好
  2463                                  ; 设置GDT内容
  2464                                  ; kernel.z\setGDT(addr: dword, param1: dword, param2: dword)
  2465                                  kernel_z_setGDT:
  2466 00003FD6 5D                        pop ebp
  2467 00003FD7 5B                        pop ebx
  2468 00003FD8 58                        pop eax
  2469 00003FD9 5E                        pop esi
  2470 00003FDA 55                        push ebp
  2471 00003FDB 66894602                	mov [esi+base_low],  ax ; 基地址的低16位
  2472 00003FDF C1E810                  	shr eax, 16
  2473 00003FE2 884604                  	mov [esi+base_mid], al ; 8位，1个字节
  2474 00003FE5 886607                  	mov [esi+base_high], ah
  2475                                  	; 下面是限制与权限设置
  2476 00003FE8 885E05                  	mov [esi+access_right], bl;8位参数
  2477                                  	; 0x00 未使用的记录表
  2478                                  	; 0x92 系统模式，可读写不可执行
  2479                                  	; 0x9a 系统模式，可执行可读不可写
  2480                                  	; 0xf2 应用模式，可读写不可执行
  2481                                  	; 0xfa 应用模式，可执行可读不可写
  2482 00003FEB C1EB08                  	shr ebx, 8
  2483 00003FEE 66891E                  	mov [esi+limit_low], bx ; 限制的低16位
  2484 00003FF1 C1EB10                  	shr ebx, 16
  2485 00003FF4 80CBC0                  	or  bl, 0xc0 ; 0xc0=11000000
  2486 00003FF7 80E3CF                  	and bl, 0xcf ; 规定好前4位为1100，0x11001111
  2487 00003FFA 885E06                  	mov [esi+limit_high], bl ; 4位参数+4位段限长，高4位被称为扩展访问权，参数固定为
  2488                                  	; G=1(开启4K),D/B=1(32位段),0(固定),AVL=0(也是默认的)这4位在386前是没有的
  2489                                  	; 因此注意limit在这里被规定为24位长，其中高四位是扩展访问权，是固定的
  2490 00003FFD C3                      ret 
  2491                                  
  2492                                  ; 加载GDT
  2493                                  ; kernel.z\loadGDT()
  2494                                  kernel_z_loadGDT:
  2495 00003FFE 0F0115[C03F0000]          lgdt [GDTR] ; 不加dword会警告，因为现在的标签的确从0开始的
  2496 00004005 C3                      ret
  2497                                  
  2498                                  kernel_z_loadIDT:
  2499 00004006 0F011D[D03F0000]        	lidt [IDTR];装载IDT
  2500 0000400D C3                      ret
  2501                                  
  2502                                  offset_low equ 0
  2503                                  selector equ 2
  2504                                  dw_count equ 4
  2505                                  access_right equ 5
  2506                                  offset_high equ 6
  2507                                  	
  2508                                  ; esi是将要填入的地址
  2509                                  ; eax偏移地址4字节,也就是中断函数地址了
  2510                                  kernel_z_setIDT:
  2511 0000400E 5D                      	pop ebp
  2512 0000400F 58                      	pop eax 
  2513 00004010 5E                      	pop esi 
  2514 00004011 55                      	push ebp 
  2515 00004012 668906                  	mov [esi+offset_low], ax 
  2516 00004015 C1E810                  	shr eax, 16
  2517 00004018 66894606                	mov [esi+offset_high], ax
  2518 0000401C 66C746021000            	mov [esi+selector], word 2<<3 ; 第二段 
  2519 00004022 66B8008E                	mov ax, 1000111000000000B ; 参数都在这里，中断门
  2520 00004026 66894604                	mov [esi+dw_count], ax 
  2521 0000402A C3                      ret
  2522                                  
  2523                                  ; 读写内存
  2524                                  ; kernel.z\setMem.1byte(val:dword, addr:dword)
  2525                                  kernel_z_setMem_1byte:
  2526 0000402B 5D                        pop ebp
  2527 0000402C 5B                        pop ebx
  2528 0000402D 58                        pop eax
  2529 0000402E 55                        push ebp
  2530 0000402F 8803                      mov [ebx], al
  2531 00004031 C3                      ret
  2532                                  
  2533                                  ; kernel.z\setMem.2byte(val:dword, addr:dword)
  2534                                  kernel_z_setMem_2byte:
  2535 00004032 5D                        pop ebp
  2536 00004033 5B                        pop ebx
  2537 00004034 58                        pop eax
  2538 00004035 55                        push ebp
  2539 00004036 668903                    mov [ebx], ax
  2540 00004039 C3                      ret
  2541                                  
  2542                                  ; kernel.z\setMem.4byte(val:dword, addr:dword)
  2543                                  kernel_z_setMem_4byte:
  2544 0000403A 5D                        pop ebp
  2545 0000403B 5B                        pop ebx
  2546 0000403C 58                        pop eax
  2547 0000403D 55                        push ebp
  2548 0000403E 8903                      mov [ebx], eax
  2549 00004040 C3                      ret
  2550                                  
  2551                                  ; kernel.z\halt()
  2552                                  kernel_z_halt:
  2553 00004041 F4                        hlt
  2554 00004042 C3                      ret
  2555 00004043 11111111                TESTA: DD 0x11111111
  2556                                  ; 主进程入口
  2557                                  main:
  2558                                  
  2559                                  	; 每当执行一个新的浮点程序时，第一条指令都应该是初始化FPU的指令finit
  2560                                  	; 该指令清除浮点数据寄存器栈和异常，为程序提供一个“干净”的初始状态
  2561                                  	; 否则，遗留在浮点寄存器栈中的数据可能会产生堆栈溢出
  2562                                  	; 另一方面，浮点指令程序段结束，也最好清空浮点数据寄存器
  2563                                    ; finit
  2564                                  	; fld src	;将浮点数src压入ST（0）
  2565                                    ; fild src  ;将整数src压入ST（0）
  2566                                    ;fild DWORD [TESTA]
  2567                                    ;fild DWORD [eax]
  2568                                  	; mov ebx, [TESTA]
  2569                                    ; fild DWORD [TESTA]
  2570                                    ; fild DWORD [TESTA]
  2571                                  	; fadd
  2572                                  	; fist DWORD [eax]
  2573                                  	; mov eax, [eax]
  2574                                    ; ;fadd to st1
  2575                                  	; tt:
  2576                                  	; 	hlt
  2577                                  	; jmp tt
  2578                                  
  2579                                  	; 四舍五入除法
  2580                                  	; roundDiv(a: DWORD, b: DWORD): DWORD
  2581                                  	; 就能实现画斜线功能
  2582                                  	; 输入两个整数src
  2583                                  	; 用浮点数指令实现四舍五入除法
  2584                                  	; 通过浮点除法指令计算得出浮点数结果
  2585                                  	; 再根据浮点数比较指令实现四舍五入
  2586                                  	; roundDiv:
  2587                                  	; 	fild src1 
  2588                                  	; 	fild src2
  2589                                  	; 	fdiv
  2590                                  	; 	fist dst
  2591                                  
  2592                                  	; ret
  2593                                  
  2594 00004047 E834C0FFFF                call main_z_run_once
  2595                                    .loop:
  2596 0000404C E849C0FFFF                  call main_z_run_loop
  2597 00004051 EBF9                      jmp .loop
  2598                                  
