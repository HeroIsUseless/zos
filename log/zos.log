     1                                  [bits 32]
     2                                  ORG 0x280000
     3 00000000 B840010000              mov eax, 320
     4 00000005 50                      push eax
     5 00000006 EB04                    jmp main_z_screenWidth$pass
     6 00000008 00000000                main_z_screenWidth: dd 0
     7                                  main_z_screenWidth$pass:
     8 0000000C 58                      pop eax
     9 0000000D A3[08000000]            mov [main_z_screenWidth], eax
    10                                  
    11 00000012 B8C8000000              mov eax, 200
    12 00000017 50                      push eax
    13 00000018 EB04                    jmp main_z_screenHeight$pass
    14 0000001A 00000000                main_z_screenHeight: dd 0
    15                                  main_z_screenHeight$pass:
    16 0000001E 58                      pop eax
    17 0000001F A3[1A000000]            mov [main_z_screenHeight], eax
    18                                  
    19 00000024 B800000A00              mov eax, 0x000a0000
    20 00000029 50                      push eax
    21 0000002A EB04                    jmp main_z_addrVram$pass
    22 0000002C 00000000                main_z_addrVram: dd 0
    23                                  main_z_addrVram$pass:
    24 00000030 58                      pop eax
    25 00000031 A3[2C000000]            mov [main_z_addrVram], eax
    26                                  
    27 00000036 B800E02400              mov eax, 0x0024e000
    28 0000003B 50                      push eax
    29 0000003C EB04                    jmp main_z_addrPM$pass
    30 0000003E 00000000                main_z_addrPM: dd 0
    31                                  main_z_addrPM$pass:
    32 00000042 58                      pop eax
    33 00000043 A3[3E000000]            mov [main_z_addrPM], eax
    34                                  
    35 00000048 B800E02600              mov eax, 0x0026e000
    36 0000004D 50                      push eax
    37 0000004E EB04                    jmp main_z_addrPDT$pass
    38 00000050 00000000                main_z_addrPDT: dd 0
    39                                  main_z_addrPDT$pass:
    40 00000054 58                      pop eax
    41 00000055 A3[50000000]            mov [main_z_addrPDT], eax
    42                                  
    43 0000005A B800F82600              mov eax, 0x0026f800
    44 0000005F 50                      push eax
    45 00000060 EB04                    jmp main_z_addrIDT$pass
    46 00000062 00000000                main_z_addrIDT: dd 0
    47                                  main_z_addrIDT$pass:
    48 00000066 58                      pop eax
    49 00000067 A3[62000000]            mov [main_z_addrIDT], eax
    50                                  
    51 0000006C B800002700              mov eax, 0x00270000
    52 00000071 50                      push eax
    53 00000072 EB04                    jmp main_z_addrGDT$pass
    54 00000074 00000000                main_z_addrGDT: dd 0
    55                                  main_z_addrGDT$pass:
    56 00000078 58                      pop eax
    57 00000079 A3[74000000]            mov [main_z_addrGDT], eax
    58                                  
    59                                  
    60                                  ;############[fun begin]run_once############
    61 0000007E EB18                    jmp main_z_run_once$pass
    62                                  main_z_run_once:
    63 00000080 5D                      pop ebp
    64 00000081 55                      push ebp
    65 00000082 A1[2C000000]            mov eax, [main_z_addrVram]
    66 00000087 50                      push eax
    67 00000088 E86B3C0000              call test_z_draw
    68                                  
    69 0000008D E8243D0000              call GDT_z_init
    70                                  
    71 00000092 E84C3E0000              call IDT_z_init
    72                                  
    73 00000097 C3                      ret
    74                                  main_z_run_once$pass:
    75                                  ;============[fun end]run_once=============
    76                                  
    77                                  
    78                                  ;############[fun begin]run_loop############
    79 00000098 EB08                    jmp main_z_run_loop$pass
    80                                  main_z_run_loop:
    81 0000009A 5D                      pop ebp
    82 0000009B 55                      push ebp
    83 0000009C E8403F0000              call kernel_z_halt
    84                                  
    85 000000A1 C3                      ret
    86                                  main_z_run_loop$pass:
    87                                  ;============[fun end]run_loop=============
    88                                  
    89                                  
    90                                  
    91                                  ;############[fun begin]set_1byte############
    92 000000A2 EB2C                    jmp memory_z_set_1byte$pass
    93                                  memory_z_set_1byte:
    94 000000A4 5D                      pop ebp
    95                                  ;param: addr
    96 000000A5 EB04                    jmp memory_z_set_1byte_addr$pass
    97 000000A7 00000000                memory_z_set_1byte_addr: dd 0
    98                                  memory_z_set_1byte_addr$pass:
    99 000000AB 58                      pop eax
   100 000000AC A3[A7000000]            mov [memory_z_set_1byte_addr], eax
   101                                  ;param: val
   102 000000B1 EB04                    jmp memory_z_set_1byte_val$pass
   103 000000B3 00000000                memory_z_set_1byte_val: dd 0
   104                                  memory_z_set_1byte_val$pass:
   105 000000B7 58                      pop eax
   106 000000B8 A3[B3000000]            mov [memory_z_set_1byte_val], eax
   107 000000BD 55                      push ebp
   108 000000BE A1[B3000000]            mov eax, [memory_z_set_1byte_val]
   109 000000C3 50                      push eax
   110 000000C4 A1[A7000000]            mov eax, [memory_z_set_1byte_addr]
   111 000000C9 50                      push eax
   112 000000CA E8FC3E0000              call kernel_z_setMem_1byte
   113                                  
   114 000000CF C3                      ret
   115                                  memory_z_set_1byte$pass:
   116                                  ;============[fun end]set_1byte=============
   117                                  
   118                                  
   119                                  ;############[fun begin]set_2byte############
   120 000000D0 EB2C                    jmp memory_z_set_2byte$pass
   121                                  memory_z_set_2byte:
   122 000000D2 5D                      pop ebp
   123                                  ;param: addr
   124 000000D3 EB04                    jmp memory_z_set_2byte_addr$pass
   125 000000D5 00000000                memory_z_set_2byte_addr: dd 0
   126                                  memory_z_set_2byte_addr$pass:
   127 000000D9 58                      pop eax
   128 000000DA A3[D5000000]            mov [memory_z_set_2byte_addr], eax
   129                                  ;param: val
   130 000000DF EB04                    jmp memory_z_set_2byte_val$pass
   131 000000E1 00000000                memory_z_set_2byte_val: dd 0
   132                                  memory_z_set_2byte_val$pass:
   133 000000E5 58                      pop eax
   134 000000E6 A3[E1000000]            mov [memory_z_set_2byte_val], eax
   135 000000EB 55                      push ebp
   136 000000EC A1[E1000000]            mov eax, [memory_z_set_2byte_val]
   137 000000F1 50                      push eax
   138 000000F2 A1[D5000000]            mov eax, [memory_z_set_2byte_addr]
   139 000000F7 50                      push eax
   140 000000F8 E8D53E0000              call kernel_z_setMem_2byte
   141                                  
   142 000000FD C3                      ret
   143                                  memory_z_set_2byte$pass:
   144                                  ;============[fun end]set_2byte=============
   145                                  
   146                                  
   147                                  ;############[fun begin]set_4byte############
   148 000000FE EB2C                    jmp memory_z_set_4byte$pass
   149                                  memory_z_set_4byte:
   150 00000100 5D                      pop ebp
   151                                  ;param: addr
   152 00000101 EB04                    jmp memory_z_set_4byte_addr$pass
   153 00000103 00000000                memory_z_set_4byte_addr: dd 0
   154                                  memory_z_set_4byte_addr$pass:
   155 00000107 58                      pop eax
   156 00000108 A3[03010000]            mov [memory_z_set_4byte_addr], eax
   157                                  ;param: val
   158 0000010D EB04                    jmp memory_z_set_4byte_val$pass
   159 0000010F 00000000                memory_z_set_4byte_val: dd 0
   160                                  memory_z_set_4byte_val$pass:
   161 00000113 58                      pop eax
   162 00000114 A3[0F010000]            mov [memory_z_set_4byte_val], eax
   163 00000119 55                      push ebp
   164 0000011A A1[0F010000]            mov eax, [memory_z_set_4byte_val]
   165 0000011F 50                      push eax
   166 00000120 A1[03010000]            mov eax, [memory_z_set_4byte_addr]
   167 00000125 50                      push eax
   168 00000126 E8AF3E0000              call kernel_z_setMem_4byte
   169                                  
   170 0000012B C3                      ret
   171                                  memory_z_set_4byte$pass:
   172                                  ;============[fun end]set_4byte=============
   173                                  
   174                                  
   175                                  
   176                                  ;############[fun begin]pixel############
   177 0000012C E983000000              jmp draw_z_pixel$pass
   178                                  draw_z_pixel:
   179 00000131 5D                      pop ebp
   180                                  ;param: vramAddr
   181 00000132 EB04                    jmp draw_z_pixel_vramAddr$pass
   182 00000134 00000000                draw_z_pixel_vramAddr: dd 0
   183                                  draw_z_pixel_vramAddr$pass:
   184 00000138 58                      pop eax
   185 00000139 A3[34010000]            mov [draw_z_pixel_vramAddr], eax
   186                                  ;param: screenWidth
   187 0000013E EB04                    jmp draw_z_pixel_screenWidth$pass
   188 00000140 00000000                draw_z_pixel_screenWidth: dd 0
   189                                  draw_z_pixel_screenWidth$pass:
   190 00000144 58                      pop eax
   191 00000145 A3[40010000]            mov [draw_z_pixel_screenWidth], eax
   192                                  ;param: color
   193 0000014A EB04                    jmp draw_z_pixel_color$pass
   194 0000014C 00000000                draw_z_pixel_color: dd 0
   195                                  draw_z_pixel_color$pass:
   196 00000150 58                      pop eax
   197 00000151 A3[4C010000]            mov [draw_z_pixel_color], eax
   198                                  ;param: y
   199 00000156 EB04                    jmp draw_z_pixel_y$pass
   200 00000158 00000000                draw_z_pixel_y: dd 0
   201                                  draw_z_pixel_y$pass:
   202 0000015C 58                      pop eax
   203 0000015D A3[58010000]            mov [draw_z_pixel_y], eax
   204                                  ;param: x
   205 00000162 EB04                    jmp draw_z_pixel_x$pass
   206 00000164 00000000                draw_z_pixel_x: dd 0
   207                                  draw_z_pixel_x$pass:
   208 00000168 58                      pop eax
   209 00000169 A3[64010000]            mov [draw_z_pixel_x], eax
   210 0000016E 55                      push ebp
   211 0000016F A1[58010000]            mov eax, [draw_z_pixel_y]
   212 00000174 50                      push eax
   213 00000175 A1[40010000]            mov eax, [draw_z_pixel_screenWidth]
   214 0000017A 50                      push eax
   215 0000017B 58                      pop eax
   216 0000017C 5B                      pop ebx
   217 0000017D F7E3                    mul ebx
   218 0000017F 50                      push eax
   219 00000180 A1[64010000]            mov eax, [draw_z_pixel_x]
   220 00000185 50                      push eax
   221 00000186 58                      pop eax
   222 00000187 5B                      pop ebx
   223 00000188 01D8                    add eax, ebx
   224 0000018A 50                      push eax
   225 0000018B A1[34010000]            mov eax, [draw_z_pixel_vramAddr]
   226 00000190 50                      push eax
   227 00000191 58                      pop eax
   228 00000192 5B                      pop ebx
   229 00000193 01D8                    add eax, ebx
   230 00000195 50                      push eax
   231 00000196 EB04                    jmp draw_z_pixel_addr$pass
   232 00000198 00000000                draw_z_pixel_addr: dd 0
   233                                  draw_z_pixel_addr$pass:
   234 0000019C 58                      pop eax
   235 0000019D A3[98010000]            mov [draw_z_pixel_addr], eax
   236                                  
   237 000001A2 A1[4C010000]            mov eax, [draw_z_pixel_color]
   238 000001A7 50                      push eax
   239 000001A8 A1[98010000]            mov eax, [draw_z_pixel_addr]
   240 000001AD 50                      push eax
   241 000001AE E8F1FEFFFF              call memory_z_set_1byte
   242                                  
   243 000001B3 C3                      ret
   244                                  draw_z_pixel$pass:
   245                                  ;============[fun end]pixel=============
   246                                  
   247                                  
   248                                  ;############[fun begin]hLine############
   249 000001B4 E9CA000000              jmp draw_z_hLine$pass
   250                                  draw_z_hLine:
   251 000001B9 5D                      pop ebp
   252                                  ;param: vramAddr
   253 000001BA EB04                    jmp draw_z_hLine_vramAddr$pass
   254 000001BC 00000000                draw_z_hLine_vramAddr: dd 0
   255                                  draw_z_hLine_vramAddr$pass:
   256 000001C0 58                      pop eax
   257 000001C1 A3[BC010000]            mov [draw_z_hLine_vramAddr], eax
   258                                  ;param: screenWidth
   259 000001C6 EB04                    jmp draw_z_hLine_screenWidth$pass
   260 000001C8 00000000                draw_z_hLine_screenWidth: dd 0
   261                                  draw_z_hLine_screenWidth$pass:
   262 000001CC 58                      pop eax
   263 000001CD A3[C8010000]            mov [draw_z_hLine_screenWidth], eax
   264                                  ;param: color
   265 000001D2 EB04                    jmp draw_z_hLine_color$pass
   266 000001D4 00000000                draw_z_hLine_color: dd 0
   267                                  draw_z_hLine_color$pass:
   268 000001D8 58                      pop eax
   269 000001D9 A3[D4010000]            mov [draw_z_hLine_color], eax
   270                                  ;param: ey
   271 000001DE EB04                    jmp draw_z_hLine_ey$pass
   272 000001E0 00000000                draw_z_hLine_ey: dd 0
   273                                  draw_z_hLine_ey$pass:
   274 000001E4 58                      pop eax
   275 000001E5 A3[E0010000]            mov [draw_z_hLine_ey], eax
   276                                  ;param: ex
   277 000001EA EB04                    jmp draw_z_hLine_ex$pass
   278 000001EC 00000000                draw_z_hLine_ex: dd 0
   279                                  draw_z_hLine_ex$pass:
   280 000001F0 58                      pop eax
   281 000001F1 A3[EC010000]            mov [draw_z_hLine_ex], eax
   282                                  ;param: by
   283 000001F6 EB04                    jmp draw_z_hLine_by$pass
   284 000001F8 00000000                draw_z_hLine_by: dd 0
   285                                  draw_z_hLine_by$pass:
   286 000001FC 58                      pop eax
   287 000001FD A3[F8010000]            mov [draw_z_hLine_by], eax
   288                                  ;param: bx
   289 00000202 EB04                    jmp draw_z_hLine_bx$pass
   290 00000204 00000000                draw_z_hLine_bx: dd 0
   291                                  draw_z_hLine_bx$pass:
   292 00000208 58                      pop eax
   293 00000209 A3[04020000]            mov [draw_z_hLine_bx], eax
   294 0000020E 55                      push ebp
   295 0000020F A1[04020000]            mov eax, [draw_z_hLine_bx]
   296 00000214 50                      push eax
   297 00000215 EB04                    jmp draw_z_hLine_i$pass
   298 00000217 00000000                draw_z_hLine_i: dd 0
   299                                  draw_z_hLine_i$pass:
   300 0000021B 58                      pop eax
   301 0000021C A3[17020000]            mov [draw_z_hLine_i], eax
   302                                  
   303                                  ;########## draw_z_hLine_while#r1_$start ##########
   304                                  draw_z_hLine_while#r1_$start:
   305 00000221 A1[17020000]            mov eax, [draw_z_hLine_i]
   306 00000226 50                      push eax
   307 00000227 A1[EC010000]            mov eax, [draw_z_hLine_ex]
   308 0000022C 50                      push eax
   309 0000022D 5B                      pop ebx
   310 0000022E 58                      pop eax
   311 0000022F 39D8                    cmp eax, ebx
   312 00000231 7607                    jbe draw_z_hLine_while#r1_leq#r2$true
   313 00000233 B800000000              mov eax, 0
   314 00000238 EB05                    jmp draw_z_hLine_while#r1_leq#r2$false
   315                                  draw_z_hLine_while#r1_leq#r2$true:
   316 0000023A B801000000              mov eax, 1
   317                                  draw_z_hLine_while#r1_leq#r2$false:
   318 0000023F 50                      push eax
   319 00000240 58                      pop eax
   320 00000241 83F800                  cmp eax, 0
   321 00000244 743C                    je draw_z_hLine_while#r1_$end
   322 00000246 A1[17020000]            mov eax, [draw_z_hLine_i]
   323 0000024B 50                      push eax
   324 0000024C A1[F8010000]            mov eax, [draw_z_hLine_by]
   325 00000251 50                      push eax
   326 00000252 A1[D4010000]            mov eax, [draw_z_hLine_color]
   327 00000257 50                      push eax
   328 00000258 A1[C8010000]            mov eax, [draw_z_hLine_screenWidth]
   329 0000025D 50                      push eax
   330 0000025E A1[BC010000]            mov eax, [draw_z_hLine_vramAddr]
   331 00000263 50                      push eax
   332 00000264 E8C8FEFFFF              call draw_z_pixel
   333                                  
   334 00000269 A1[17020000]            mov eax, [draw_z_hLine_i]
   335 0000026E 50                      push eax
   336 0000026F B801000000              mov eax, 1
   337 00000274 50                      push eax
   338 00000275 58                      pop eax
   339 00000276 5B                      pop ebx
   340 00000277 01D8                    add eax, ebx
   341 00000279 50                      push eax
   342 0000027A 58                      pop eax
   343 0000027B A3[17020000]            mov [draw_z_hLine_i], eax
   344 00000280 EB9F                    jmp draw_z_hLine_while#r1_$start
   345                                  draw_z_hLine_while#r1_$end:
   346                                  ;========== draw_z_hLine_while#r1_$end ==========
   347                                  
   348 00000282 C3                      ret
   349                                  draw_z_hLine$pass:
   350                                  ;============[fun end]hLine=============
   351                                  
   352                                  
   353                                  ;############[fun begin]font############
   354 00000283 EB3F                    jmp draw_z_font$pass
   355                                  draw_z_font:
   356 00000285 5D                      pop ebp
   357                                  ;param: backColor
   358 00000286 EB04                    jmp draw_z_font_backColor$pass
   359 00000288 00000000                draw_z_font_backColor: dd 0
   360                                  draw_z_font_backColor$pass:
   361 0000028C 58                      pop eax
   362 0000028D A3[88020000]            mov [draw_z_font_backColor], eax
   363                                  ;param: foreColor
   364 00000292 EB04                    jmp draw_z_font_foreColor$pass
   365 00000294 00000000                draw_z_font_foreColor: dd 0
   366                                  draw_z_font_foreColor$pass:
   367 00000298 58                      pop eax
   368 00000299 A3[94020000]            mov [draw_z_font_foreColor], eax
   369                                  ;param: top
   370 0000029E EB04                    jmp draw_z_font_top$pass
   371 000002A0 00000000                draw_z_font_top: dd 0
   372                                  draw_z_font_top$pass:
   373 000002A4 58                      pop eax
   374 000002A5 A3[A0020000]            mov [draw_z_font_top], eax
   375                                  ;param: left
   376 000002AA EB04                    jmp draw_z_font_left$pass
   377 000002AC 00000000                draw_z_font_left: dd 0
   378                                  draw_z_font_left$pass:
   379 000002B0 58                      pop eax
   380 000002B1 A3[AC020000]            mov [draw_z_font_left], eax
   381                                  ;param: charAddr
   382 000002B6 EB04                    jmp draw_z_font_charAddr$pass
   383 000002B8 00000000                draw_z_font_charAddr: dd 0
   384                                  draw_z_font_charAddr$pass:
   385 000002BC 58                      pop eax
   386 000002BD A3[B8020000]            mov [draw_z_font_charAddr], eax
   387 000002C2 55                      push ebp
   388 000002C3 C3                      ret
   389                                  draw_z_font$pass:
   390                                  ;============[fun end]font=============
   391                                  
   392                                  
   393                                  ;############[fun begin]flush############
   394 000002C4 E910010000              jmp draw_z_flush$pass
   395                                  draw_z_flush:
   396 000002C9 5D                      pop ebp
   397                                  ;param: addrVram
   398 000002CA EB04                    jmp draw_z_flush_addrVram$pass
   399 000002CC 00000000                draw_z_flush_addrVram: dd 0
   400                                  draw_z_flush_addrVram$pass:
   401 000002D0 58                      pop eax
   402 000002D1 A3[CC020000]            mov [draw_z_flush_addrVram], eax
   403 000002D6 55                      push ebp
   404 000002D7 B800000000              mov eax, 0
   405 000002DC 50                      push eax
   406 000002DD EB04                    jmp draw_z_flush_left$pass
   407 000002DF 00000000                draw_z_flush_left: dd 0
   408                                  draw_z_flush_left$pass:
   409 000002E3 58                      pop eax
   410 000002E4 A3[DF020000]            mov [draw_z_flush_left], eax
   411                                  
   412 000002E9 B800000000              mov eax, 0
   413 000002EE 50                      push eax
   414 000002EF EB04                    jmp draw_z_flush_top$pass
   415 000002F1 00000000                draw_z_flush_top: dd 0
   416                                  draw_z_flush_top$pass:
   417 000002F5 58                      pop eax
   418 000002F6 A3[F1020000]            mov [draw_z_flush_top], eax
   419                                  
   420                                  ;########## draw_z_flush_while#r3_$start ##########
   421                                  draw_z_flush_while#r3_$start:
   422 000002FB A1[F1020000]            mov eax, [draw_z_flush_top]
   423 00000300 50                      push eax
   424 00000301 B819000000              mov eax, 25
   425 00000306 50                      push eax
   426 00000307 5B                      pop ebx
   427 00000308 58                      pop eax
   428 00000309 39D8                    cmp eax, ebx
   429 0000030B 7207                    jb draw_z_flush_while#r3_les#r4$true
   430 0000030D B800000000              mov eax, 0
   431 00000312 EB05                    jmp draw_z_flush_while#r3_les#r4$false
   432                                  draw_z_flush_while#r3_les#r4$true:
   433 00000314 B801000000              mov eax, 1
   434                                  draw_z_flush_while#r3_les#r4$false:
   435 00000319 50                      push eax
   436 0000031A 58                      pop eax
   437 0000031B 83F800                  cmp eax, 0
   438 0000031E 0F84B4000000            je draw_z_flush_while#r3_$end
   439 00000324 B800000000              mov eax, 0
   440 00000329 50                      push eax
   441 0000032A 58                      pop eax
   442 0000032B A3[DF020000]            mov [draw_z_flush_left], eax
   443                                  ;########## draw_z_flush_while#r3_while#r5_$start ##########
   444                                  draw_z_flush_while#r3_while#r5_$start:
   445 00000330 A1[DF020000]            mov eax, [draw_z_flush_left]
   446 00000335 50                      push eax
   447 00000336 B828000000              mov eax, 40
   448 0000033B 50                      push eax
   449 0000033C 5B                      pop ebx
   450 0000033D 58                      pop eax
   451 0000033E 39D8                    cmp eax, ebx
   452 00000340 7207                    jb draw_z_flush_while#r3_while#r5_les#r6$true
   453 00000342 B800000000              mov eax, 0
   454 00000347 EB05                    jmp draw_z_flush_while#r3_while#r5_les#r6$false
   455                                  draw_z_flush_while#r3_while#r5_les#r6$true:
   456 00000349 B801000000              mov eax, 1
   457                                  draw_z_flush_while#r3_while#r5_les#r6$false:
   458 0000034E 50                      push eax
   459 0000034F 58                      pop eax
   460 00000350 83F800                  cmp eax, 0
   461 00000353 7467                    je draw_z_flush_while#r3_while#r5_$end
   462 00000355 B80F000000              mov eax, 15
   463 0000035A 50                      push eax
   464 0000035B EB04                    jmp draw_z_flush_while#r3_while#r5_color$pass
   465 0000035D 00000000                draw_z_flush_while#r3_while#r5_color: dd 0
   466                                  draw_z_flush_while#r3_while#r5_color$pass:
   467 00000361 58                      pop eax
   468 00000362 A3[5D030000]            mov [draw_z_flush_while#r3_while#r5_color], eax
   469                                  
   470 00000367 A1[DF020000]            mov eax, [draw_z_flush_left]
   471 0000036C 50                      push eax
   472 0000036D B808000000              mov eax, 8
   473 00000372 50                      push eax
   474 00000373 58                      pop eax
   475 00000374 5B                      pop ebx
   476 00000375 F7E3                    mul ebx
   477 00000377 50                      push eax
   478 00000378 A1[F1020000]            mov eax, [draw_z_flush_top]
   479 0000037D 50                      push eax
   480 0000037E B808000000              mov eax, 8
   481 00000383 50                      push eax
   482 00000384 58                      pop eax
   483 00000385 5B                      pop ebx
   484 00000386 F7E3                    mul ebx
   485 00000388 50                      push eax
   486 00000389 A1[5D030000]            mov eax, [draw_z_flush_while#r3_while#r5_color]
   487 0000038E 50                      push eax
   488 0000038F B840010000              mov eax, 320
   489 00000394 50                      push eax
   490 00000395 A1[CC020000]            mov eax, [draw_z_flush_addrVram]
   491 0000039A 50                      push eax
   492 0000039B E891FDFFFF              call draw_z_pixel
   493                                  
   494 000003A0 A1[DF020000]            mov eax, [draw_z_flush_left]
   495 000003A5 50                      push eax
   496 000003A6 B801000000              mov eax, 1
   497 000003AB 50                      push eax
   498 000003AC 58                      pop eax
   499 000003AD 5B                      pop ebx
   500 000003AE 01D8                    add eax, ebx
   501 000003B0 50                      push eax
   502 000003B1 58                      pop eax
   503 000003B2 A3[DF020000]            mov [draw_z_flush_left], eax
   504 000003B7 E974FFFFFF              jmp draw_z_flush_while#r3_while#r5_$start
   505                                  draw_z_flush_while#r3_while#r5_$end:
   506                                  ;========== draw_z_flush_while#r3_while#r5_$end ==========
   507                                  
   508 000003BC A1[F1020000]            mov eax, [draw_z_flush_top]
   509 000003C1 50                      push eax
   510 000003C2 B801000000              mov eax, 1
   511 000003C7 50                      push eax
   512 000003C8 58                      pop eax
   513 000003C9 5B                      pop ebx
   514 000003CA 01D8                    add eax, ebx
   515 000003CC 50                      push eax
   516 000003CD 58                      pop eax
   517 000003CE A3[F1020000]            mov [draw_z_flush_top], eax
   518 000003D3 E923FFFFFF              jmp draw_z_flush_while#r3_$start
   519                                  draw_z_flush_while#r3_$end:
   520                                  ;========== draw_z_flush_while#r3_$end ==========
   521                                  
   522 000003D8 C3                      ret
   523                                  draw_z_flush$pass:
   524                                  ;============[fun end]flush=============
   525                                  
   526                                  
   527                                  ;############[fun begin]char############
   528 000003D9 E94C010000              jmp draw_z_char$pass
   529                                  draw_z_char:
   530 000003DE 5D                      pop ebp
   531                                  ;param: addrVram
   532 000003DF EB04                    jmp draw_z_char_addrVram$pass
   533 000003E1 00000000                draw_z_char_addrVram: dd 0
   534                                  draw_z_char_addrVram$pass:
   535 000003E5 58                      pop eax
   536 000003E6 A3[E1030000]            mov [draw_z_char_addrVram], eax
   537                                  ;param: screenWidth
   538 000003EB EB04                    jmp draw_z_char_screenWidth$pass
   539 000003ED 00000000                draw_z_char_screenWidth: dd 0
   540                                  draw_z_char_screenWidth$pass:
   541 000003F1 58                      pop eax
   542 000003F2 A3[ED030000]            mov [draw_z_char_screenWidth], eax
   543                                  ;param: charAddr
   544 000003F7 EB04                    jmp draw_z_char_charAddr$pass
   545 000003F9 00000000                draw_z_char_charAddr: dd 0
   546                                  draw_z_char_charAddr$pass:
   547 000003FD 58                      pop eax
   548 000003FE A3[F9030000]            mov [draw_z_char_charAddr], eax
   549                                  ;param: backColor
   550 00000403 EB04                    jmp draw_z_char_backColor$pass
   551 00000405 00000000                draw_z_char_backColor: dd 0
   552                                  draw_z_char_backColor$pass:
   553 00000409 58                      pop eax
   554 0000040A A3[05040000]            mov [draw_z_char_backColor], eax
   555                                  ;param: foreColor
   556 0000040F EB04                    jmp draw_z_char_foreColor$pass
   557 00000411 00000000                draw_z_char_foreColor: dd 0
   558                                  draw_z_char_foreColor$pass:
   559 00000415 58                      pop eax
   560 00000416 A3[11040000]            mov [draw_z_char_foreColor], eax
   561                                  ;param: top
   562 0000041B EB04                    jmp draw_z_char_top$pass
   563 0000041D 00000000                draw_z_char_top: dd 0
   564                                  draw_z_char_top$pass:
   565 00000421 58                      pop eax
   566 00000422 A3[1D040000]            mov [draw_z_char_top], eax
   567                                  ;param: left
   568 00000427 EB04                    jmp draw_z_char_left$pass
   569 00000429 00000000                draw_z_char_left: dd 0
   570                                  draw_z_char_left$pass:
   571 0000042D 58                      pop eax
   572 0000042E A3[29040000]            mov [draw_z_char_left], eax
   573 00000433 55                      push ebp
   574 00000434 B800000000              mov eax, 0
   575 00000439 50                      push eax
   576 0000043A EB04                    jmp draw_z_char_y$pass
   577 0000043C 00000000                draw_z_char_y: dd 0
   578                                  draw_z_char_y$pass:
   579 00000440 58                      pop eax
   580 00000441 A3[3C040000]            mov [draw_z_char_y], eax
   581                                  
   582                                  ;########## draw_z_char_while#r7_$start ##########
   583                                  draw_z_char_while#r7_$start:
   584 00000446 A1[3C040000]            mov eax, [draw_z_char_y]
   585 0000044B 50                      push eax
   586 0000044C B808000000              mov eax, 8
   587 00000451 50                      push eax
   588 00000452 5B                      pop ebx
   589 00000453 58                      pop eax
   590 00000454 39D8                    cmp eax, ebx
   591 00000456 7207                    jb draw_z_char_while#r7_les#r8$true
   592 00000458 B800000000              mov eax, 0
   593 0000045D EB05                    jmp draw_z_char_while#r7_les#r8$false
   594                                  draw_z_char_while#r7_les#r8$true:
   595 0000045F B801000000              mov eax, 1
   596                                  draw_z_char_while#r7_les#r8$false:
   597 00000464 50                      push eax
   598 00000465 58                      pop eax
   599 00000466 83F800                  cmp eax, 0
   600 00000469 0F84BA000000            je draw_z_char_while#r7_$end
   601 0000046F B800000000              mov eax, 0
   602 00000474 50                      push eax
   603 00000475 EB04                    jmp draw_z_char_while#r7_x$pass
   604 00000477 00000000                draw_z_char_while#r7_x: dd 0
   605                                  draw_z_char_while#r7_x$pass:
   606 0000047B 58                      pop eax
   607 0000047C A3[77040000]            mov [draw_z_char_while#r7_x], eax
   608                                  
   609                                  ;########## draw_z_char_while#r7_while#r9_$start ##########
   610                                  draw_z_char_while#r7_while#r9_$start:
   611 00000481 A1[77040000]            mov eax, [draw_z_char_while#r7_x]
   612 00000486 50                      push eax
   613 00000487 B808000000              mov eax, 8
   614 0000048C 50                      push eax
   615 0000048D 5B                      pop ebx
   616 0000048E 58                      pop eax
   617 0000048F 39D8                    cmp eax, ebx
   618 00000491 7207                    jb draw_z_char_while#r7_while#r9_les#r01$true
   619 00000493 B800000000              mov eax, 0
   620 00000498 EB05                    jmp draw_z_char_while#r7_while#r9_les#r01$false
   621                                  draw_z_char_while#r7_while#r9_les#r01$true:
   622 0000049A B801000000              mov eax, 1
   623                                  draw_z_char_while#r7_while#r9_les#r01$false:
   624 0000049F 50                      push eax
   625 000004A0 58                      pop eax
   626 000004A1 83F800                  cmp eax, 0
   627 000004A4 7467                    je draw_z_char_while#r7_while#r9_$end
   628 000004A6 A1[11040000]            mov eax, [draw_z_char_foreColor]
   629 000004AB 50                      push eax
   630 000004AC EB04                    jmp draw_z_char_while#r7_while#r9_color$pass
   631 000004AE 00000000                draw_z_char_while#r7_while#r9_color: dd 0
   632                                  draw_z_char_while#r7_while#r9_color$pass:
   633 000004B2 58                      pop eax
   634 000004B3 A3[AE040000]            mov [draw_z_char_while#r7_while#r9_color], eax
   635                                  
   636 000004B8 A1[29040000]            mov eax, [draw_z_char_left]
   637 000004BD 50                      push eax
   638 000004BE A1[77040000]            mov eax, [draw_z_char_while#r7_x]
   639 000004C3 50                      push eax
   640 000004C4 58                      pop eax
   641 000004C5 5B                      pop ebx
   642 000004C6 01D8                    add eax, ebx
   643 000004C8 50                      push eax
   644 000004C9 A1[1D040000]            mov eax, [draw_z_char_top]
   645 000004CE 50                      push eax
   646 000004CF A1[3C040000]            mov eax, [draw_z_char_y]
   647 000004D4 50                      push eax
   648 000004D5 58                      pop eax
   649 000004D6 5B                      pop ebx
   650 000004D7 01D8                    add eax, ebx
   651 000004D9 50                      push eax
   652 000004DA A1[AE040000]            mov eax, [draw_z_char_while#r7_while#r9_color]
   653 000004DF 50                      push eax
   654 000004E0 B840010000              mov eax, 320
   655 000004E5 50                      push eax
   656 000004E6 A1[E1030000]            mov eax, [draw_z_char_addrVram]
   657 000004EB 50                      push eax
   658 000004EC E840FCFFFF              call draw_z_pixel
   659                                  
   660 000004F1 A1[77040000]            mov eax, [draw_z_char_while#r7_x]
   661 000004F6 50                      push eax
   662 000004F7 B801000000              mov eax, 1
   663 000004FC 50                      push eax
   664 000004FD 58                      pop eax
   665 000004FE 5B                      pop ebx
   666 000004FF 01D8                    add eax, ebx
   667 00000501 50                      push eax
   668 00000502 58                      pop eax
   669 00000503 A3[77040000]            mov [draw_z_char_while#r7_x], eax
   670 00000508 E974FFFFFF              jmp draw_z_char_while#r7_while#r9_$start
   671                                  draw_z_char_while#r7_while#r9_$end:
   672                                  ;========== draw_z_char_while#r7_while#r9_$end ==========
   673                                  
   674 0000050D A1[3C040000]            mov eax, [draw_z_char_y]
   675 00000512 50                      push eax
   676 00000513 B801000000              mov eax, 1
   677 00000518 50                      push eax
   678 00000519 58                      pop eax
   679 0000051A 5B                      pop ebx
   680 0000051B 01D8                    add eax, ebx
   681 0000051D 50                      push eax
   682 0000051E 58                      pop eax
   683 0000051F A3[3C040000]            mov [draw_z_char_y], eax
   684 00000524 E91DFFFFFF              jmp draw_z_char_while#r7_$start
   685                                  draw_z_char_while#r7_$end:
   686                                  ;========== draw_z_char_while#r7_$end ==========
   687                                  
   688 00000529 C3                      ret
   689                                  draw_z_char$pass:
   690                                  ;============[fun end]char=============
   691                                  
   692                                  
   693                                  ;############[fun begin]string############
   694 0000052A E951010000              jmp draw_z_string$pass
   695                                  draw_z_string:
   696 0000052F 5D                      pop ebp
   697                                  ;param: addrVram
   698 00000530 EB04                    jmp draw_z_string_addrVram$pass
   699 00000532 00000000                draw_z_string_addrVram: dd 0
   700                                  draw_z_string_addrVram$pass:
   701 00000536 58                      pop eax
   702 00000537 A3[32050000]            mov [draw_z_string_addrVram], eax
   703                                  ;param: screenWidth
   704 0000053C EB04                    jmp draw_z_string_screenWidth$pass
   705 0000053E 00000000                draw_z_string_screenWidth: dd 0
   706                                  draw_z_string_screenWidth$pass:
   707 00000542 58                      pop eax
   708 00000543 A3[3E050000]            mov [draw_z_string_screenWidth], eax
   709                                  ;param: strAddr
   710 00000548 EB04                    jmp draw_z_string_strAddr$pass
   711 0000054A 00000000                draw_z_string_strAddr: dd 0
   712                                  draw_z_string_strAddr$pass:
   713 0000054E 58                      pop eax
   714 0000054F A3[4A050000]            mov [draw_z_string_strAddr], eax
   715                                  ;param: top
   716 00000554 EB04                    jmp draw_z_string_top$pass
   717 00000556 00000000                draw_z_string_top: dd 0
   718                                  draw_z_string_top$pass:
   719 0000055A 58                      pop eax
   720 0000055B A3[56050000]            mov [draw_z_string_top], eax
   721                                  ;param: left
   722 00000560 EB04                    jmp draw_z_string_left$pass
   723 00000562 00000000                draw_z_string_left: dd 0
   724                                  draw_z_string_left$pass:
   725 00000566 58                      pop eax
   726 00000567 A3[62050000]            mov [draw_z_string_left], eax
   727 0000056C 55                      push ebp
   728 0000056D B801000000              mov eax, 1
   729 00000572 50                      push eax
   730 00000573 EB04                    jmp draw_z_string_i$pass
   731 00000575 00000000                draw_z_string_i: dd 0
   732                                  draw_z_string_i$pass:
   733 00000579 58                      pop eax
   734 0000057A A3[75050000]            mov [draw_z_string_i], eax
   735                                  
   736 0000057F A1[4A050000]            mov eax, [draw_z_string_strAddr]
   737 00000584 50                      push eax
   738 00000585 A1[75050000]            mov eax, [draw_z_string_i]
   739 0000058A 50                      push eax
   740 0000058B 58                      pop eax
   741 0000058C 5B                      pop ebx
   742 0000058D 01D8                    add eax, ebx
   743 0000058F 50                      push eax
   744 00000590 EB04                    jmp draw_z_string_charAddr$pass
   745 00000592 00000000                draw_z_string_charAddr: dd 0
   746                                  draw_z_string_charAddr$pass:
   747 00000596 58                      pop eax
   748 00000597 A3[92050000]            mov [draw_z_string_charAddr], eax
   749                                  
   750 0000059C A1[92050000]            mov eax, [draw_z_string_charAddr]
   751 000005A1 8B18                    mov ebx, [eax]
   752 000005A3 53                      push ebx
   753 000005A4 EB04                    jmp draw_z_string_t_char$pass
   754 000005A6 00000000                draw_z_string_t_char: dd 0
   755                                  draw_z_string_t_char$pass:
   756 000005AA 58                      pop eax
   757 000005AB A3[A6050000]            mov [draw_z_string_t_char], eax
   758                                  
   759 000005B0 A1[A6050000]            mov eax, [draw_z_string_t_char]
   760 000005B5 C1E80C                  shr eax, 12
   761 000005B8 50                      push eax
   762 000005B9 58                      pop eax
   763 000005BA A3[A6050000]            mov [draw_z_string_t_char], eax
   764                                  ;########## draw_z_string_while#r11_$start ##########
   765                                  draw_z_string_while#r11_$start:
   766 000005BF A1[A6050000]            mov eax, [draw_z_string_t_char]
   767 000005C4 8B18                    mov ebx, [eax]
   768 000005C6 53                      push ebx
   769 000005C7 B800000000              mov eax, 0
   770 000005CC 50                      push eax
   771 000005CD 5B                      pop ebx
   772 000005CE 58                      pop eax
   773 000005CF 39D8                    cmp eax, ebx
   774 000005D1 7507                    jne draw_z_string_while#r11_neq#r21$true
   775 000005D3 B800000000              mov eax, 0
   776 000005D8 EB05                    jmp draw_z_string_while#r11_neq#r21$false
   777                                  draw_z_string_while#r11_neq#r21$true:
   778 000005DA B801000000              mov eax, 1
   779                                  draw_z_string_while#r11_neq#r21$false:
   780 000005DF 50                      push eax
   781 000005E0 58                      pop eax
   782 000005E1 83F800                  cmp eax, 0
   783 000005E4 0F8495000000            je draw_z_string_while#r11_$end
   784 000005EA A1[62050000]            mov eax, [draw_z_string_left]
   785 000005EF 50                      push eax
   786 000005F0 A1[75050000]            mov eax, [draw_z_string_i]
   787 000005F5 50                      push eax
   788 000005F6 B808000000              mov eax, 8
   789 000005FB 50                      push eax
   790 000005FC 58                      pop eax
   791 000005FD 5B                      pop ebx
   792 000005FE F7E3                    mul ebx
   793 00000600 50                      push eax
   794 00000601 58                      pop eax
   795 00000602 5B                      pop ebx
   796 00000603 01D8                    add eax, ebx
   797 00000605 50                      push eax
   798 00000606 A1[56050000]            mov eax, [draw_z_string_top]
   799 0000060B 50                      push eax
   800 0000060C B807000000              mov eax, 7
   801 00000611 50                      push eax
   802 00000612 B808000000              mov eax, 8
   803 00000617 50                      push eax
   804 00000618 A1[92050000]            mov eax, [draw_z_string_charAddr]
   805 0000061D 50                      push eax
   806 0000061E A1[3E050000]            mov eax, [draw_z_string_screenWidth]
   807 00000623 50                      push eax
   808 00000624 A1[32050000]            mov eax, [draw_z_string_addrVram]
   809 00000629 50                      push eax
   810 0000062A E8AFFDFFFF              call draw_z_char
   811                                  
   812 0000062F A1[75050000]            mov eax, [draw_z_string_i]
   813 00000634 50                      push eax
   814 00000635 B801000000              mov eax, 1
   815 0000063A 50                      push eax
   816 0000063B 58                      pop eax
   817 0000063C 5B                      pop ebx
   818 0000063D 01D8                    add eax, ebx
   819 0000063F 50                      push eax
   820 00000640 58                      pop eax
   821 00000641 A3[75050000]            mov [draw_z_string_i], eax
   822 00000646 A1[4A050000]            mov eax, [draw_z_string_strAddr]
   823 0000064B 50                      push eax
   824 0000064C A1[75050000]            mov eax, [draw_z_string_i]
   825 00000651 50                      push eax
   826 00000652 58                      pop eax
   827 00000653 5B                      pop ebx
   828 00000654 01D8                    add eax, ebx
   829 00000656 50                      push eax
   830 00000657 58                      pop eax
   831 00000658 A3[92050000]            mov [draw_z_string_charAddr], eax
   832 0000065D A1[92050000]            mov eax, [draw_z_string_charAddr]
   833 00000662 8B18                    mov ebx, [eax]
   834 00000664 53                      push ebx
   835 00000665 58                      pop eax
   836 00000666 A3[A6050000]            mov [draw_z_string_t_char], eax
   837 0000066B A1[A6050000]            mov eax, [draw_z_string_t_char]
   838 00000670 C1E80C                  shr eax, 12
   839 00000673 50                      push eax
   840 00000674 58                      pop eax
   841 00000675 A3[A6050000]            mov [draw_z_string_t_char], eax
   842 0000067A E940FFFFFF              jmp draw_z_string_while#r11_$start
   843                                  draw_z_string_while#r11_$end:
   844                                  ;========== draw_z_string_while#r11_$end ==========
   845                                  
   846 0000067F C3                      ret
   847                                  draw_z_string$pass:
   848                                  ;============[fun end]string=============
   849                                  
   850                                  
   851 00000680 E900010000              jmp font_z_A$pass
   852 00000685 000000000000000000-     font_z_A: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   852 0000068E 000000000000000000-
   852 00000697 000000000000000000-
   852 000006A0 000000000000000000-
   852 000006A9 000000000000000001-
   852 000006B2 000000010000000000-
   852 000006BB 000000000000000000-
   852 000006C4 000000000000000000-
   852 000006CD 010000000000000000-
   852 000006D6 000000010000000000-
   852 000006DF 000000000000000000-
   852 000006E8 000100000000000000-
   852 000006F1 000000000000000000-
   852 000006FA 000000010000000000-
   852 00000703 000000000000010000-
   852 0000070C 000100000001000000-
   852 00000715 010000000100000001-
   852 0000071E 000000000000000000-
   852 00000727 000001000000000000-
   852 00000730 000000000000000000-
   852 00000739 000000000100000000-
   852 00000742 000000000000000100-
   852 0000074B 000000000000000000-
   852 00000754 000000000000000000-
   852 0000075D 010000000000000000-
   852 00000766 000000000000000000-
   852 0000076F 000000000000000000-
   852 00000778 000000000000000000-
   852 00000781 00000000           
   854                                  font_z_A$pass:
   855 00000785 B8[85060000]            mov eax, font_z_A
   856 0000078A A1[89060000]            mov eax, [font_z_A+4]
   857                                  
   858 0000078F E900010000              jmp font_z_B$pass
   859 00000794 000000000000000000-     font_z_B: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   859 0000079D 000000000000000000-
   859 000007A6 000000000000000000-
   859 000007AF 000000000000000000-
   859 000007B8 010000000100000001-
   859 000007C1 000000010000000100-
   859 000007CA 000000000000000000-
   859 000007D3 000000000001000000-
   859 000007DC 000000000000000000-
   859 000007E5 000000000000000100-
   859 000007EE 000000000000000000-
   859 000007F7 000100000001000000-
   859 00000800 010000000100000001-
   859 00000809 000000000000000000-
   859 00000812 000000000000010000-
   859 0000081B 000000000000000000-
   859 00000824 000000000000000001-
   859 0000082D 000000000000000000-
   859 00000836 000001000000000000-
   859 0000083F 000000000000000000-
   859 00000848 000000000100000000-
   859 00000851 000000000000000100-
   859 0000085A 000001000000010000-
   859 00000863 000100000001000000-
   859 0000086C 000000000000000000-
   859 00000875 000000000000000000-
   859 0000087E 000000000000000000-
   859 00000887 000000000000000000-
   859 00000890 00000000           
   861                                  font_z_B$pass:
   862 00000894 B8[94070000]            mov eax, font_z_B
   863 00000899 A1[98070000]            mov eax, [font_z_B+4]
   864                                  
   865 0000089E E900010000              jmp font_z_C$pass
   866 000008A3 000000000000000000-     font_z_C: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   866 000008AC 000000000000000000-
   866 000008B5 000000000000000000-
   866 000008BE 000000000000000000-
   866 000008C7 000000000100000001-
   866 000008D0 000000010000000100-
   866 000008D9 000000000000000000-
   866 000008E2 000000000001000000-
   866 000008EB 000000000000000000-
   866 000008F4 000000000000000100-
   866 000008FD 000000000000000000-
   866 00000906 000100000000000000-
   866 0000090F 000000000000000000-
   866 00000918 000000000000000000-
   866 00000921 000000000000010000-
   866 0000092A 000000000000000000-
   866 00000933 000000000000000000-
   866 0000093C 000000000000000000-
   866 00000945 000001000000000000-
   866 0000094E 000000000000000000-
   866 00000957 000000000100000000-
   866 00000960 000000000000000000-
   866 00000969 000001000000010000-
   866 00000972 000100000001000000-
   866 0000097B 000000000000000000-
   866 00000984 000000000000000000-
   866 0000098D 000000000000000000-
   866 00000996 000000000000000000-
   866 0000099F 00000000           
   868                                  font_z_C$pass:
   869 000009A3 B8[A3080000]            mov eax, font_z_C
   870 000009A8 A1[A7080000]            mov eax, [font_z_C+4]
   871                                  
   872 000009AD E900010000              jmp font_z_D$pass
   873 000009B2 000000000000000000-     font_z_D: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   873 000009BB 000000000000000000-
   873 000009C4 000000000000000000-
   873 000009CD 000000000000000000-
   873 000009D6 010000000100000001-
   873 000009DF 000000010000000100-
   873 000009E8 000000000000000000-
   873 000009F1 000000000001000000-
   873 000009FA 000000000000000000-
   873 00000A03 000000000000000100-
   873 00000A0C 000000000000000000-
   873 00000A15 000100000000000000-
   873 00000A1E 000000000000000000-
   873 00000A27 000000010000000000-
   873 00000A30 000000000000010000-
   873 00000A39 000000000000000000-
   873 00000A42 000000000000000001-
   873 00000A4B 000000000000000000-
   873 00000A54 000001000000000000-
   873 00000A5D 000000000000000000-
   873 00000A66 000000000100000000-
   873 00000A6F 000000000000000100-
   873 00000A78 000001000000010000-
   873 00000A81 000100000001000000-
   873 00000A8A 000000000000000000-
   873 00000A93 000000000000000000-
   873 00000A9C 000000000000000000-
   873 00000AA5 000000000000000000-
   873 00000AAE 00000000           
   875                                  font_z_D$pass:
   876 00000AB2 B8[B2090000]            mov eax, font_z_D
   877 00000AB7 A1[B6090000]            mov eax, [font_z_D+4]
   878                                  
   879 00000ABC E900010000              jmp font_z_E$pass
   880 00000AC1 000000000000000000-     font_z_E: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   880 00000ACA 000000000000000000-
   880 00000AD3 000000000000000000-
   880 00000ADC 000000000000000000-
   880 00000AE5 010000000100000001-
   880 00000AEE 000000010000000100-
   880 00000AF7 000001000000000000-
   880 00000B00 000000000001000000-
   880 00000B09 000000000000000000-
   880 00000B12 000000000000000000-
   880 00000B1B 000000000000000000-
   880 00000B24 000100000001000000-
   880 00000B2D 010000000100000001-
   880 00000B36 000000010000000000-
   880 00000B3F 000000000000010000-
   880 00000B48 000000000000000000-
   880 00000B51 000000000000000000-
   880 00000B5A 000000000000000000-
   880 00000B63 000001000000000000-
   880 00000B6C 000000000000000000-
   880 00000B75 000000000000000000-
   880 00000B7E 000000000000000100-
   880 00000B87 000001000000010000-
   880 00000B90 000100000001000000-
   880 00000B99 010000000000000000-
   880 00000BA2 000000000000000000-
   880 00000BAB 000000000000000000-
   880 00000BB4 000000000000000000-
   880 00000BBD 00000000           
   882                                  font_z_E$pass:
   883 00000BC1 B8[C10A0000]            mov eax, font_z_E
   884 00000BC6 A1[C50A0000]            mov eax, [font_z_E+4]
   885                                  
   886 00000BCB E900010000              jmp font_z_F$pass
   887 00000BD0 000000000000000000-     font_z_F: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   887 00000BD9 000000000000000000-
   887 00000BE2 000000000000000000-
   887 00000BEB 000000000000000000-
   887 00000BF4 010000000100000001-
   887 00000BFD 000000010000000100-
   887 00000C06 000001000000000000-
   887 00000C0F 000000000001000000-
   887 00000C18 000000000000000000-
   887 00000C21 000000000000000000-
   887 00000C2A 000000000000000000-
   887 00000C33 000100000001000000-
   887 00000C3C 010000000100000001-
   887 00000C45 000000000000000000-
   887 00000C4E 000000000000010000-
   887 00000C57 000000000000000000-
   887 00000C60 000000000000000000-
   887 00000C69 000000000000000000-
   887 00000C72 000001000000000000-
   887 00000C7B 000000000000000000-
   887 00000C84 000000000000000000-
   887 00000C8D 000000000000000100-
   887 00000C96 000000000000000000-
   887 00000C9F 000000000000000000-
   887 00000CA8 000000000000000000-
   887 00000CB1 000000000000000000-
   887 00000CBA 000000000000000000-
   887 00000CC3 000000000000000000-
   887 00000CCC 00000000           
   889                                  font_z_F$pass:
   890 00000CD0 B8[D00B0000]            mov eax, font_z_F
   891 00000CD5 A1[D40B0000]            mov eax, [font_z_F+4]
   892                                  
   893 00000CDA E900010000              jmp font_z_G$pass
   894 00000CDF 000000000000000000-     font_z_G: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   894 00000CE8 000000000000000000-
   894 00000CF1 000000000000000000-
   894 00000CFA 000000000000000000-
   894 00000D03 000000000100000001-
   894 00000D0C 000000010000000100-
   894 00000D15 000000000000000000-
   894 00000D1E 000000000001000000-
   894 00000D27 000000000000000000-
   894 00000D30 000000000000000100-
   894 00000D39 000000000000000000-
   894 00000D42 000100000000000000-
   894 00000D4B 000000000000000000-
   894 00000D54 000000000000000000-
   894 00000D5D 000000000000010000-
   894 00000D66 000000000000000000-
   894 00000D6F 000000000100000001-
   894 00000D78 000000000000000000-
   894 00000D81 000001000000000000-
   894 00000D8A 000000000000000000-
   894 00000D93 000000000100000000-
   894 00000D9C 000000000000000000-
   894 00000DA5 000001000000010000-
   894 00000DAE 000100000001000000-
   894 00000DB7 010000000000000000-
   894 00000DC0 000000000000000000-
   894 00000DC9 000000000000000000-
   894 00000DD2 000000000000000000-
   894 00000DDB 00000000           
   896                                  font_z_G$pass:
   897 00000DDF B8[DF0C0000]            mov eax, font_z_G
   898 00000DE4 A1[E30C0000]            mov eax, [font_z_G+4]
   899                                  
   900 00000DE9 E900010000              jmp font_z_H$pass
   901 00000DEE 000000000000000000-     font_z_H: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   901 00000DF7 000000000000000000-
   901 00000E00 000000000000000000-
   901 00000E09 000000000000000000-
   901 00000E12 010000000000000000-
   901 00000E1B 000000000000000000-
   901 00000E24 000001000000000000-
   901 00000E2D 000000000001000000-
   901 00000E36 000000000000000000-
   901 00000E3F 000000000000000100-
   901 00000E48 000000000000000000-
   901 00000E51 000100000001000000-
   901 00000E5A 010000000100000001-
   901 00000E63 000000010000000000-
   901 00000E6C 000000000000010000-
   901 00000E75 000000000000000000-
   901 00000E7E 000000000000000001-
   901 00000E87 000000000000000000-
   901 00000E90 000001000000000000-
   901 00000E99 000000000000000000-
   901 00000EA2 000000000100000000-
   901 00000EAB 000000000000000100-
   901 00000EB4 000000000000000000-
   901 00000EBD 000000000000000000-
   901 00000EC6 010000000000000000-
   901 00000ECF 000000000000000000-
   901 00000ED8 000000000000000000-
   901 00000EE1 000000000000000000-
   901 00000EEA 00000000           
   903                                  font_z_H$pass:
   904 00000EEE B8[EE0D0000]            mov eax, font_z_H
   905 00000EF3 A1[F20D0000]            mov eax, [font_z_H+4]
   906                                  
   907 00000EF8 E900010000              jmp font_z_I$pass
   908 00000EFD 000000000000000000-     font_z_I: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   908 00000F06 000000000000000000-
   908 00000F0F 000000000000000000-
   908 00000F18 000000000000000000-
   908 00000F21 000000000100000001-
   908 00000F2A 000000010000000000-
   908 00000F33 000000000000000000-
   908 00000F3C 000000000000000000-
   908 00000F45 000000000100000000-
   908 00000F4E 000000000000000000-
   908 00000F57 000000000000000000-
   908 00000F60 000000000000000000-
   908 00000F69 010000000000000000-
   908 00000F72 000000000000000000-
   908 00000F7B 000000000000000000-
   908 00000F84 000000000001000000-
   908 00000F8D 000000000000000000-
   908 00000F96 000000000000000000-
   908 00000F9F 000000000000000000-
   908 00000FA8 000100000000000000-
   908 00000FB1 000000000000000000-
   908 00000FBA 000000000000000000-
   908 00000FC3 000001000000010000-
   908 00000FCC 000100000000000000-
   908 00000FD5 000000000000000000-
   908 00000FDE 000000000000000000-
   908 00000FE7 000000000000000000-
   908 00000FF0 000000000000000000-
   908 00000FF9 00000000           
   910                                  font_z_I$pass:
   911 00000FFD B8[FD0E0000]            mov eax, font_z_I
   912 00001002 A1[010F0000]            mov eax, [font_z_I+4]
   913                                  
   914 00001007 E900010000              jmp font_z_J$pass
   915 0000100C 000000000000000000-     font_z_J: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   915 00001015 000000000000000000-
   915 0000101E 000000000000000000-
   915 00001027 000000000000000000-
   915 00001030 000000000100000001-
   915 00001039 000000010000000100-
   915 00001042 000000000000000000-
   915 0000104B 000000000000000000-
   915 00001054 000000000000000000-
   915 0000105D 000000010000000000-
   915 00001066 000000000000000000-
   915 0000106F 000000000000000000-
   915 00001078 000000000000000001-
   915 00001081 000000000000000000-
   915 0000108A 000000000000000000-
   915 00001093 000000000000000000-
   915 0000109C 000000000100000000-
   915 000010A5 000000000000000000-
   915 000010AE 000000000000000000-
   915 000010B7 000100000000000000-
   915 000010C0 010000000000000000-
   915 000010C9 000000000000000000-
   915 000010D2 000000000000000000-
   915 000010DB 000100000000000000-
   915 000010E4 000000000000000000-
   915 000010ED 000000000000000000-
   915 000010F6 000000000000000000-
   915 000010FF 000000000000000000-
   915 00001108 00000000           
   917                                  font_z_J$pass:
   918 0000110C B8[0C100000]            mov eax, font_z_J
   919 00001111 A1[10100000]            mov eax, [font_z_J+4]
   920                                  
   921 00001116 E900010000              jmp font_z_K$pass
   922 0000111B 000000000000000000-     font_z_K: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   922 00001124 000000000000000000-
   922 0000112D 000000000000000000-
   922 00001136 000000000000000000-
   922 0000113F 010000000000000000-
   922 00001148 000000010000000100-
   922 00001151 000000000000000000-
   922 0000115A 000000000001000000-
   922 00001163 000000000100000001-
   922 0000116C 000000000000000000-
   922 00001175 000000000000000000-
   922 0000117E 000100000001000000-
   922 00001187 010000000000000000-
   922 00001190 000000000000000000-
   922 00001199 000000000000010000-
   922 000011A2 000000000001000000-
   922 000011AB 010000000000000000-
   922 000011B4 000000000000000000-
   922 000011BD 000001000000000000-
   922 000011C6 000000000001000000-
   922 000011CF 010000000000000000-
   922 000011D8 000000000000000100-
   922 000011E1 000000000000000000-
   922 000011EA 000000000001000000-
   922 000011F3 010000000000000000-
   922 000011FC 000000000000000000-
   922 00001205 000000000000000000-
   922 0000120E 000000000000000000-
   922 00001217 00000000           
   924                                  font_z_K$pass:
   925 0000121B B8[1B110000]            mov eax, font_z_K
   926 00001220 A1[1F110000]            mov eax, [font_z_K+4]
   927                                  
   928 00001225 E900010000              jmp font_z_L$pass
   929 0000122A 000000000000000000-     font_z_L: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   929 00001233 000000000000000000-
   929 0000123C 000000000000000000-
   929 00001245 000000000000000000-
   929 0000124E 000000000100000000-
   929 00001257 000000000000000000-
   929 00001260 000000000000000000-
   929 00001269 000000000000000000-
   929 00001272 010000000000000000-
   929 0000127B 000000000000000000-
   929 00001284 000000000000000000-
   929 0000128D 000000000001000000-
   929 00001296 000000000000000000-
   929 0000129F 000000000000000000-
   929 000012A8 000000000000000000-
   929 000012B1 000100000000000000-
   929 000012BA 000000000000000000-
   929 000012C3 000000000000000000-
   929 000012CC 000000000000010000-
   929 000012D5 000000000000000000-
   929 000012DE 000000000000000000-
   929 000012E7 000000000000000000-
   929 000012F0 000001000000010000-
   929 000012F9 000100000001000000-
   929 00001302 000000000000000000-
   929 0000130B 000000000000000000-
   929 00001314 000000000000000000-
   929 0000131D 000000000000000000-
   929 00001326 00000000           
   931                                  font_z_L$pass:
   932 0000132A B8[2A120000]            mov eax, font_z_L
   933 0000132F A1[2E120000]            mov eax, [font_z_L+4]
   934                                  
   935 00001334 E900010000              jmp font_z_M$pass
   936 00001339 000000000000000000-     font_z_M: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   936 00001342 000000000000000000-
   936 0000134B 000000000000000000-
   936 00001354 000000000000000000-
   936 0000135D 010000000000000000-
   936 00001366 000000000000000000-
   936 0000136F 000001000000000000-
   936 00001378 000000000001000000-
   936 00001381 010000000000000000-
   936 0000138A 000000010000000100-
   936 00001393 000000000000000000-
   936 0000139C 000100000000000000-
   936 000013A5 010000000100000000-
   936 000013AE 000000010000000000-
   936 000013B7 000000000000010000-
   936 000013C0 000000000000000000-
   936 000013C9 000000000000000001-
   936 000013D2 000000000000000000-
   936 000013DB 000001000000000000-
   936 000013E4 000000000000000000-
   936 000013ED 000000000100000000-
   936 000013F6 000000000000000100-
   936 000013FF 000000000000000000-
   936 00001408 000000000000000000-
   936 00001411 010000000000000000-
   936 0000141A 000000000000000000-
   936 00001423 000000000000000000-
   936 0000142C 000000000000000000-
   936 00001435 00000000           
   938                                  font_z_M$pass:
   939 00001439 B8[39130000]            mov eax, font_z_M
   940 0000143E A1[3D130000]            mov eax, [font_z_M+4]
   941                                  
   942 00001443 E900010000              jmp font_z_N$pass
   943 00001448 000000000000000000-     font_z_N: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   943 00001451 000000000000000000-
   943 0000145A 000000000000000000-
   943 00001463 000000000000000000-
   943 0000146C 010000000000000000-
   943 00001475 000000000000000000-
   943 0000147E 000001000000000000-
   943 00001487 000000000001000000-
   943 00001490 010000000000000000-
   943 00001499 000000000000000100-
   943 000014A2 000000000000000000-
   943 000014AB 000100000000000000-
   943 000014B4 010000000000000000-
   943 000014BD 000000010000000000-
   943 000014C6 000000000000010000-
   943 000014CF 000000000000000000-
   943 000014D8 010000000000000001-
   943 000014E1 000000000000000000-
   943 000014EA 000001000000000000-
   943 000014F3 000000000000000000-
   943 000014FC 010000000100000000-
   943 00001505 000000000000000100-
   943 0000150E 000000000000000000-
   943 00001517 000000000000000000-
   943 00001520 010000000000000000-
   943 00001529 000000000000000000-
   943 00001532 000000000000000000-
   943 0000153B 000000000000000000-
   943 00001544 00000000           
   945                                  font_z_N$pass:
   946 00001548 B8[48140000]            mov eax, font_z_N
   947 0000154D A1[4C140000]            mov eax, [font_z_N+4]
   948                                  
   949 00001552 E900010000              jmp font_z_O$pass
   950 00001557 000000000000000000-     font_z_O: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   950 00001560 000000000000000000-
   950 00001569 000000000000000000-
   950 00001572 000000000000000000-
   950 0000157B 010000000100000001-
   950 00001584 000000010000000100-
   950 0000158D 000001000000000000-
   950 00001596 000000000001000000-
   950 0000159F 000000000000000000-
   950 000015A8 000000000000000100-
   950 000015B1 000000000000000000-
   950 000015BA 000100000000000000-
   950 000015C3 000000000000000000-
   950 000015CC 000000010000000000-
   950 000015D5 000000000000010000-
   950 000015DE 000000000000000000-
   950 000015E7 000000000000000001-
   950 000015F0 000000000000000000-
   950 000015F9 000001000000000000-
   950 00001602 000000000000000000-
   950 0000160B 000000000100000000-
   950 00001614 000000000000000100-
   950 0000161D 000001000000010000-
   950 00001626 000100000001000000-
   950 0000162F 010000000000000000-
   950 00001638 000000000000000000-
   950 00001641 000000000000000000-
   950 0000164A 000000000000000000-
   950 00001653 00000000           
   952                                  font_z_O$pass:
   953 00001657 B8[57150000]            mov eax, font_z_O
   954 0000165C A1[5B150000]            mov eax, [font_z_O+4]
   955                                  
   956 00001661 E900010000              jmp font_z_P$pass
   957 00001666 000000000000000000-     font_z_P: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   957 0000166F 000000000000000000-
   957 00001678 000000000000000000-
   957 00001681 000000000000000000-
   957 0000168A 000000000100000001-
   957 00001693 000000010000000000-
   957 0000169C 000000000000000000-
   957 000016A5 000000000000000000-
   957 000016AE 010000000000000000-
   957 000016B7 000000010000000000-
   957 000016C0 000000000000000000-
   957 000016C9 000000000001000000-
   957 000016D2 000000000000000001-
   957 000016DB 000000000000000000-
   957 000016E4 000000000000000000-
   957 000016ED 000100000001000000-
   957 000016F6 010000000000000000-
   957 000016FF 000000000000000000-
   957 00001708 000000000000010000-
   957 00001711 000000000000000000-
   957 0000171A 000000000000000000-
   957 00001723 000000000000000000-
   957 0000172C 000001000000000000-
   957 00001735 000000000000000000-
   957 0000173E 000000000000000000-
   957 00001747 000000000000000000-
   957 00001750 000000000000000000-
   957 00001759 000000000000000000-
   957 00001762 00000000           
   959                                  font_z_P$pass:
   960 00001766 B8[66160000]            mov eax, font_z_P
   961 0000176B A1[6A160000]            mov eax, [font_z_P+4]
   962                                  
   963 00001770 E900010000              jmp font_z_Q$pass
   964 00001775 000000000000000000-     font_z_Q: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   964 0000177E 000000000000000000-
   964 00001787 000000000000000000-
   964 00001790 000000000000000000-
   964 00001799 000000000000000001-
   964 000017A2 000000010000000000-
   964 000017AB 000000000000000000-
   964 000017B4 000000000000000000-
   964 000017BD 010000000000000000-
   964 000017C6 000000010000000000-
   964 000017CF 000000000000000000-
   964 000017D8 000100000000000000-
   964 000017E1 000000000000000000-
   964 000017EA 000000010000000000-
   964 000017F3 000000000000010000-
   964 000017FC 000000000000000000-
   964 00001805 010000000000000001-
   964 0000180E 000000000000000000-
   964 00001817 000000000000010000-
   964 00001820 000000000000000000-
   964 00001829 010000000000000000-
   964 00001832 000000000000000000-
   964 0000183B 000000000000010000-
   964 00001844 000100000000000000-
   964 0000184D 010000000000000000-
   964 00001856 000000000000000000-
   964 0000185F 000000000000000000-
   964 00001868 000000000000000000-
   964 00001871 00000000           
   966                                  font_z_Q$pass:
   967 00001875 B8[75170000]            mov eax, font_z_Q
   968 0000187A A1[79170000]            mov eax, [font_z_Q+4]
   969                                  
   970 0000187F E900010000              jmp font_z_R$pass
   971 00001884 000000000000000000-     font_z_R: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   971 0000188D 000000000000000000-
   971 00001896 000000000000000000-
   971 0000189F 000000000000000000-
   971 000018A8 000000000100000001-
   971 000018B1 000000010000000000-
   971 000018BA 000000000000000000-
   971 000018C3 000000000000000000-
   971 000018CC 010000000000000000-
   971 000018D5 000000010000000000-
   971 000018DE 000000000000000000-
   971 000018E7 000000000001000000-
   971 000018F0 000000000000000001-
   971 000018F9 000000000000000000-
   971 00001902 000000000000000000-
   971 0000190B 000100000001000000-
   971 00001914 010000000000000000-
   971 0000191D 000000000000000000-
   971 00001926 000000000000010000-
   971 0000192F 000000000000000000-
   971 00001938 010000000000000000-
   971 00001941 000000000000000000-
   971 0000194A 000001000000000000-
   971 00001953 000000000000000000-
   971 0000195C 010000000000000000-
   971 00001965 000000000000000000-
   971 0000196E 000000000000000000-
   971 00001977 000000000000000000-
   971 00001980 00000000           
   973                                  font_z_R$pass:
   974 00001984 B8[84180000]            mov eax, font_z_R
   975 00001989 A1[88180000]            mov eax, [font_z_R+4]
   976                                  
   977 0000198E E900010000              jmp font_z_S$pass
   978 00001993 000000000000000000-     font_z_S: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   978 0000199C 000000000000000000-
   978 000019A5 000000000000000000-
   978 000019AE 000000000000000000-
   978 000019B7 000000000100000001-
   978 000019C0 000000010000000100-
   978 000019C9 000000000000000000-
   978 000019D2 000000000001000000-
   978 000019DB 000000000000000000-
   978 000019E4 000000000000000100-
   978 000019ED 000000000000000000-
   978 000019F6 000000000001000000-
   978 000019FF 010000000000000000-
   978 00001A08 000000000000000000-
   978 00001A11 000000000000000000-
   978 00001A1A 000000000000000000-
   978 00001A23 010000000100000000-
   978 00001A2C 000000000000000000-
   978 00001A35 000001000000000000-
   978 00001A3E 000000000000000000-
   978 00001A47 000000000100000000-
   978 00001A50 000000000000000000-
   978 00001A59 000001000000010000-
   978 00001A62 000100000001000000-
   978 00001A6B 000000000000000000-
   978 00001A74 000000000000000000-
   978 00001A7D 000000000000000000-
   978 00001A86 000000000000000000-
   978 00001A8F 00000000           
   980                                  font_z_S$pass:
   981 00001A93 B8[93190000]            mov eax, font_z_S
   982 00001A98 A1[97190000]            mov eax, [font_z_S+4]
   983                                  
   984 00001A9D E900010000              jmp font_z_T$pass
   985 00001AA2 000000000000000000-     font_z_T: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   985 00001AAB 000000000000000000-
   985 00001AB4 000000000000000000-
   985 00001ABD 000000000000000000-
   985 00001AC6 010000000100000001-
   985 00001ACF 000000010000000100-
   985 00001AD8 000000000000000000-
   985 00001AE1 000000000000000000-
   985 00001AEA 000000000100000000-
   985 00001AF3 000000000000000000-
   985 00001AFC 000000000000000000-
   985 00001B05 000000000000000000-
   985 00001B0E 010000000000000000-
   985 00001B17 000000000000000000-
   985 00001B20 000000000000000000-
   985 00001B29 000000000001000000-
   985 00001B32 000000000000000000-
   985 00001B3B 000000000000000000-
   985 00001B44 000000000000000000-
   985 00001B4D 000100000000000000-
   985 00001B56 000000000000000000-
   985 00001B5F 000000000000000000-
   985 00001B68 000000000000010000-
   985 00001B71 000000000000000000-
   985 00001B7A 000000000000000000-
   985 00001B83 000000000000000000-
   985 00001B8C 000000000000000000-
   985 00001B95 000000000000000000-
   985 00001B9E 00000000           
   987                                  font_z_T$pass:
   988 00001BA2 B8[A21A0000]            mov eax, font_z_T
   989 00001BA7 A1[A61A0000]            mov eax, [font_z_T+4]
   990                                  
   991 00001BAC E900010000              jmp font_z_U$pass
   992 00001BB1 000000000000000000-     font_z_U: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   992 00001BBA 000000000000000000-
   992 00001BC3 000000000000000000-
   992 00001BCC 000000000000000000-
   992 00001BD5 010000000000000000-
   992 00001BDE 000000000000000000-
   992 00001BE7 000001000000000000-
   992 00001BF0 000000000001000000-
   992 00001BF9 000000000000000000-
   992 00001C02 000000000000000100-
   992 00001C0B 000000000000000000-
   992 00001C14 000100000000000000-
   992 00001C1D 000000000000000000-
   992 00001C26 000000010000000000-
   992 00001C2F 000000000000010000-
   992 00001C38 000000000000000000-
   992 00001C41 000000000000000001-
   992 00001C4A 000000000000000000-
   992 00001C53 000000000000010000-
   992 00001C5C 000000000000000000-
   992 00001C65 010000000000000000-
   992 00001C6E 000000000000000000-
   992 00001C77 000000000000010000-
   992 00001C80 000100000000000000-
   992 00001C89 000000000000000000-
   992 00001C92 000000000000000000-
   992 00001C9B 000000000000000000-
   992 00001CA4 000000000000000000-
   992 00001CAD 00000000           
   994                                  font_z_U$pass:
   995 00001CB1 B8[B11B0000]            mov eax, font_z_U
   996 00001CB6 A1[B51B0000]            mov eax, [font_z_U+4]
   997                                  
   998 00001CBB E900010000              jmp font_z_V$pass
   999 00001CC0 000000000000000000-     font_z_V: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   999 00001CC9 000000000000000000-
   999 00001CD2 000000000000000000-
   999 00001CDB 000000000000000000-
   999 00001CE4 010000000000000000-
   999 00001CED 000000000000000000-
   999 00001CF6 000001000000000000-
   999 00001CFF 000000000001000000-
   999 00001D08 000000000000000000-
   999 00001D11 000000000000000100-
   999 00001D1A 000000000000000000-
   999 00001D23 000000000001000000-
   999 00001D2C 000000000000000001-
   999 00001D35 000000000000000000-
   999 00001D3E 000000000000000000-
   999 00001D47 000100000000000000-
   999 00001D50 000000000100000000-
   999 00001D59 000000000000000000-
   999 00001D62 000000000000000000-
   999 00001D6B 000100000001000000-
   999 00001D74 000000000000000000-
   999 00001D7D 000000000000000000-
   999 00001D86 000000000000010000-
   999 00001D8F 000100000000000000-
   999 00001D98 000000000000000000-
   999 00001DA1 000000000000000000-
   999 00001DAA 000000000000000000-
   999 00001DB3 000000000000000000-
   999 00001DBC 00000000           
  1001                                  font_z_V$pass:
  1002 00001DC0 B8[C01C0000]            mov eax, font_z_V
  1003 00001DC5 A1[C41C0000]            mov eax, [font_z_V+4]
  1004                                  
  1005 00001DCA E900010000              jmp font_z_W$pass
  1006 00001DCF 000000000000000000-     font_z_W: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  1006 00001DD8 000000000000000000-
  1006 00001DE1 000000000000000000-
  1006 00001DEA 000000000000000000-
  1006 00001DF3 010000000000000000-
  1006 00001DFC 000000000000000000-
  1006 00001E05 000001000000000000-
  1006 00001E0E 000000000001000000-
  1006 00001E17 000000000000000000-
  1006 00001E20 000000000000000100-
  1006 00001E29 000000000000000000-
  1006 00001E32 000100000000000000-
  1006 00001E3B 000000000000000000-
  1006 00001E44 000000010000000000-
  1006 00001E4D 000000000000010000-
  1006 00001E56 000000000001000000-
  1006 00001E5F 010000000000000001-
  1006 00001E68 000000000000000000-
  1006 00001E71 000001000000010000-
  1006 00001E7A 000000000000000000-
  1006 00001E83 010000000100000000-
  1006 00001E8C 000000000000000100-
  1006 00001E95 000000000000000000-
  1006 00001E9E 000000000000000000-
  1006 00001EA7 010000000000000000-
  1006 00001EB0 000000000000000000-
  1006 00001EB9 000000000000000000-
  1006 00001EC2 000000000000000000-
  1006 00001ECB 00000000           
  1008                                  font_z_W$pass:
  1009 00001ECF B8[CF1D0000]            mov eax, font_z_W
  1010 00001ED4 A1[D31D0000]            mov eax, [font_z_W+4]
  1011                                  
  1012 00001ED9 E900010000              jmp font_z_X$pass
  1013 00001EDE 000000000000000000-     font_z_X: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  1013 00001EE7 000000000000000000-
  1013 00001EF0 000000000000000000-
  1013 00001EF9 000000000000000000-
  1013 00001F02 010000000000000000-
  1013 00001F0B 000000000000000000-
  1013 00001F14 000001000000000000-
  1013 00001F1D 000000000000000000-
  1013 00001F26 010000000000000000-
  1013 00001F2F 000000010000000000-
  1013 00001F38 000000000000000000-
  1013 00001F41 000000000000000000-
  1013 00001F4A 010000000100000000-
  1013 00001F53 000000000000000000-
  1013 00001F5C 000000000000000000-
  1013 00001F65 000000000001000000-
  1013 00001F6E 010000000000000000-
  1013 00001F77 000000000000000000-
  1013 00001F80 000000000000010000-
  1013 00001F89 000000000000000000-
  1013 00001F92 010000000000000000-
  1013 00001F9B 000000000000000100-
  1013 00001FA4 000000000000000000-
  1013 00001FAD 000000000000000000-
  1013 00001FB6 010000000000000000-
  1013 00001FBF 000000000000000000-
  1013 00001FC8 000000000000000000-
  1013 00001FD1 000000000000000000-
  1013 00001FDA 00000000           
  1015                                  font_z_X$pass:
  1016 00001FDE B8[DE1E0000]            mov eax, font_z_X
  1017 00001FE3 A1[E21E0000]            mov eax, [font_z_X+4]
  1018                                  
  1019 00001FE8 E900010000              jmp font_z_Y$pass
  1020 00001FED 000000000000000000-     font_z_Y: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  1020 00001FF6 000000000000000000-
  1020 00001FFF 000000000000000000-
  1020 00002008 000000000000000000-
  1020 00002011 010000000000000000-
  1020 0000201A 000000000000000100-
  1020 00002023 000000000000000000-
  1020 0000202C 000000000000000000-
  1020 00002035 010000000000000001-
  1020 0000203E 000000000000000000-
  1020 00002047 000000000000000000-
  1020 00002050 000000000000000000-
  1020 00002059 010000000000000000-
  1020 00002062 000000000000000000-
  1020 0000206B 000000000000000000-
  1020 00002074 000000000001000000-
  1020 0000207D 000000000000000000-
  1020 00002086 000000000000000000-
  1020 0000208F 000000000000000000-
  1020 00002098 000100000000000000-
  1020 000020A1 000000000000000000-
  1020 000020AA 000000000000000000-
  1020 000020B3 000000000000010000-
  1020 000020BC 000000000000000000-
  1020 000020C5 000000000000000000-
  1020 000020CE 000000000000000000-
  1020 000020D7 000000000000000000-
  1020 000020E0 000000000000000000-
  1020 000020E9 00000000           
  1022                                  font_z_Y$pass:
  1023 000020ED B8[ED1F0000]            mov eax, font_z_Y
  1024 000020F2 A1[F11F0000]            mov eax, [font_z_Y+4]
  1025                                  
  1026 000020F7 E900010000              jmp font_z_Z$pass
  1027 000020FC 000000000000000000-     font_z_Z: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  1027 00002105 000000000000000000-
  1027 0000210E 000000000000000000-
  1027 00002117 000000000000000000-
  1027 00002120 010000000100000001-
  1027 00002129 000000010000000100-
  1027 00002132 000001000000000000-
  1027 0000213B 000000000000000000-
  1027 00002144 000000000000000000-
  1027 0000214D 000000010000000000-
  1027 00002156 000000000000000000-
  1027 0000215F 000000000000000000-
  1027 00002168 000000000100000000-
  1027 00002171 000000000000000000-
  1027 0000217A 000000000000000000-
  1027 00002183 000000000001000000-
  1027 0000218C 000000000000000000-
  1027 00002195 000000000000000000-
  1027 0000219E 000000000000010000-
  1027 000021A7 000000000000000000-
  1027 000021B0 000000000000000000-
  1027 000021B9 000000000000000100-
  1027 000021C2 000001000000010000-
  1027 000021CB 000100000001000000-
  1027 000021D4 010000000000000000-
  1027 000021DD 000000000000000000-
  1027 000021E6 000000000000000000-
  1027 000021EF 000000000000000000-
  1027 000021F8 00000000           
  1029                                  font_z_Z$pass:
  1030 000021FC B8[FC200000]            mov eax, font_z_Z
  1031 00002201 A1[00210000]            mov eax, [font_z_Z+4]
  1032                                  
  1033 00002206 E900010000              jmp font_z_question$pass
  1034 0000220B 000000000000000000-     font_z_question: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 
  1034 00002214 000000000000000000-
  1034 0000221D 000000000000000000-
  1034 00002226 000000000000000000-
  1034 0000222F 000000000100000001-
  1034 00002238 000000010000000100-
  1034 00002241 000000000000000000-
  1034 0000224A 000000000001000000-
  1034 00002253 000000000000000000-
  1034 0000225C 000000000000000100-
  1034 00002265 000000000000000000-
  1034 0000226E 000000000000000000-
  1034 00002277 000000000000000001-
  1034 00002280 000000000000000000-
  1034 00002289 000000000000000000-
  1034 00002292 000000000000000000-
  1034 0000229B 010000000000000000-
  1034 000022A4 000000000000000000-
  1034 000022AD 000000000000000000-
  1034 000022B6 000000000001000000-
  1034 000022BF 000000000000000000-
  1034 000022C8 000000000000000000-
  1034 000022D1 000000000000000000-
  1034 000022DA 000000000000000000-
  1034 000022E3 000000000000000000-
  1034 000022EC 000000000000000000-
  1034 000022F5 000000000000010000-
  1034 000022FE 000000000000000000-
  1034 00002307 00000000           
  1036                                  font_z_question$pass:
  1037 0000230B B8[0B220000]            mov eax, font_z_question
  1038 00002310 A1[0F220000]            mov eax, [font_z_question+4]
  1039                                  
  1040 00002315 E900010000              jmp font_z_space$pass
  1041 0000231A 000000000000000000-     font_z_space: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  1041 00002323 000000000000000000-
  1041 0000232C 000000000000000000-
  1041 00002335 000000000000000000-
  1041 0000233E 000000000000000000-
  1041 00002347 000000000000000000-
  1041 00002350 000000000000000000-
  1041 00002359 000000000000000000-
  1041 00002362 000000000000000000-
  1041 0000236B 000000000000000000-
  1041 00002374 000000000000000000-
  1041 0000237D 000000000000000000-
  1041 00002386 000000000000000000-
  1041 0000238F 000000000000000000-
  1041 00002398 000000000000000000-
  1041 000023A1 000000000000000000-
  1041 000023AA 000000000000000000-
  1041 000023B3 000000000000000000-
  1041 000023BC 000000000000000000-
  1041 000023C5 000000000000000000-
  1041 000023CE 000000000000000000-
  1041 000023D7 000000000000000000-
  1041 000023E0 000000000000000000-
  1041 000023E9 000000000000000000-
  1041 000023F2 000000000000000000-
  1041 000023FB 000000000000000000-
  1041 00002404 000000000000000000-
  1041 0000240D 000000000000000000-
  1041 00002416 00000000           
  1043                                  font_z_space$pass:
  1044 0000241A B8[1A230000]            mov eax, font_z_space
  1045 0000241F A1[1E230000]            mov eax, [font_z_space+4]
  1046                                  
  1047 00002424 E900010000              jmp font_z_add$pass
  1048 00002429 000000000000000000-     font_z_add: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  1048 00002432 000000000000000000-
  1048 0000243B 000000000000000000-
  1048 00002444 000000000000000000-
  1048 0000244D 000000000000000001-
  1048 00002456 000000010000000000-
  1048 0000245F 000000000000000000-
  1048 00002468 000000000000000000-
  1048 00002471 000000000100000001-
  1048 0000247A 000000000000000000-
  1048 00002483 000000000000000000-
  1048 0000248C 000100000001000000-
  1048 00002495 010000000100000001-
  1048 0000249E 000000010000000000-
  1048 000024A7 000000000000010000-
  1048 000024B0 000100000001000000-
  1048 000024B9 010000000100000001-
  1048 000024C2 000000000000000000-
  1048 000024CB 000000000000000000-
  1048 000024D4 000100000001000000-
  1048 000024DD 000000000000000000-
  1048 000024E6 000000000000000000-
  1048 000024EF 000000000000010000-
  1048 000024F8 000100000000000000-
  1048 00002501 000000000000000000-
  1048 0000250A 000000000000000000-
  1048 00002513 000000000000000000-
  1048 0000251C 000000000000000000-
  1048 00002525 00000000           
  1050                                  font_z_add$pass:
  1051 00002529 B8[29240000]            mov eax, font_z_add
  1052 0000252E A1[2D240000]            mov eax, [font_z_add+4]
  1053                                  
  1054 00002533 E900010000              jmp font_z_sub$pass
  1055 00002538 000000000000000000-     font_z_sub: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  1055 00002541 000000000000000000-
  1055 0000254A 000000000000000000-
  1055 00002553 000000000000000000-
  1055 0000255C 000000000000000000-
  1055 00002565 000000000000000000-
  1055 0000256E 000000000000000000-
  1055 00002577 000000000000000000-
  1055 00002580 000000000000000000-
  1055 00002589 000000000000000000-
  1055 00002592 000000000000000000-
  1055 0000259B 000100000001000000-
  1055 000025A4 010000000100000001-
  1055 000025AD 000000010000000000-
  1055 000025B6 000000000000010000-
  1055 000025BF 000100000001000000-
  1055 000025C8 010000000100000001-
  1055 000025D1 000000000000000000-
  1055 000025DA 000000000000000000-
  1055 000025E3 000000000000000000-
  1055 000025EC 000000000000000000-
  1055 000025F5 000000000000000000-
  1055 000025FE 000000000000000000-
  1055 00002607 000000000000000000-
  1055 00002610 000000000000000000-
  1055 00002619 000000000000000000-
  1055 00002622 000000000000000000-
  1055 0000262B 000000000000000000-
  1055 00002634 00000000           
  1057                                  font_z_sub$pass:
  1058 00002638 B8[38250000]            mov eax, font_z_sub
  1059 0000263D A1[3C250000]            mov eax, [font_z_sub+4]
  1060                                  
  1061 00002642 E9A00F0000              jmp font_z_screen_buf$pass
  1062 00002647 000000002000000020-     font_z_screen_buf: dd 0 32, 32, 32, 32, 33, 34, 35, 36, 37, 38, 39, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, ...
  1062 00002650 000000200000002100-
  1062 00002659 000022000000230000-
  1062 00002662 002400000025000000-
  1062 0000266B 260000002700000020-
  1062 00002674 000000200000002000-
  1062 0000267D 000020000000200000-
  1062 00002686 002000000020000000-
  1062 0000268F 200000002000000020-
  1062 00002698 000000200000002000-
  1062 000026A1 000020000000200000-
  1062 000026AA 002000000020000000-
  1062 000026B3 200000002000000020-
  1062 000026BC 000000200000002000-
  1062 000026C5 000020000000200000-
  1062 000026CE 002000000020000000-
  1062 000026D7 200000002000000020-
  1062 000026E0 000000200000002000-
  1062 000026E9 000020000000200000-
  1062 000026F2 002000000020000000-
  1062 000026FB 200000002000000020-
  1062 00002704 000000200000002000-
  1062 0000270D 000020000000200000-
  1062 00002716 002000000020000000-
  1062 0000271F 200000002000000020-
  1062 00002728 000000200000002000-
  1062 00002731 000020000000200000-
  1062 0000273A 002000000020000000-
  1062 00002743 200000002000000020-
  1062 0000274C 000000200000002000-
  1062 00002755 000020000000200000-
  1062 0000275E 002000000020000000-
  1062 00002767 200000002000000020-
  1062 00002770 000000200000002000-
  1062 00002779 000020000000200000-
  1062 00002782 002000000020000000-
  1062 0000278B 200000002000000020-
  1062 00002794 000000200000002000-
  1062 0000279D 000020000000200000-
  1062 000027A6 002000000020000000-
  1062 000027AF 200000002000000020-
  1062 000027B8 000000200000002000-
  1062 000027C1 000020000000200000-
  1062 000027CA 002000000020000000-
  1062 000027D3 200000002000000020-
  1062 000027DC 000000200000002000-
  1062 000027E5 000020000000200000-
  1062 000027EE 002000000020000000-
  1062 000027F7 200000002000000020-
  1062 00002800 000000200000002000-
  1062 00002809 000020000000200000-
  1062 00002812 002000000020000000-
  1062 0000281B 200000002000000020-
  1062 00002824 000000200000002000-
  1062 0000282D 000020000000200000-
  1062 00002836 002000000020000000-
  1062 0000283F 200000002000000020-
  1062 00002848 000000200000002000-
  1062 00002851 000020000000200000-
  1062 0000285A 002000000020000000-
  1062 00002863 200000002000000020-
  1062 0000286C 000000200000002000-
  1062 00002875 000020000000200000-
  1062 0000287E 002000000020000000-
  1062 00002887 200000002000000020-
  1062 00002890 000000200000002000-
  1062 00002899 000020000000200000-
  1062 000028A2 002000000020000000-
  1062 000028AB 200000002000000020-
  1062 000028B4 000000200000002000-
  1062 000028BD 000020000000200000-
  1062 000028C6 002000000020000000-
  1062 000028CF 200000002000000020-
  1062 000028D8 000000200000002000-
  1062 000028E1 000020000000200000-
  1062 000028EA 002000000020000000-
  1062 000028F3 200000002000000020-
  1062 000028FC 000000200000002000-
  1062 00002905 000020000000200000-
  1062 0000290E 002000000020000000-
  1062 00002917 200000002000000020-
  1062 00002920 000000200000002000-
  1062 00002929 000020000000200000-
  1062 00002932 002000000020000000-
  1062 0000293B 200000002000000020-
  1062 00002944 000000200000002000-
  1062 0000294D 000020000000200000-
  1062 00002956 002000000020000000-
  1062 0000295F 200000002000000020-
  1062 00002968 000000200000002000-
  1062 00002971 000020000000200000-
  1062 0000297A 002000000020000000-
  1062 00002983 200000002000000020-
  1062 0000298C 000000200000002000-
  1062 00002995 000020000000200000-
  1062 0000299E 002000000020000000-
  1062 000029A7 200000002000000020-
  1062 000029B0 000000200000002000-
  1062 000029B9 000020000000200000-
  1062 000029C2 002000000020000000-
  1062 000029CB 200000002000000020-
  1062 000029D4 000000200000002000-
  1062 000029DD 000020000000200000-
  1062 000029E6 002000000020000000-
  1062 000029EF 200000002000000020-
  1062 000029F8 000000200000002000-
  1062 00002A01 000020000000200000-
  1062 00002A0A 002000000020000000-
  1062 00002A13 200000002000000020-
  1062 00002A1C 000000200000002000-
  1062 00002A25 000020000000200000-
  1062 00002A2E 002000000020000000-
  1062 00002A37 200000002000000020-
  1062 00002A40 000000200000002000-
  1062 00002A49 000020000000200000-
  1062 00002A52 002000000020000000-
  1062 00002A5B 200000002000000020-
  1062 00002A64 000000200000002000-
  1062 00002A6D 000020000000200000-
  1062 00002A76 002000000020000000-
  1062 00002A7F 200000002000000020-
  1062 00002A88 000000200000002000-
  1062 00002A91 000020000000200000-
  1062 00002A9A 002000000020000000-
  1062 00002AA3 200000002000000020-
  1062 00002AAC 000000200000002000-
  1062 00002AB5 000020000000200000-
  1062 00002ABE 002000000020000000-
  1062 00002AC7 200000002000000020-
  1062 00002AD0 000000200000002000-
  1062 00002AD9 000020000000200000-
  1062 00002AE2 002000000020000000-
  1062 00002AEB 200000002000000020-
  1062 00002AF4 000000200000002000-
  1062 00002AFD 000020000000200000-
  1062 00002B06 002000000020000000-
  1062 00002B0F 200000002000000020-
  1062 00002B18 000000200000002000-
  1062 00002B21 000020000000200000-
  1062 00002B2A 002000000020000000-
  1062 00002B33 200000002000000020-
  1062 00002B3C 000000200000002000-
  1062 00002B45 000020000000200000-
  1062 00002B4E 002000000020000000-
  1062 00002B57 200000002000000020-
  1062 00002B60 000000200000002000-
  1062 00002B69 000020000000200000-
  1062 00002B72 002000000020000000-
  1062 00002B7B 200000002000000020-
  1062 00002B84 000000200000002000-
  1062 00002B8D 000020000000200000-
  1062 00002B96 002000000020000000-
  1062 00002B9F 200000002000000020-
  1062 00002BA8 000000200000002000-
  1062 00002BB1 000020000000200000-
  1062 00002BBA 002000000020000000-
  1062 00002BC3 200000002000000020-
  1062 00002BCC 000000200000002000-
  1062 00002BD5 000020000000200000-
  1062 00002BDE 002000000020000000-
  1062 00002BE7 200000002000000020-
  1062 00002BF0 000000200000002000-
  1062 00002BF9 000020000000200000-
  1062 00002C02 002000000020000000-
  1062 00002C0B 200000002000000020-
  1062 00002C14 000000200000002000-
  1062 00002C1D 000020000000200000-
  1062 00002C26 002000000020000000-
  1062 00002C2F 200000002000000020-
  1062 00002C38 000000200000002000-
  1062 00002C41 000020000000200000-
  1062 00002C4A 002000000020000000-
  1062 00002C53 200000002000000020-
  1062 00002C5C 000000200000002000-
  1062 00002C65 000020000000200000-
  1062 00002C6E 002000000020000000-
  1062 00002C77 200000002000000020-
  1062 00002C80 000000200000002000-
  1062 00002C89 000020000000200000-
  1062 00002C92 002000000020000000-
  1062 00002C9B 200000002000000020-
  1062 00002CA4 000000200000002000-
  1062 00002CAD 000020000000200000-
  1062 00002CB6 002000000020000000-
  1062 00002CBF 200000002000000020-
  1062 00002CC8 000000200000002000-
  1062 00002CD1 000020000000200000-
  1062 00002CDA 002000000020000000-
  1062 00002CE3 200000002000000020-
  1062 00002CEC 000000200000002000-
  1062 00002CF5 000020000000200000-
  1062 00002CFE 002000000020000000-
  1062 00002D07 200000002000000020-
  1062 00002D10 000000200000002000-
  1062 00002D19 000020000000200000-
  1062 00002D22 002000000020000000-
  1062 00002D2B 200000002000000020-
  1062 00002D34 000000200000002000-
  1062 00002D3D 000020000000200000-
  1062 00002D46 002000000020000000-
  1062 00002D4F 200000002000000020-
  1062 00002D58 000000200000002000-
  1062 00002D61 000020000000200000-
  1062 00002D6A 002000000020000000-
  1062 00002D73 200000002000000020-
  1062 00002D7C 000000200000002000-
  1062 00002D85 000020000000200000-
  1062 00002D8E 002000000020000000-
  1062 00002D97 200000002000000020-
  1062 00002DA0 000000200000002000-
  1062 00002DA9 000020000000200000-
  1062 00002DB2 002000000020000000-
  1062 00002DBB 200000002000000020-
  1062 00002DC4 000000200000002000-
  1062 00002DCD 000020000000200000-
  1062 00002DD6 002000000020000000-
  1062 00002DDF 200000002000000020-
  1062 00002DE8 000000200000002000-
  1062 00002DF1 000020000000200000-
  1062 00002DFA 002000000020000000-
  1062 00002E03 200000002000000020-
  1062 00002E0C 000000200000002000-
  1062 00002E15 000020000000200000-
  1062 00002E1E 002000000020000000-
  1062 00002E27 200000002000000020-
  1062 00002E30 000000200000002000-
  1062 00002E39 000020000000200000-
  1062 00002E42 002000000020000000-
  1062 00002E4B 200000002000000020-
  1062 00002E54 000000200000002000-
  1062 00002E5D 000020000000200000-
  1062 00002E66 002000000020000000-
  1062 00002E6F 200000002000000020-
  1062 00002E78 000000200000002000-
  1062 00002E81 000020000000200000-
  1062 00002E8A 002000000020000000-
  1062 00002E93 200000002000000020-
  1062 00002E9C 000000200000002000-
  1062 00002EA5 000020000000200000-
  1062 00002EAE 002000000020000000-
  1062 00002EB7 200000002000000020-
  1062 00002EC0 000000200000002000-
  1062 00002EC9 000020000000200000-
  1062 00002ED2 002000000020000000-
  1062 00002EDB 200000002000000020-
  1062 00002EE4 000000200000002000-
  1062 00002EED 000020000000200000-
  1062 00002EF6 002000000020000000-
  1062 00002EFF 200000002000000020-
  1062 00002F08 000000200000002000-
  1062 00002F11 000020000000200000-
  1062 00002F1A 002000000020000000-
  1062 00002F23 200000002000000020-
  1062 00002F2C 000000200000002000-
  1062 00002F35 000020000000200000-
  1062 00002F3E 002000000020000000-
  1062 00002F47 200000002000000020-
  1062 00002F50 000000200000002000-
  1062 00002F59 000020000000200000-
  1062 00002F62 002000000020000000-
  1062 00002F6B 200000002000000020-
  1062 00002F74 000000200000002000-
  1062 00002F7D 000020000000200000-
  1062 00002F86 002000000020000000-
  1062 00002F8F 200000002000000020-
  1062 00002F98 000000200000002000-
  1062 00002FA1 000020000000200000-
  1062 00002FAA 002000000020000000-
  1062 00002FB3 200000002000000020-
  1062 00002FBC 000000200000002000-
  1062 00002FC5 000020000000200000-
  1062 00002FCE 002000000020000000-
  1062 00002FD7 200000002000000020-
  1062 00002FE0 000000200000002000-
  1062 00002FE9 000020000000200000-
  1062 00002FF2 002000000020000000-
  1062 00002FFB 200000002000000020-
  1062 00003004 000000200000002000-
  1062 0000300D 000020000000200000-
  1062 00003016 002000000020000000-
  1062 0000301F 200000002000000020-
  1062 00003028 000000200000002000-
  1062 00003031 000020000000200000-
  1062 0000303A 002000000020000000-
  1062 00003043 200000002000000020-
  1062 0000304C 000000200000002000-
  1062 00003055 000020000000200000-
  1062 0000305E 002000000020000000-
  1062 00003067 200000002000000020-
  1062 00003070 000000200000002000-
  1062 00003079 000020000000200000-
  1062 00003082 002000000020000000-
  1062 0000308B 200000002000000020-
  1062 00003094 000000200000002000-
  1062 0000309D 000020000000200000-
  1062 000030A6 002000000020000000-
  1062 000030AF 200000002000000020-
  1062 000030B8 000000200000002000-
  1062 000030C1 000020000000200000-
  1062 000030CA 002000000020000000-
  1062 000030D3 200000002000000020-
  1062 000030DC 000000200000002000-
  1062 000030E5 000020000000200000-
  1062 000030EE 002000000020000000-
  1062 000030F7 200000002000000020-
  1062 00003100 000000200000002000-
  1062 00003109 000020000000200000-
  1062 00003112 002000000020000000-
  1062 0000311B 200000002000000020-
  1062 00003124 000000200000002000-
  1062 0000312D 000020000000200000-
  1062 00003136 002000000020000000-
  1062 0000313F 200000002000000020-
  1062 00003148 000000200000002000-
  1062 00003151 000020000000200000-
  1062 0000315A 002000000020000000-
  1062 00003163 200000002000000020-
  1062 0000316C 000000200000002000-
  1062 00003175 000020000000200000-
  1062 0000317E 002000000020000000-
  1062 00003187 200000002000000020-
  1062 00003190 000000200000002000-
  1062 00003199 000020000000200000-
  1062 000031A2 002000000020000000-
  1062 000031AB 200000002000000020-
  1062 000031B4 000000200000002000-
  1062 000031BD 000020000000200000-
  1062 000031C6 002000000020000000-
  1062 000031CF 200000002000000020-
  1062 000031D8 000000200000002000-
  1062 000031E1 000020000000200000-
  1062 000031EA 002000000020000000-
  1062 000031F3 200000002000000020-
  1062 000031FC 000000200000002000-
  1062 00003205 000020000000200000-
  1062 0000320E 002000000020000000-
  1062 00003217 200000002000000020-
  1062 00003220 000000200000002000-
  1062 00003229 000020000000200000-
  1062 00003232 002000000020000000-
  1062 0000323B 200000002000000020-
  1062 00003244 000000200000002000-
  1062 0000324D 000020000000200000-
  1062 00003256 002000000020000000-
  1062 0000325F 200000002000000020-
  1062 00003268 000000200000002000-
  1062 00003271 000020000000200000-
  1062 0000327A 002000000020000000-
  1062 00003283 200000002000000020-
  1062 0000328C 000000200000002000-
  1062 00003295 000020000000200000-
  1062 0000329E 002000000020000000-
  1062 000032A7 200000002000000020-
  1062 000032B0 000000200000002000-
  1062 000032B9 000020000000200000-
  1062 000032C2 002000000020000000-
  1062 000032CB 200000002000000020-
  1062 000032D4 000000200000002000-
  1062 000032DD 000020000000200000-
  1062 000032E6 002000000020000000-
  1062 000032EF 200000002000000020-
  1062 000032F8 000000200000002000-
  1062 00003301 000020000000200000-
  1062 0000330A 002000000020000000-
  1062 00003313 200000002000000020-
  1062 0000331C 000000200000002000-
  1062 00003325 000020000000200000-
  1062 0000332E 002000000020000000-
  1062 00003337 200000002000000020-
  1062 00003340 000000200000002000-
  1062 00003349 000020000000200000-
  1062 00003352 002000000020000000-
  1062 0000335B 200000002000000020-
  1062 00003364 000000200000002000-
  1062 0000336D 000020000000200000-
  1062 00003376 002000000020000000-
  1062 0000337F 200000002000000020-
  1062 00003388 000000200000002000-
  1062 00003391 000020000000200000-
  1062 0000339A 002000000020000000-
  1062 000033A3 200000002000000020-
  1062 000033AC 000000200000002000-
  1062 000033B5 000020000000200000-
  1062 000033BE 002000000020000000-
  1062 000033C7 200000002000000020-
  1062 000033D0 000000200000002000-
  1062 000033D9 000020000000200000-
  1062 000033E2 002000000020000000-
  1062 000033EB 200000002000000020-
  1062 000033F4 000000200000002000-
  1062 000033FD 000020000000200000-
  1062 00003406 002000000020000000-
  1062 0000340F 200000002000000020-
  1062 00003418 000000200000002000-
  1062 00003421 000020000000200000-
  1062 0000342A 002000000020000000-
  1062 00003433 200000002000000020-
  1062 0000343C 000000200000002000-
  1062 00003445 000020000000200000-
  1062 0000344E 002000000020000000-
  1062 00003457 200000002000000020-
  1062 00003460 000000200000002000-
  1062 00003469 000020000000200000-
  1062 00003472 002000000020000000-
  1062 0000347B 200000002000000020-
  1062 00003484 000000200000002000-
  1062 0000348D 000020000000200000-
  1062 00003496 002000000020000000-
  1062 0000349F 200000002000000020-
  1062 000034A8 000000200000002000-
  1062 000034B1 000020000000200000-
  1062 000034BA 002000000020000000-
  1062 000034C3 200000002000000020-
  1062 000034CC 000000200000002000-
  1062 000034D5 000020000000200000-
  1062 000034DE 002000000020000000-
  1062 000034E7 200000002000000020-
  1062 000034F0 000000200000002000-
  1062 000034F9 000020000000200000-
  1062 00003502 002000000020000000-
  1062 0000350B 200000002000000020-
  1062 00003514 000000200000002000-
  1062 0000351D 000020000000200000-
  1062 00003526 002000000020000000-
  1062 0000352F 200000002000000020-
  1062 00003538 000000200000002000-
  1062 00003541 000020000000200000-
  1062 0000354A 002000000020000000-
  1062 00003553 200000002000000020-
  1062 0000355C 000000200000002000-
  1062 00003565 000020000000200000-
  1062 0000356E 002000000020000000-
  1062 00003577 200000002000000020-
  1062 00003580 000000200000002000-
  1062 00003589 000020000000200000-
  1062 00003592 002000000020000000-
  1062 0000359B 200000002000000020-
  1062 000035A4 000000200000002000-
  1062 000035AD 000020000000200000-
  1062 000035B6 002000000020000000-
  1062 000035BF 200000002000000020-
  1062 000035C8 000000200000002000-
  1062 000035D1 000020000000200000-
  1062 000035DA 002000000020000000-
  1062 000035E3 20000000           
  1064                                  font_z_screen_buf$pass:
  1065 000035E7 B8[47260000]            mov eax, font_z_screen_buf
  1066 000035EC A1[4B260000]            mov eax, [font_z_screen_buf+4]
  1067                                  
  1068                                  
  1069                                  ;############[fun begin]getAddrByAscii############
  1070 000035F1 E955050000              jmp font_z_getAddrByAscii$pass
  1071                                  font_z_getAddrByAscii:
  1072 000035F6 5D                      pop ebp
  1073                                  ;param: ascii
  1074 000035F7 EB04                    jmp font_z_getAddrByAscii_ascii$pass
  1075 000035F9 00000000                font_z_getAddrByAscii_ascii: dd 0
  1076                                  font_z_getAddrByAscii_ascii$pass:
  1077 000035FD 58                      pop eax
  1078 000035FE A3[F9350000]            mov [font_z_getAddrByAscii_ascii], eax
  1079 00003603 55                      push ebp
  1080                                  ;########## font_z_getAddrByAscii_if#r1_$start ##########
  1081 00003604 A1[F9350000]            mov eax, [font_z_getAddrByAscii_ascii]
  1082 00003609 50                      push eax
  1083 0000360A B820000000              mov eax, 32
  1084 0000360F 50                      push eax
  1085 00003610 5B                      pop ebx
  1086 00003611 58                      pop eax
  1087 00003612 39D8                    cmp eax, ebx
  1088 00003614 7407                    je font_z_getAddrByAscii_if#r1_equ#r2$true
  1089 00003616 B800000000              mov eax, 0
  1090 0000361B EB05                    jmp font_z_getAddrByAscii_if#r1_equ#r2$false
  1091                                  font_z_getAddrByAscii_if#r1_equ#r2$true:
  1092 0000361D B801000000              mov eax, 1
  1093                                  font_z_getAddrByAscii_if#r1_equ#r2$false:
  1094 00003622 50                      push eax
  1095 00003623 58                      pop eax
  1096 00003624 83F800                  cmp eax, 0
  1097 00003627 740D                    je font_z_getAddrByAscii_if#r1_$else
  1098 00003629 A1[1A230000]            mov eax, [font_z_space]
  1099 0000362E 50                      push eax
  1100 0000362F 58                      pop eax
  1101 00003630 5D                      pop ebp
  1102 00003631 50                      push eax
  1103 00003632 55                      push ebp
  1104 00003633 C3                      ret
  1105 00003634 EB00                    jmp font_z_getAddrByAscii_if#r1_$end
  1106                                  font_z_getAddrByAscii_if#r1_$else:
  1107                                  font_z_getAddrByAscii_if#r1_$end:
  1108                                  ;========== font_z_getAddrByAscii_if#r1_$end ==========
  1109                                  
  1110                                  ;########## font_z_getAddrByAscii_if#r3_$start ##########
  1111 00003636 A1[F9350000]            mov eax, [font_z_getAddrByAscii_ascii]
  1112 0000363B 50                      push eax
  1113 0000363C B841000000              mov eax, 65
  1114 00003641 50                      push eax
  1115 00003642 5B                      pop ebx
  1116 00003643 58                      pop eax
  1117 00003644 39D8                    cmp eax, ebx
  1118 00003646 7407                    je font_z_getAddrByAscii_if#r3_equ#r4$true
  1119 00003648 B800000000              mov eax, 0
  1120 0000364D EB05                    jmp font_z_getAddrByAscii_if#r3_equ#r4$false
  1121                                  font_z_getAddrByAscii_if#r3_equ#r4$true:
  1122 0000364F B801000000              mov eax, 1
  1123                                  font_z_getAddrByAscii_if#r3_equ#r4$false:
  1124 00003654 50                      push eax
  1125 00003655 58                      pop eax
  1126 00003656 83F800                  cmp eax, 0
  1127 00003659 740D                    je font_z_getAddrByAscii_if#r3_$else
  1128 0000365B A1[85060000]            mov eax, [font_z_A]
  1129 00003660 50                      push eax
  1130 00003661 58                      pop eax
  1131 00003662 5D                      pop ebp
  1132 00003663 50                      push eax
  1133 00003664 55                      push ebp
  1134 00003665 C3                      ret
  1135 00003666 EB00                    jmp font_z_getAddrByAscii_if#r3_$end
  1136                                  font_z_getAddrByAscii_if#r3_$else:
  1137                                  font_z_getAddrByAscii_if#r3_$end:
  1138                                  ;========== font_z_getAddrByAscii_if#r3_$end ==========
  1139                                  
  1140                                  ;########## font_z_getAddrByAscii_if#r5_$start ##########
  1141 00003668 A1[F9350000]            mov eax, [font_z_getAddrByAscii_ascii]
  1142 0000366D 50                      push eax
  1143 0000366E B842000000              mov eax, 66
  1144 00003673 50                      push eax
  1145 00003674 5B                      pop ebx
  1146 00003675 58                      pop eax
  1147 00003676 39D8                    cmp eax, ebx
  1148 00003678 7407                    je font_z_getAddrByAscii_if#r5_equ#r6$true
  1149 0000367A B800000000              mov eax, 0
  1150 0000367F EB05                    jmp font_z_getAddrByAscii_if#r5_equ#r6$false
  1151                                  font_z_getAddrByAscii_if#r5_equ#r6$true:
  1152 00003681 B801000000              mov eax, 1
  1153                                  font_z_getAddrByAscii_if#r5_equ#r6$false:
  1154 00003686 50                      push eax
  1155 00003687 58                      pop eax
  1156 00003688 83F800                  cmp eax, 0
  1157 0000368B 740D                    je font_z_getAddrByAscii_if#r5_$else
  1158 0000368D A1[94070000]            mov eax, [font_z_B]
  1159 00003692 50                      push eax
  1160 00003693 58                      pop eax
  1161 00003694 5D                      pop ebp
  1162 00003695 50                      push eax
  1163 00003696 55                      push ebp
  1164 00003697 C3                      ret
  1165 00003698 EB00                    jmp font_z_getAddrByAscii_if#r5_$end
  1166                                  font_z_getAddrByAscii_if#r5_$else:
  1167                                  font_z_getAddrByAscii_if#r5_$end:
  1168                                  ;========== font_z_getAddrByAscii_if#r5_$end ==========
  1169                                  
  1170                                  ;########## font_z_getAddrByAscii_if#r7_$start ##########
  1171 0000369A A1[F9350000]            mov eax, [font_z_getAddrByAscii_ascii]
  1172 0000369F 50                      push eax
  1173 000036A0 B843000000              mov eax, 67
  1174 000036A5 50                      push eax
  1175 000036A6 5B                      pop ebx
  1176 000036A7 58                      pop eax
  1177 000036A8 39D8                    cmp eax, ebx
  1178 000036AA 7407                    je font_z_getAddrByAscii_if#r7_equ#r8$true
  1179 000036AC B800000000              mov eax, 0
  1180 000036B1 EB05                    jmp font_z_getAddrByAscii_if#r7_equ#r8$false
  1181                                  font_z_getAddrByAscii_if#r7_equ#r8$true:
  1182 000036B3 B801000000              mov eax, 1
  1183                                  font_z_getAddrByAscii_if#r7_equ#r8$false:
  1184 000036B8 50                      push eax
  1185 000036B9 58                      pop eax
  1186 000036BA 83F800                  cmp eax, 0
  1187 000036BD 740D                    je font_z_getAddrByAscii_if#r7_$else
  1188 000036BF A1[A3080000]            mov eax, [font_z_C]
  1189 000036C4 50                      push eax
  1190 000036C5 58                      pop eax
  1191 000036C6 5D                      pop ebp
  1192 000036C7 50                      push eax
  1193 000036C8 55                      push ebp
  1194 000036C9 C3                      ret
  1195 000036CA EB00                    jmp font_z_getAddrByAscii_if#r7_$end
  1196                                  font_z_getAddrByAscii_if#r7_$else:
  1197                                  font_z_getAddrByAscii_if#r7_$end:
  1198                                  ;========== font_z_getAddrByAscii_if#r7_$end ==========
  1199                                  
  1200                                  ;########## font_z_getAddrByAscii_if#r9_$start ##########
  1201 000036CC A1[F9350000]            mov eax, [font_z_getAddrByAscii_ascii]
  1202 000036D1 50                      push eax
  1203 000036D2 B844000000              mov eax, 68
  1204 000036D7 50                      push eax
  1205 000036D8 5B                      pop ebx
  1206 000036D9 58                      pop eax
  1207 000036DA 39D8                    cmp eax, ebx
  1208 000036DC 7407                    je font_z_getAddrByAscii_if#r9_equ#r01$true
  1209 000036DE B800000000              mov eax, 0
  1210 000036E3 EB05                    jmp font_z_getAddrByAscii_if#r9_equ#r01$false
  1211                                  font_z_getAddrByAscii_if#r9_equ#r01$true:
  1212 000036E5 B801000000              mov eax, 1
  1213                                  font_z_getAddrByAscii_if#r9_equ#r01$false:
  1214 000036EA 50                      push eax
  1215 000036EB 58                      pop eax
  1216 000036EC 83F800                  cmp eax, 0
  1217 000036EF 740D                    je font_z_getAddrByAscii_if#r9_$else
  1218 000036F1 A1[B2090000]            mov eax, [font_z_D]
  1219 000036F6 50                      push eax
  1220 000036F7 58                      pop eax
  1221 000036F8 5D                      pop ebp
  1222 000036F9 50                      push eax
  1223 000036FA 55                      push ebp
  1224 000036FB C3                      ret
  1225 000036FC EB00                    jmp font_z_getAddrByAscii_if#r9_$end
  1226                                  font_z_getAddrByAscii_if#r9_$else:
  1227                                  font_z_getAddrByAscii_if#r9_$end:
  1228                                  ;========== font_z_getAddrByAscii_if#r9_$end ==========
  1229                                  
  1230                                  ;########## font_z_getAddrByAscii_if#r11_$start ##########
  1231 000036FE A1[F9350000]            mov eax, [font_z_getAddrByAscii_ascii]
  1232 00003703 50                      push eax
  1233 00003704 B845000000              mov eax, 69
  1234 00003709 50                      push eax
  1235 0000370A 5B                      pop ebx
  1236 0000370B 58                      pop eax
  1237 0000370C 39D8                    cmp eax, ebx
  1238 0000370E 7407                    je font_z_getAddrByAscii_if#r11_equ#r21$true
  1239 00003710 B800000000              mov eax, 0
  1240 00003715 EB05                    jmp font_z_getAddrByAscii_if#r11_equ#r21$false
  1241                                  font_z_getAddrByAscii_if#r11_equ#r21$true:
  1242 00003717 B801000000              mov eax, 1
  1243                                  font_z_getAddrByAscii_if#r11_equ#r21$false:
  1244 0000371C 50                      push eax
  1245 0000371D 58                      pop eax
  1246 0000371E 83F800                  cmp eax, 0
  1247 00003721 740D                    je font_z_getAddrByAscii_if#r11_$else
  1248 00003723 A1[C10A0000]            mov eax, [font_z_E]
  1249 00003728 50                      push eax
  1250 00003729 58                      pop eax
  1251 0000372A 5D                      pop ebp
  1252 0000372B 50                      push eax
  1253 0000372C 55                      push ebp
  1254 0000372D C3                      ret
  1255 0000372E EB00                    jmp font_z_getAddrByAscii_if#r11_$end
  1256                                  font_z_getAddrByAscii_if#r11_$else:
  1257                                  font_z_getAddrByAscii_if#r11_$end:
  1258                                  ;========== font_z_getAddrByAscii_if#r11_$end ==========
  1259                                  
  1260                                  ;########## font_z_getAddrByAscii_if#r31_$start ##########
  1261 00003730 A1[F9350000]            mov eax, [font_z_getAddrByAscii_ascii]
  1262 00003735 50                      push eax
  1263 00003736 B846000000              mov eax, 70
  1264 0000373B 50                      push eax
  1265 0000373C 5B                      pop ebx
  1266 0000373D 58                      pop eax
  1267 0000373E 39D8                    cmp eax, ebx
  1268 00003740 7407                    je font_z_getAddrByAscii_if#r31_equ#r41$true
  1269 00003742 B800000000              mov eax, 0
  1270 00003747 EB05                    jmp font_z_getAddrByAscii_if#r31_equ#r41$false
  1271                                  font_z_getAddrByAscii_if#r31_equ#r41$true:
  1272 00003749 B801000000              mov eax, 1
  1273                                  font_z_getAddrByAscii_if#r31_equ#r41$false:
  1274 0000374E 50                      push eax
  1275 0000374F 58                      pop eax
  1276 00003750 83F800                  cmp eax, 0
  1277 00003753 740D                    je font_z_getAddrByAscii_if#r31_$else
  1278 00003755 A1[D00B0000]            mov eax, [font_z_F]
  1279 0000375A 50                      push eax
  1280 0000375B 58                      pop eax
  1281 0000375C 5D                      pop ebp
  1282 0000375D 50                      push eax
  1283 0000375E 55                      push ebp
  1284 0000375F C3                      ret
  1285 00003760 EB00                    jmp font_z_getAddrByAscii_if#r31_$end
  1286                                  font_z_getAddrByAscii_if#r31_$else:
  1287                                  font_z_getAddrByAscii_if#r31_$end:
  1288                                  ;========== font_z_getAddrByAscii_if#r31_$end ==========
  1289                                  
  1290                                  ;########## font_z_getAddrByAscii_if#r51_$start ##########
  1291 00003762 A1[F9350000]            mov eax, [font_z_getAddrByAscii_ascii]
  1292 00003767 50                      push eax
  1293 00003768 B847000000              mov eax, 71
  1294 0000376D 50                      push eax
  1295 0000376E 5B                      pop ebx
  1296 0000376F 58                      pop eax
  1297 00003770 39D8                    cmp eax, ebx
  1298 00003772 7407                    je font_z_getAddrByAscii_if#r51_equ#r61$true
  1299 00003774 B800000000              mov eax, 0
  1300 00003779 EB05                    jmp font_z_getAddrByAscii_if#r51_equ#r61$false
  1301                                  font_z_getAddrByAscii_if#r51_equ#r61$true:
  1302 0000377B B801000000              mov eax, 1
  1303                                  font_z_getAddrByAscii_if#r51_equ#r61$false:
  1304 00003780 50                      push eax
  1305 00003781 58                      pop eax
  1306 00003782 83F800                  cmp eax, 0
  1307 00003785 740D                    je font_z_getAddrByAscii_if#r51_$else
  1308 00003787 A1[DF0C0000]            mov eax, [font_z_G]
  1309 0000378C 50                      push eax
  1310 0000378D 58                      pop eax
  1311 0000378E 5D                      pop ebp
  1312 0000378F 50                      push eax
  1313 00003790 55                      push ebp
  1314 00003791 C3                      ret
  1315 00003792 EB00                    jmp font_z_getAddrByAscii_if#r51_$end
  1316                                  font_z_getAddrByAscii_if#r51_$else:
  1317                                  font_z_getAddrByAscii_if#r51_$end:
  1318                                  ;========== font_z_getAddrByAscii_if#r51_$end ==========
  1319                                  
  1320                                  ;########## font_z_getAddrByAscii_if#r71_$start ##########
  1321 00003794 A1[F9350000]            mov eax, [font_z_getAddrByAscii_ascii]
  1322 00003799 50                      push eax
  1323 0000379A B848000000              mov eax, 72
  1324 0000379F 50                      push eax
  1325 000037A0 5B                      pop ebx
  1326 000037A1 58                      pop eax
  1327 000037A2 39D8                    cmp eax, ebx
  1328 000037A4 7407                    je font_z_getAddrByAscii_if#r71_equ#r81$true
  1329 000037A6 B800000000              mov eax, 0
  1330 000037AB EB05                    jmp font_z_getAddrByAscii_if#r71_equ#r81$false
  1331                                  font_z_getAddrByAscii_if#r71_equ#r81$true:
  1332 000037AD B801000000              mov eax, 1
  1333                                  font_z_getAddrByAscii_if#r71_equ#r81$false:
  1334 000037B2 50                      push eax
  1335 000037B3 58                      pop eax
  1336 000037B4 83F800                  cmp eax, 0
  1337 000037B7 740D                    je font_z_getAddrByAscii_if#r71_$else
  1338 000037B9 A1[EE0D0000]            mov eax, [font_z_H]
  1339 000037BE 50                      push eax
  1340 000037BF 58                      pop eax
  1341 000037C0 5D                      pop ebp
  1342 000037C1 50                      push eax
  1343 000037C2 55                      push ebp
  1344 000037C3 C3                      ret
  1345 000037C4 EB00                    jmp font_z_getAddrByAscii_if#r71_$end
  1346                                  font_z_getAddrByAscii_if#r71_$else:
  1347                                  font_z_getAddrByAscii_if#r71_$end:
  1348                                  ;========== font_z_getAddrByAscii_if#r71_$end ==========
  1349                                  
  1350                                  ;########## font_z_getAddrByAscii_if#r91_$start ##########
  1351 000037C6 A1[F9350000]            mov eax, [font_z_getAddrByAscii_ascii]
  1352 000037CB 50                      push eax
  1353 000037CC B849000000              mov eax, 73
  1354 000037D1 50                      push eax
  1355 000037D2 5B                      pop ebx
  1356 000037D3 58                      pop eax
  1357 000037D4 39D8                    cmp eax, ebx
  1358 000037D6 7407                    je font_z_getAddrByAscii_if#r91_equ#r02$true
  1359 000037D8 B800000000              mov eax, 0
  1360 000037DD EB05                    jmp font_z_getAddrByAscii_if#r91_equ#r02$false
  1361                                  font_z_getAddrByAscii_if#r91_equ#r02$true:
  1362 000037DF B801000000              mov eax, 1
  1363                                  font_z_getAddrByAscii_if#r91_equ#r02$false:
  1364 000037E4 50                      push eax
  1365 000037E5 58                      pop eax
  1366 000037E6 83F800                  cmp eax, 0
  1367 000037E9 740D                    je font_z_getAddrByAscii_if#r91_$else
  1368 000037EB A1[FD0E0000]            mov eax, [font_z_I]
  1369 000037F0 50                      push eax
  1370 000037F1 58                      pop eax
  1371 000037F2 5D                      pop ebp
  1372 000037F3 50                      push eax
  1373 000037F4 55                      push ebp
  1374 000037F5 C3                      ret
  1375 000037F6 EB00                    jmp font_z_getAddrByAscii_if#r91_$end
  1376                                  font_z_getAddrByAscii_if#r91_$else:
  1377                                  font_z_getAddrByAscii_if#r91_$end:
  1378                                  ;========== font_z_getAddrByAscii_if#r91_$end ==========
  1379                                  
  1380                                  ;########## font_z_getAddrByAscii_if#r12_$start ##########
  1381 000037F8 A1[F9350000]            mov eax, [font_z_getAddrByAscii_ascii]
  1382 000037FD 50                      push eax
  1383 000037FE B84A000000              mov eax, 74
  1384 00003803 50                      push eax
  1385 00003804 5B                      pop ebx
  1386 00003805 58                      pop eax
  1387 00003806 39D8                    cmp eax, ebx
  1388 00003808 7407                    je font_z_getAddrByAscii_if#r12_equ#r22$true
  1389 0000380A B800000000              mov eax, 0
  1390 0000380F EB05                    jmp font_z_getAddrByAscii_if#r12_equ#r22$false
  1391                                  font_z_getAddrByAscii_if#r12_equ#r22$true:
  1392 00003811 B801000000              mov eax, 1
  1393                                  font_z_getAddrByAscii_if#r12_equ#r22$false:
  1394 00003816 50                      push eax
  1395 00003817 58                      pop eax
  1396 00003818 83F800                  cmp eax, 0
  1397 0000381B 740D                    je font_z_getAddrByAscii_if#r12_$else
  1398 0000381D A1[DF0C0000]            mov eax, [font_z_G]
  1399 00003822 50                      push eax
  1400 00003823 58                      pop eax
  1401 00003824 5D                      pop ebp
  1402 00003825 50                      push eax
  1403 00003826 55                      push ebp
  1404 00003827 C3                      ret
  1405 00003828 EB00                    jmp font_z_getAddrByAscii_if#r12_$end
  1406                                  font_z_getAddrByAscii_if#r12_$else:
  1407                                  font_z_getAddrByAscii_if#r12_$end:
  1408                                  ;========== font_z_getAddrByAscii_if#r12_$end ==========
  1409                                  
  1410                                  ;########## font_z_getAddrByAscii_if#r32_$start ##########
  1411 0000382A A1[F9350000]            mov eax, [font_z_getAddrByAscii_ascii]
  1412 0000382F 50                      push eax
  1413 00003830 B84B000000              mov eax, 75
  1414 00003835 50                      push eax
  1415 00003836 5B                      pop ebx
  1416 00003837 58                      pop eax
  1417 00003838 39D8                    cmp eax, ebx
  1418 0000383A 7407                    je font_z_getAddrByAscii_if#r32_equ#r42$true
  1419 0000383C B800000000              mov eax, 0
  1420 00003841 EB05                    jmp font_z_getAddrByAscii_if#r32_equ#r42$false
  1421                                  font_z_getAddrByAscii_if#r32_equ#r42$true:
  1422 00003843 B801000000              mov eax, 1
  1423                                  font_z_getAddrByAscii_if#r32_equ#r42$false:
  1424 00003848 50                      push eax
  1425 00003849 58                      pop eax
  1426 0000384A 83F800                  cmp eax, 0
  1427 0000384D 740D                    je font_z_getAddrByAscii_if#r32_$else
  1428 0000384F A1[1B110000]            mov eax, [font_z_K]
  1429 00003854 50                      push eax
  1430 00003855 58                      pop eax
  1431 00003856 5D                      pop ebp
  1432 00003857 50                      push eax
  1433 00003858 55                      push ebp
  1434 00003859 C3                      ret
  1435 0000385A EB00                    jmp font_z_getAddrByAscii_if#r32_$end
  1436                                  font_z_getAddrByAscii_if#r32_$else:
  1437                                  font_z_getAddrByAscii_if#r32_$end:
  1438                                  ;========== font_z_getAddrByAscii_if#r32_$end ==========
  1439                                  
  1440                                  ;########## font_z_getAddrByAscii_if#r52_$start ##########
  1441 0000385C A1[F9350000]            mov eax, [font_z_getAddrByAscii_ascii]
  1442 00003861 50                      push eax
  1443 00003862 B84C000000              mov eax, 76
  1444 00003867 50                      push eax
  1445 00003868 5B                      pop ebx
  1446 00003869 58                      pop eax
  1447 0000386A 39D8                    cmp eax, ebx
  1448 0000386C 7407                    je font_z_getAddrByAscii_if#r52_equ#r62$true
  1449 0000386E B800000000              mov eax, 0
  1450 00003873 EB05                    jmp font_z_getAddrByAscii_if#r52_equ#r62$false
  1451                                  font_z_getAddrByAscii_if#r52_equ#r62$true:
  1452 00003875 B801000000              mov eax, 1
  1453                                  font_z_getAddrByAscii_if#r52_equ#r62$false:
  1454 0000387A 50                      push eax
  1455 0000387B 58                      pop eax
  1456 0000387C 83F800                  cmp eax, 0
  1457 0000387F 740D                    je font_z_getAddrByAscii_if#r52_$else
  1458 00003881 A1[2A120000]            mov eax, [font_z_L]
  1459 00003886 50                      push eax
  1460 00003887 58                      pop eax
  1461 00003888 5D                      pop ebp
  1462 00003889 50                      push eax
  1463 0000388A 55                      push ebp
  1464 0000388B C3                      ret
  1465 0000388C EB00                    jmp font_z_getAddrByAscii_if#r52_$end
  1466                                  font_z_getAddrByAscii_if#r52_$else:
  1467                                  font_z_getAddrByAscii_if#r52_$end:
  1468                                  ;========== font_z_getAddrByAscii_if#r52_$end ==========
  1469                                  
  1470                                  ;########## font_z_getAddrByAscii_if#r72_$start ##########
  1471 0000388E A1[F9350000]            mov eax, [font_z_getAddrByAscii_ascii]
  1472 00003893 50                      push eax
  1473 00003894 B84D000000              mov eax, 77
  1474 00003899 50                      push eax
  1475 0000389A 5B                      pop ebx
  1476 0000389B 58                      pop eax
  1477 0000389C 39D8                    cmp eax, ebx
  1478 0000389E 7407                    je font_z_getAddrByAscii_if#r72_equ#r82$true
  1479 000038A0 B800000000              mov eax, 0
  1480 000038A5 EB05                    jmp font_z_getAddrByAscii_if#r72_equ#r82$false
  1481                                  font_z_getAddrByAscii_if#r72_equ#r82$true:
  1482 000038A7 B801000000              mov eax, 1
  1483                                  font_z_getAddrByAscii_if#r72_equ#r82$false:
  1484 000038AC 50                      push eax
  1485 000038AD 58                      pop eax
  1486 000038AE 83F800                  cmp eax, 0
  1487 000038B1 740D                    je font_z_getAddrByAscii_if#r72_$else
  1488 000038B3 A1[39130000]            mov eax, [font_z_M]
  1489 000038B8 50                      push eax
  1490 000038B9 58                      pop eax
  1491 000038BA 5D                      pop ebp
  1492 000038BB 50                      push eax
  1493 000038BC 55                      push ebp
  1494 000038BD C3                      ret
  1495 000038BE EB00                    jmp font_z_getAddrByAscii_if#r72_$end
  1496                                  font_z_getAddrByAscii_if#r72_$else:
  1497                                  font_z_getAddrByAscii_if#r72_$end:
  1498                                  ;========== font_z_getAddrByAscii_if#r72_$end ==========
  1499                                  
  1500                                  ;########## font_z_getAddrByAscii_if#r92_$start ##########
  1501 000038C0 A1[F9350000]            mov eax, [font_z_getAddrByAscii_ascii]
  1502 000038C5 50                      push eax
  1503 000038C6 B84E000000              mov eax, 78
  1504 000038CB 50                      push eax
  1505 000038CC 5B                      pop ebx
  1506 000038CD 58                      pop eax
  1507 000038CE 39D8                    cmp eax, ebx
  1508 000038D0 7407                    je font_z_getAddrByAscii_if#r92_equ#r03$true
  1509 000038D2 B800000000              mov eax, 0
  1510 000038D7 EB05                    jmp font_z_getAddrByAscii_if#r92_equ#r03$false
  1511                                  font_z_getAddrByAscii_if#r92_equ#r03$true:
  1512 000038D9 B801000000              mov eax, 1
  1513                                  font_z_getAddrByAscii_if#r92_equ#r03$false:
  1514 000038DE 50                      push eax
  1515 000038DF 58                      pop eax
  1516 000038E0 83F800                  cmp eax, 0
  1517 000038E3 740D                    je font_z_getAddrByAscii_if#r92_$else
  1518 000038E5 A1[48140000]            mov eax, [font_z_N]
  1519 000038EA 50                      push eax
  1520 000038EB 58                      pop eax
  1521 000038EC 5D                      pop ebp
  1522 000038ED 50                      push eax
  1523 000038EE 55                      push ebp
  1524 000038EF C3                      ret
  1525 000038F0 EB00                    jmp font_z_getAddrByAscii_if#r92_$end
  1526                                  font_z_getAddrByAscii_if#r92_$else:
  1527                                  font_z_getAddrByAscii_if#r92_$end:
  1528                                  ;========== font_z_getAddrByAscii_if#r92_$end ==========
  1529                                  
  1530                                  ;########## font_z_getAddrByAscii_if#r13_$start ##########
  1531 000038F2 A1[F9350000]            mov eax, [font_z_getAddrByAscii_ascii]
  1532 000038F7 50                      push eax
  1533 000038F8 B84F000000              mov eax, 79
  1534 000038FD 50                      push eax
  1535 000038FE 5B                      pop ebx
  1536 000038FF 58                      pop eax
  1537 00003900 39D8                    cmp eax, ebx
  1538 00003902 7407                    je font_z_getAddrByAscii_if#r13_equ#r23$true
  1539 00003904 B800000000              mov eax, 0
  1540 00003909 EB05                    jmp font_z_getAddrByAscii_if#r13_equ#r23$false
  1541                                  font_z_getAddrByAscii_if#r13_equ#r23$true:
  1542 0000390B B801000000              mov eax, 1
  1543                                  font_z_getAddrByAscii_if#r13_equ#r23$false:
  1544 00003910 50                      push eax
  1545 00003911 58                      pop eax
  1546 00003912 83F800                  cmp eax, 0
  1547 00003915 740D                    je font_z_getAddrByAscii_if#r13_$else
  1548 00003917 A1[57150000]            mov eax, [font_z_O]
  1549 0000391C 50                      push eax
  1550 0000391D 58                      pop eax
  1551 0000391E 5D                      pop ebp
  1552 0000391F 50                      push eax
  1553 00003920 55                      push ebp
  1554 00003921 C3                      ret
  1555 00003922 EB00                    jmp font_z_getAddrByAscii_if#r13_$end
  1556                                  font_z_getAddrByAscii_if#r13_$else:
  1557                                  font_z_getAddrByAscii_if#r13_$end:
  1558                                  ;========== font_z_getAddrByAscii_if#r13_$end ==========
  1559                                  
  1560                                  ;########## font_z_getAddrByAscii_if#r33_$start ##########
  1561 00003924 A1[F9350000]            mov eax, [font_z_getAddrByAscii_ascii]
  1562 00003929 50                      push eax
  1563 0000392A B850000000              mov eax, 80
  1564 0000392F 50                      push eax
  1565 00003930 5B                      pop ebx
  1566 00003931 58                      pop eax
  1567 00003932 39D8                    cmp eax, ebx
  1568 00003934 7407                    je font_z_getAddrByAscii_if#r33_equ#r43$true
  1569 00003936 B800000000              mov eax, 0
  1570 0000393B EB05                    jmp font_z_getAddrByAscii_if#r33_equ#r43$false
  1571                                  font_z_getAddrByAscii_if#r33_equ#r43$true:
  1572 0000393D B801000000              mov eax, 1
  1573                                  font_z_getAddrByAscii_if#r33_equ#r43$false:
  1574 00003942 50                      push eax
  1575 00003943 58                      pop eax
  1576 00003944 83F800                  cmp eax, 0
  1577 00003947 740D                    je font_z_getAddrByAscii_if#r33_$else
  1578 00003949 A1[66160000]            mov eax, [font_z_P]
  1579 0000394E 50                      push eax
  1580 0000394F 58                      pop eax
  1581 00003950 5D                      pop ebp
  1582 00003951 50                      push eax
  1583 00003952 55                      push ebp
  1584 00003953 C3                      ret
  1585 00003954 EB00                    jmp font_z_getAddrByAscii_if#r33_$end
  1586                                  font_z_getAddrByAscii_if#r33_$else:
  1587                                  font_z_getAddrByAscii_if#r33_$end:
  1588                                  ;========== font_z_getAddrByAscii_if#r33_$end ==========
  1589                                  
  1590                                  ;########## font_z_getAddrByAscii_if#r53_$start ##########
  1591 00003956 A1[F9350000]            mov eax, [font_z_getAddrByAscii_ascii]
  1592 0000395B 50                      push eax
  1593 0000395C B851000000              mov eax, 81
  1594 00003961 50                      push eax
  1595 00003962 5B                      pop ebx
  1596 00003963 58                      pop eax
  1597 00003964 39D8                    cmp eax, ebx
  1598 00003966 7407                    je font_z_getAddrByAscii_if#r53_equ#r63$true
  1599 00003968 B800000000              mov eax, 0
  1600 0000396D EB05                    jmp font_z_getAddrByAscii_if#r53_equ#r63$false
  1601                                  font_z_getAddrByAscii_if#r53_equ#r63$true:
  1602 0000396F B801000000              mov eax, 1
  1603                                  font_z_getAddrByAscii_if#r53_equ#r63$false:
  1604 00003974 50                      push eax
  1605 00003975 58                      pop eax
  1606 00003976 83F800                  cmp eax, 0
  1607 00003979 740D                    je font_z_getAddrByAscii_if#r53_$else
  1608 0000397B A1[75170000]            mov eax, [font_z_Q]
  1609 00003980 50                      push eax
  1610 00003981 58                      pop eax
  1611 00003982 5D                      pop ebp
  1612 00003983 50                      push eax
  1613 00003984 55                      push ebp
  1614 00003985 C3                      ret
  1615 00003986 EB00                    jmp font_z_getAddrByAscii_if#r53_$end
  1616                                  font_z_getAddrByAscii_if#r53_$else:
  1617                                  font_z_getAddrByAscii_if#r53_$end:
  1618                                  ;========== font_z_getAddrByAscii_if#r53_$end ==========
  1619                                  
  1620                                  ;########## font_z_getAddrByAscii_if#r73_$start ##########
  1621 00003988 A1[F9350000]            mov eax, [font_z_getAddrByAscii_ascii]
  1622 0000398D 50                      push eax
  1623 0000398E B852000000              mov eax, 82
  1624 00003993 50                      push eax
  1625 00003994 5B                      pop ebx
  1626 00003995 58                      pop eax
  1627 00003996 39D8                    cmp eax, ebx
  1628 00003998 7407                    je font_z_getAddrByAscii_if#r73_equ#r83$true
  1629 0000399A B800000000              mov eax, 0
  1630 0000399F EB05                    jmp font_z_getAddrByAscii_if#r73_equ#r83$false
  1631                                  font_z_getAddrByAscii_if#r73_equ#r83$true:
  1632 000039A1 B801000000              mov eax, 1
  1633                                  font_z_getAddrByAscii_if#r73_equ#r83$false:
  1634 000039A6 50                      push eax
  1635 000039A7 58                      pop eax
  1636 000039A8 83F800                  cmp eax, 0
  1637 000039AB 740D                    je font_z_getAddrByAscii_if#r73_$else
  1638 000039AD A1[84180000]            mov eax, [font_z_R]
  1639 000039B2 50                      push eax
  1640 000039B3 58                      pop eax
  1641 000039B4 5D                      pop ebp
  1642 000039B5 50                      push eax
  1643 000039B6 55                      push ebp
  1644 000039B7 C3                      ret
  1645 000039B8 EB00                    jmp font_z_getAddrByAscii_if#r73_$end
  1646                                  font_z_getAddrByAscii_if#r73_$else:
  1647                                  font_z_getAddrByAscii_if#r73_$end:
  1648                                  ;========== font_z_getAddrByAscii_if#r73_$end ==========
  1649                                  
  1650                                  ;########## font_z_getAddrByAscii_if#r93_$start ##########
  1651 000039BA A1[F9350000]            mov eax, [font_z_getAddrByAscii_ascii]
  1652 000039BF 50                      push eax
  1653 000039C0 B853000000              mov eax, 83
  1654 000039C5 50                      push eax
  1655 000039C6 5B                      pop ebx
  1656 000039C7 58                      pop eax
  1657 000039C8 39D8                    cmp eax, ebx
  1658 000039CA 7407                    je font_z_getAddrByAscii_if#r93_equ#r04$true
  1659 000039CC B800000000              mov eax, 0
  1660 000039D1 EB05                    jmp font_z_getAddrByAscii_if#r93_equ#r04$false
  1661                                  font_z_getAddrByAscii_if#r93_equ#r04$true:
  1662 000039D3 B801000000              mov eax, 1
  1663                                  font_z_getAddrByAscii_if#r93_equ#r04$false:
  1664 000039D8 50                      push eax
  1665 000039D9 58                      pop eax
  1666 000039DA 83F800                  cmp eax, 0
  1667 000039DD 740D                    je font_z_getAddrByAscii_if#r93_$else
  1668 000039DF A1[93190000]            mov eax, [font_z_S]
  1669 000039E4 50                      push eax
  1670 000039E5 58                      pop eax
  1671 000039E6 5D                      pop ebp
  1672 000039E7 50                      push eax
  1673 000039E8 55                      push ebp
  1674 000039E9 C3                      ret
  1675 000039EA EB00                    jmp font_z_getAddrByAscii_if#r93_$end
  1676                                  font_z_getAddrByAscii_if#r93_$else:
  1677                                  font_z_getAddrByAscii_if#r93_$end:
  1678                                  ;========== font_z_getAddrByAscii_if#r93_$end ==========
  1679                                  
  1680                                  ;########## font_z_getAddrByAscii_if#r14_$start ##########
  1681 000039EC A1[F9350000]            mov eax, [font_z_getAddrByAscii_ascii]
  1682 000039F1 50                      push eax
  1683 000039F2 B854000000              mov eax, 84
  1684 000039F7 50                      push eax
  1685 000039F8 5B                      pop ebx
  1686 000039F9 58                      pop eax
  1687 000039FA 39D8                    cmp eax, ebx
  1688 000039FC 7407                    je font_z_getAddrByAscii_if#r14_equ#r24$true
  1689 000039FE B800000000              mov eax, 0
  1690 00003A03 EB05                    jmp font_z_getAddrByAscii_if#r14_equ#r24$false
  1691                                  font_z_getAddrByAscii_if#r14_equ#r24$true:
  1692 00003A05 B801000000              mov eax, 1
  1693                                  font_z_getAddrByAscii_if#r14_equ#r24$false:
  1694 00003A0A 50                      push eax
  1695 00003A0B 58                      pop eax
  1696 00003A0C 83F800                  cmp eax, 0
  1697 00003A0F 740D                    je font_z_getAddrByAscii_if#r14_$else
  1698 00003A11 A1[A21A0000]            mov eax, [font_z_T]
  1699 00003A16 50                      push eax
  1700 00003A17 58                      pop eax
  1701 00003A18 5D                      pop ebp
  1702 00003A19 50                      push eax
  1703 00003A1A 55                      push ebp
  1704 00003A1B C3                      ret
  1705 00003A1C EB00                    jmp font_z_getAddrByAscii_if#r14_$end
  1706                                  font_z_getAddrByAscii_if#r14_$else:
  1707                                  font_z_getAddrByAscii_if#r14_$end:
  1708                                  ;========== font_z_getAddrByAscii_if#r14_$end ==========
  1709                                  
  1710                                  ;########## font_z_getAddrByAscii_if#r34_$start ##########
  1711 00003A1E A1[F9350000]            mov eax, [font_z_getAddrByAscii_ascii]
  1712 00003A23 50                      push eax
  1713 00003A24 B855000000              mov eax, 85
  1714 00003A29 50                      push eax
  1715 00003A2A 5B                      pop ebx
  1716 00003A2B 58                      pop eax
  1717 00003A2C 39D8                    cmp eax, ebx
  1718 00003A2E 7407                    je font_z_getAddrByAscii_if#r34_equ#r44$true
  1719 00003A30 B800000000              mov eax, 0
  1720 00003A35 EB05                    jmp font_z_getAddrByAscii_if#r34_equ#r44$false
  1721                                  font_z_getAddrByAscii_if#r34_equ#r44$true:
  1722 00003A37 B801000000              mov eax, 1
  1723                                  font_z_getAddrByAscii_if#r34_equ#r44$false:
  1724 00003A3C 50                      push eax
  1725 00003A3D 58                      pop eax
  1726 00003A3E 83F800                  cmp eax, 0
  1727 00003A41 740D                    je font_z_getAddrByAscii_if#r34_$else
  1728 00003A43 A1[B11B0000]            mov eax, [font_z_U]
  1729 00003A48 50                      push eax
  1730 00003A49 58                      pop eax
  1731 00003A4A 5D                      pop ebp
  1732 00003A4B 50                      push eax
  1733 00003A4C 55                      push ebp
  1734 00003A4D C3                      ret
  1735 00003A4E EB00                    jmp font_z_getAddrByAscii_if#r34_$end
  1736                                  font_z_getAddrByAscii_if#r34_$else:
  1737                                  font_z_getAddrByAscii_if#r34_$end:
  1738                                  ;========== font_z_getAddrByAscii_if#r34_$end ==========
  1739                                  
  1740                                  ;########## font_z_getAddrByAscii_if#r54_$start ##########
  1741 00003A50 A1[F9350000]            mov eax, [font_z_getAddrByAscii_ascii]
  1742 00003A55 50                      push eax
  1743 00003A56 B856000000              mov eax, 86
  1744 00003A5B 50                      push eax
  1745 00003A5C 5B                      pop ebx
  1746 00003A5D 58                      pop eax
  1747 00003A5E 39D8                    cmp eax, ebx
  1748 00003A60 7407                    je font_z_getAddrByAscii_if#r54_equ#r64$true
  1749 00003A62 B800000000              mov eax, 0
  1750 00003A67 EB05                    jmp font_z_getAddrByAscii_if#r54_equ#r64$false
  1751                                  font_z_getAddrByAscii_if#r54_equ#r64$true:
  1752 00003A69 B801000000              mov eax, 1
  1753                                  font_z_getAddrByAscii_if#r54_equ#r64$false:
  1754 00003A6E 50                      push eax
  1755 00003A6F 58                      pop eax
  1756 00003A70 83F800                  cmp eax, 0
  1757 00003A73 740D                    je font_z_getAddrByAscii_if#r54_$else
  1758 00003A75 A1[C01C0000]            mov eax, [font_z_V]
  1759 00003A7A 50                      push eax
  1760 00003A7B 58                      pop eax
  1761 00003A7C 5D                      pop ebp
  1762 00003A7D 50                      push eax
  1763 00003A7E 55                      push ebp
  1764 00003A7F C3                      ret
  1765 00003A80 EB00                    jmp font_z_getAddrByAscii_if#r54_$end
  1766                                  font_z_getAddrByAscii_if#r54_$else:
  1767                                  font_z_getAddrByAscii_if#r54_$end:
  1768                                  ;========== font_z_getAddrByAscii_if#r54_$end ==========
  1769                                  
  1770                                  ;########## font_z_getAddrByAscii_if#r74_$start ##########
  1771 00003A82 A1[F9350000]            mov eax, [font_z_getAddrByAscii_ascii]
  1772 00003A87 50                      push eax
  1773 00003A88 B857000000              mov eax, 87
  1774 00003A8D 50                      push eax
  1775 00003A8E 5B                      pop ebx
  1776 00003A8F 58                      pop eax
  1777 00003A90 39D8                    cmp eax, ebx
  1778 00003A92 7407                    je font_z_getAddrByAscii_if#r74_equ#r84$true
  1779 00003A94 B800000000              mov eax, 0
  1780 00003A99 EB05                    jmp font_z_getAddrByAscii_if#r74_equ#r84$false
  1781                                  font_z_getAddrByAscii_if#r74_equ#r84$true:
  1782 00003A9B B801000000              mov eax, 1
  1783                                  font_z_getAddrByAscii_if#r74_equ#r84$false:
  1784 00003AA0 50                      push eax
  1785 00003AA1 58                      pop eax
  1786 00003AA2 83F800                  cmp eax, 0
  1787 00003AA5 740D                    je font_z_getAddrByAscii_if#r74_$else
  1788 00003AA7 A1[CF1D0000]            mov eax, [font_z_W]
  1789 00003AAC 50                      push eax
  1790 00003AAD 58                      pop eax
  1791 00003AAE 5D                      pop ebp
  1792 00003AAF 50                      push eax
  1793 00003AB0 55                      push ebp
  1794 00003AB1 C3                      ret
  1795 00003AB2 EB00                    jmp font_z_getAddrByAscii_if#r74_$end
  1796                                  font_z_getAddrByAscii_if#r74_$else:
  1797                                  font_z_getAddrByAscii_if#r74_$end:
  1798                                  ;========== font_z_getAddrByAscii_if#r74_$end ==========
  1799                                  
  1800                                  ;########## font_z_getAddrByAscii_if#r94_$start ##########
  1801 00003AB4 A1[F9350000]            mov eax, [font_z_getAddrByAscii_ascii]
  1802 00003AB9 50                      push eax
  1803 00003ABA B858000000              mov eax, 88
  1804 00003ABF 50                      push eax
  1805 00003AC0 5B                      pop ebx
  1806 00003AC1 58                      pop eax
  1807 00003AC2 39D8                    cmp eax, ebx
  1808 00003AC4 7407                    je font_z_getAddrByAscii_if#r94_equ#r05$true
  1809 00003AC6 B800000000              mov eax, 0
  1810 00003ACB EB05                    jmp font_z_getAddrByAscii_if#r94_equ#r05$false
  1811                                  font_z_getAddrByAscii_if#r94_equ#r05$true:
  1812 00003ACD B801000000              mov eax, 1
  1813                                  font_z_getAddrByAscii_if#r94_equ#r05$false:
  1814 00003AD2 50                      push eax
  1815 00003AD3 58                      pop eax
  1816 00003AD4 83F800                  cmp eax, 0
  1817 00003AD7 740D                    je font_z_getAddrByAscii_if#r94_$else
  1818 00003AD9 A1[DE1E0000]            mov eax, [font_z_X]
  1819 00003ADE 50                      push eax
  1820 00003ADF 58                      pop eax
  1821 00003AE0 5D                      pop ebp
  1822 00003AE1 50                      push eax
  1823 00003AE2 55                      push ebp
  1824 00003AE3 C3                      ret
  1825 00003AE4 EB00                    jmp font_z_getAddrByAscii_if#r94_$end
  1826                                  font_z_getAddrByAscii_if#r94_$else:
  1827                                  font_z_getAddrByAscii_if#r94_$end:
  1828                                  ;========== font_z_getAddrByAscii_if#r94_$end ==========
  1829                                  
  1830                                  ;########## font_z_getAddrByAscii_if#r15_$start ##########
  1831 00003AE6 A1[F9350000]            mov eax, [font_z_getAddrByAscii_ascii]
  1832 00003AEB 50                      push eax
  1833 00003AEC B859000000              mov eax, 89
  1834 00003AF1 50                      push eax
  1835 00003AF2 5B                      pop ebx
  1836 00003AF3 58                      pop eax
  1837 00003AF4 39D8                    cmp eax, ebx
  1838 00003AF6 7407                    je font_z_getAddrByAscii_if#r15_equ#r25$true
  1839 00003AF8 B800000000              mov eax, 0
  1840 00003AFD EB05                    jmp font_z_getAddrByAscii_if#r15_equ#r25$false
  1841                                  font_z_getAddrByAscii_if#r15_equ#r25$true:
  1842 00003AFF B801000000              mov eax, 1
  1843                                  font_z_getAddrByAscii_if#r15_equ#r25$false:
  1844 00003B04 50                      push eax
  1845 00003B05 58                      pop eax
  1846 00003B06 83F800                  cmp eax, 0
  1847 00003B09 740D                    je font_z_getAddrByAscii_if#r15_$else
  1848 00003B0B A1[ED1F0000]            mov eax, [font_z_Y]
  1849 00003B10 50                      push eax
  1850 00003B11 58                      pop eax
  1851 00003B12 5D                      pop ebp
  1852 00003B13 50                      push eax
  1853 00003B14 55                      push ebp
  1854 00003B15 C3                      ret
  1855 00003B16 EB00                    jmp font_z_getAddrByAscii_if#r15_$end
  1856                                  font_z_getAddrByAscii_if#r15_$else:
  1857                                  font_z_getAddrByAscii_if#r15_$end:
  1858                                  ;========== font_z_getAddrByAscii_if#r15_$end ==========
  1859                                  
  1860                                  ;########## font_z_getAddrByAscii_if#r35_$start ##########
  1861 00003B18 A1[F9350000]            mov eax, [font_z_getAddrByAscii_ascii]
  1862 00003B1D 50                      push eax
  1863 00003B1E B85A000000              mov eax, 90
  1864 00003B23 50                      push eax
  1865 00003B24 5B                      pop ebx
  1866 00003B25 58                      pop eax
  1867 00003B26 39D8                    cmp eax, ebx
  1868 00003B28 7407                    je font_z_getAddrByAscii_if#r35_equ#r45$true
  1869 00003B2A B800000000              mov eax, 0
  1870 00003B2F EB05                    jmp font_z_getAddrByAscii_if#r35_equ#r45$false
  1871                                  font_z_getAddrByAscii_if#r35_equ#r45$true:
  1872 00003B31 B801000000              mov eax, 1
  1873                                  font_z_getAddrByAscii_if#r35_equ#r45$false:
  1874 00003B36 50                      push eax
  1875 00003B37 58                      pop eax
  1876 00003B38 83F800                  cmp eax, 0
  1877 00003B3B 740D                    je font_z_getAddrByAscii_if#r35_$else
  1878 00003B3D A1[FC200000]            mov eax, [font_z_Z]
  1879 00003B42 50                      push eax
  1880 00003B43 58                      pop eax
  1881 00003B44 5D                      pop ebp
  1882 00003B45 50                      push eax
  1883 00003B46 55                      push ebp
  1884 00003B47 C3                      ret
  1885 00003B48 EB00                    jmp font_z_getAddrByAscii_if#r35_$end
  1886                                  font_z_getAddrByAscii_if#r35_$else:
  1887                                  font_z_getAddrByAscii_if#r35_$end:
  1888                                  ;========== font_z_getAddrByAscii_if#r35_$end ==========
  1889                                  
  1890 00003B4A C3                      ret
  1891                                  font_z_getAddrByAscii$pass:
  1892                                  ;============[fun end]getAddrByAscii=============
  1893                                  
  1894                                  
  1895                                  
  1896                                  ;############[fun begin]rect############
  1897 00003B4B E91C010000              jmp test_z_rect$pass
  1898                                  test_z_rect:
  1899 00003B50 5D                      pop ebp
  1900                                  ;param: addrVram
  1901 00003B51 EB04                    jmp test_z_rect_addrVram$pass
  1902 00003B53 00000000                test_z_rect_addrVram: dd 0
  1903                                  test_z_rect_addrVram$pass:
  1904 00003B57 58                      pop eax
  1905 00003B58 A3[533B0000]            mov [test_z_rect_addrVram], eax
  1906                                  ;param: top
  1907 00003B5D EB04                    jmp test_z_rect_top$pass
  1908 00003B5F 00000000                test_z_rect_top: dd 0
  1909                                  test_z_rect_top$pass:
  1910 00003B63 58                      pop eax
  1911 00003B64 A3[5F3B0000]            mov [test_z_rect_top], eax
  1912                                  ;param: left
  1913 00003B69 EB04                    jmp test_z_rect_left$pass
  1914 00003B6B 00000000                test_z_rect_left: dd 0
  1915                                  test_z_rect_left$pass:
  1916 00003B6F 58                      pop eax
  1917 00003B70 A3[6B3B0000]            mov [test_z_rect_left], eax
  1918 00003B75 55                      push ebp
  1919 00003B76 B800000000              mov eax, 0
  1920 00003B7B 50                      push eax
  1921 00003B7C EB04                    jmp test_z_rect_y$pass
  1922 00003B7E 00000000                test_z_rect_y: dd 0
  1923                                  test_z_rect_y$pass:
  1924 00003B82 58                      pop eax
  1925 00003B83 A3[7E3B0000]            mov [test_z_rect_y], eax
  1926                                  
  1927                                  ;########## test_z_rect_while#r1_$start ##########
  1928                                  test_z_rect_while#r1_$start:
  1929 00003B88 A1[7E3B0000]            mov eax, [test_z_rect_y]
  1930 00003B8D 50                      push eax
  1931 00003B8E B808000000              mov eax, 8
  1932 00003B93 50                      push eax
  1933 00003B94 5B                      pop ebx
  1934 00003B95 58                      pop eax
  1935 00003B96 39D8                    cmp eax, ebx
  1936 00003B98 7607                    jbe test_z_rect_while#r1_leq#r2$true
  1937 00003B9A B800000000              mov eax, 0
  1938 00003B9F EB05                    jmp test_z_rect_while#r1_leq#r2$false
  1939                                  test_z_rect_while#r1_leq#r2$true:
  1940 00003BA1 B801000000              mov eax, 1
  1941                                  test_z_rect_while#r1_leq#r2$false:
  1942 00003BA6 50                      push eax
  1943 00003BA7 58                      pop eax
  1944 00003BA8 83F800                  cmp eax, 0
  1945 00003BAB 0F84BA000000            je test_z_rect_while#r1_$end
  1946 00003BB1 B800000000              mov eax, 0
  1947 00003BB6 50                      push eax
  1948 00003BB7 EB04                    jmp test_z_rect_while#r1_x$pass
  1949 00003BB9 00000000                test_z_rect_while#r1_x: dd 0
  1950                                  test_z_rect_while#r1_x$pass:
  1951 00003BBD 58                      pop eax
  1952 00003BBE A3[B93B0000]            mov [test_z_rect_while#r1_x], eax
  1953                                  
  1954                                  ;########## test_z_rect_while#r1_while#r3_$start ##########
  1955                                  test_z_rect_while#r1_while#r3_$start:
  1956 00003BC3 A1[B93B0000]            mov eax, [test_z_rect_while#r1_x]
  1957 00003BC8 50                      push eax
  1958 00003BC9 B808000000              mov eax, 8
  1959 00003BCE 50                      push eax
  1960 00003BCF 5B                      pop ebx
  1961 00003BD0 58                      pop eax
  1962 00003BD1 39D8                    cmp eax, ebx
  1963 00003BD3 7607                    jbe test_z_rect_while#r1_while#r3_leq#r4$true
  1964 00003BD5 B800000000              mov eax, 0
  1965 00003BDA EB05                    jmp test_z_rect_while#r1_while#r3_leq#r4$false
  1966                                  test_z_rect_while#r1_while#r3_leq#r4$true:
  1967 00003BDC B801000000              mov eax, 1
  1968                                  test_z_rect_while#r1_while#r3_leq#r4$false:
  1969 00003BE1 50                      push eax
  1970 00003BE2 58                      pop eax
  1971 00003BE3 83F800                  cmp eax, 0
  1972 00003BE6 7467                    je test_z_rect_while#r1_while#r3_$end
  1973 00003BE8 B803000000              mov eax, 3
  1974 00003BED 50                      push eax
  1975 00003BEE EB04                    jmp test_z_rect_while#r1_while#r3_color$pass
  1976 00003BF0 00000000                test_z_rect_while#r1_while#r3_color: dd 0
  1977                                  test_z_rect_while#r1_while#r3_color$pass:
  1978 00003BF4 58                      pop eax
  1979 00003BF5 A3[F03B0000]            mov [test_z_rect_while#r1_while#r3_color], eax
  1980                                  
  1981 00003BFA A1[6B3B0000]            mov eax, [test_z_rect_left]
  1982 00003BFF 50                      push eax
  1983 00003C00 A1[B93B0000]            mov eax, [test_z_rect_while#r1_x]
  1984 00003C05 50                      push eax
  1985 00003C06 58                      pop eax
  1986 00003C07 5B                      pop ebx
  1987 00003C08 01D8                    add eax, ebx
  1988 00003C0A 50                      push eax
  1989 00003C0B A1[5F3B0000]            mov eax, [test_z_rect_top]
  1990 00003C10 50                      push eax
  1991 00003C11 A1[7E3B0000]            mov eax, [test_z_rect_y]
  1992 00003C16 50                      push eax
  1993 00003C17 58                      pop eax
  1994 00003C18 5B                      pop ebx
  1995 00003C19 01D8                    add eax, ebx
  1996 00003C1B 50                      push eax
  1997 00003C1C A1[F03B0000]            mov eax, [test_z_rect_while#r1_while#r3_color]
  1998 00003C21 50                      push eax
  1999 00003C22 B840010000              mov eax, 320
  2000 00003C27 50                      push eax
  2001 00003C28 A1[533B0000]            mov eax, [test_z_rect_addrVram]
  2002 00003C2D 50                      push eax
  2003 00003C2E E8FEC4FFFF              call draw_z_pixel
  2004                                  
  2005 00003C33 A1[B93B0000]            mov eax, [test_z_rect_while#r1_x]
  2006 00003C38 50                      push eax
  2007 00003C39 B801000000              mov eax, 1
  2008 00003C3E 50                      push eax
  2009 00003C3F 58                      pop eax
  2010 00003C40 5B                      pop ebx
  2011 00003C41 01D8                    add eax, ebx
  2012 00003C43 50                      push eax
  2013 00003C44 58                      pop eax
  2014 00003C45 A3[B93B0000]            mov [test_z_rect_while#r1_x], eax
  2015 00003C4A E974FFFFFF              jmp test_z_rect_while#r1_while#r3_$start
  2016                                  test_z_rect_while#r1_while#r3_$end:
  2017                                  ;========== test_z_rect_while#r1_while#r3_$end ==========
  2018                                  
  2019 00003C4F A1[7E3B0000]            mov eax, [test_z_rect_y]
  2020 00003C54 50                      push eax
  2021 00003C55 B801000000              mov eax, 1
  2022 00003C5A 50                      push eax
  2023 00003C5B 58                      pop eax
  2024 00003C5C 5B                      pop ebx
  2025 00003C5D 01D8                    add eax, ebx
  2026 00003C5F 50                      push eax
  2027 00003C60 58                      pop eax
  2028 00003C61 A3[7E3B0000]            mov [test_z_rect_y], eax
  2029 00003C66 E91DFFFFFF              jmp test_z_rect_while#r1_$start
  2030                                  test_z_rect_while#r1_$end:
  2031                                  ;========== test_z_rect_while#r1_$end ==========
  2032                                  
  2033 00003C6B C3                      ret
  2034                                  test_z_rect$pass:
  2035                                  ;============[fun end]rect=============
  2036                                  
  2037                                  
  2038                                  ;############[fun begin]block############
  2039 00003C6C E982000000              jmp test_z_block$pass
  2040                                  test_z_block:
  2041 00003C71 5D                      pop ebp
  2042                                  ;param: addrVram
  2043 00003C72 EB04                    jmp test_z_block_addrVram$pass
  2044 00003C74 00000000                test_z_block_addrVram: dd 0
  2045                                  test_z_block_addrVram$pass:
  2046 00003C78 58                      pop eax
  2047 00003C79 A3[743C0000]            mov [test_z_block_addrVram], eax
  2048 00003C7E 55                      push ebp
  2049 00003C7F B800000000              mov eax, 0
  2050 00003C84 50                      push eax
  2051 00003C85 EB04                    jmp test_z_block_i$pass
  2052 00003C87 00000000                test_z_block_i: dd 0
  2053                                  test_z_block_i$pass:
  2054 00003C8B 58                      pop eax
  2055 00003C8C A3[873C0000]            mov [test_z_block_i], eax
  2056                                  
  2057                                  ;########## test_z_block_while#r5_$start ##########
  2058                                  test_z_block_while#r5_$start:
  2059 00003C91 A1[873C0000]            mov eax, [test_z_block_i]
  2060 00003C96 50                      push eax
  2061 00003C97 B82C010000              mov eax, 300
  2062 00003C9C 50                      push eax
  2063 00003C9D 5B                      pop ebx
  2064 00003C9E 58                      pop eax
  2065 00003C9F 39D8                    cmp eax, ebx
  2066 00003CA1 7207                    jb test_z_block_while#r5_les#r6$true
  2067 00003CA3 B800000000              mov eax, 0
  2068 00003CA8 EB05                    jmp test_z_block_while#r5_les#r6$false
  2069                                  test_z_block_while#r5_les#r6$true:
  2070 00003CAA B801000000              mov eax, 1
  2071                                  test_z_block_while#r5_les#r6$false:
  2072 00003CAF 50                      push eax
  2073 00003CB0 58                      pop eax
  2074 00003CB1 83F800                  cmp eax, 0
  2075 00003CB4 743C                    je test_z_block_while#r5_$end
  2076 00003CB6 A1[873C0000]            mov eax, [test_z_block_i]
  2077 00003CBB 50                      push eax
  2078 00003CBC A1[873C0000]            mov eax, [test_z_block_i]
  2079 00003CC1 50                      push eax
  2080 00003CC2 A1[873C0000]            mov eax, [test_z_block_i]
  2081 00003CC7 50                      push eax
  2082 00003CC8 B840010000              mov eax, 320
  2083 00003CCD 50                      push eax
  2084 00003CCE A1[743C0000]            mov eax, [test_z_block_addrVram]
  2085 00003CD3 50                      push eax
  2086 00003CD4 E858C4FFFF              call draw_z_pixel
  2087                                  
  2088 00003CD9 A1[873C0000]            mov eax, [test_z_block_i]
  2089 00003CDE 50                      push eax
  2090 00003CDF B801000000              mov eax, 1
  2091 00003CE4 50                      push eax
  2092 00003CE5 58                      pop eax
  2093 00003CE6 5B                      pop ebx
  2094 00003CE7 01D8                    add eax, ebx
  2095 00003CE9 50                      push eax
  2096 00003CEA 58                      pop eax
  2097 00003CEB A3[873C0000]            mov [test_z_block_i], eax
  2098 00003CF0 EB9F                    jmp test_z_block_while#r5_$start
  2099                                  test_z_block_while#r5_$end:
  2100                                  ;========== test_z_block_while#r5_$end ==========
  2101                                  
  2102 00003CF2 C3                      ret
  2103                                  test_z_block$pass:
  2104                                  ;============[fun end]block=============
  2105                                  
  2106                                  
  2107                                  ;############[fun begin]draw############
  2108 00003CF3 E9B9000000              jmp test_z_draw$pass
  2109                                  test_z_draw:
  2110 00003CF8 5D                      pop ebp
  2111                                  ;param: addrVram
  2112 00003CF9 EB04                    jmp test_z_draw_addrVram$pass
  2113 00003CFB 00000000                test_z_draw_addrVram: dd 0
  2114                                  test_z_draw_addrVram$pass:
  2115 00003CFF 58                      pop eax
  2116 00003D00 A3[FB3C0000]            mov [test_z_draw_addrVram], eax
  2117 00003D05 55                      push ebp
  2118 00003D06 A1[FB3C0000]            mov eax, [test_z_draw_addrVram]
  2119 00003D0B 50                      push eax
  2120 00003D0C E860FFFFFF              call test_z_block
  2121                                  
  2122 00003D11 EB14                    jmp test_z_draw_tstr$pass
  2123 00003D13 0000000048454C4C4F-     test_z_draw_tstr: dd 0, "HELLO WORLD", 0
  2123 00003D1C 20574F524C44000000-
  2123 00003D25 0000               
  2124                                  test_z_draw_tstr$pass:
  2125 00003D27 B8[133D0000]            mov eax, test_z_draw_tstr
  2126 00003D2C 50                      push eax
  2127 00003D2D EB04                    jmp test_z_draw_tstrAddr$pass
  2128 00003D2F 00000000                test_z_draw_tstrAddr: dd 0
  2129                                  test_z_draw_tstrAddr$pass:
  2130 00003D33 58                      pop eax
  2131 00003D34 A3[2F3D0000]            mov [test_z_draw_tstrAddr], eax
  2132                                  
  2133 00003D39 A1[2F3D0000]            mov eax, [test_z_draw_tstrAddr]
  2134 00003D3E 50                      push eax
  2135 00003D3F B804000000              mov eax, 4
  2136 00003D44 50                      push eax
  2137 00003D45 58                      pop eax
  2138 00003D46 5B                      pop ebx
  2139 00003D47 01D8                    add eax, ebx
  2140 00003D49 50                      push eax
  2141 00003D4A 58                      pop eax
  2142 00003D4B A3[2F3D0000]            mov [test_z_draw_tstrAddr], eax
  2143 00003D50 A1[2F3D0000]            mov eax, [test_z_draw_tstrAddr]
  2144 00003D55 8B18                    mov ebx, [eax]
  2145 00003D57 53                      push ebx
  2146 00003D58 EB04                    jmp test_z_draw_tstrContent$pass
  2147 00003D5A 00000000                test_z_draw_tstrContent: dd 0
  2148                                  test_z_draw_tstrContent$pass:
  2149 00003D5E 58                      pop eax
  2150 00003D5F A3[5A3D0000]            mov [test_z_draw_tstrContent], eax
  2151                                  
  2152 00003D64 A1[5A3D0000]            mov eax, [test_z_draw_tstrContent]
  2153 00003D69 C1E818                  shr eax, 24
  2154 00003D6C 50                      push eax
  2155 00003D6D 58                      pop eax
  2156 00003D6E A3[5A3D0000]            mov [test_z_draw_tstrContent], eax
  2157                                  test:
  2158 00003D73 F4                      hlt 
  2159 00003D74 EBFD                    jmp test
  2160 00003D76 B808000000              mov eax, 8
  2161 00003D7B 50                      push eax
  2162 00003D7C B808000000              mov eax, 8
  2163 00003D81 50                      push eax
  2164 00003D82 B8[133D0000]            mov eax, test_z_draw_tstr
  2165 00003D87 50                      push eax
  2166 00003D88 B840010000              mov eax, 320
  2167 00003D8D 50                      push eax
  2168 00003D8E A1[FB3C0000]            mov eax, [test_z_draw_addrVram]
  2169 00003D93 50                      push eax
  2170 00003D94 E896C7FFFF              call draw_z_string
  2171                                  
  2172 00003D99 B864000000              mov eax, 100
  2173 00003D9E 50                      push eax
  2174 00003D9F B864000000              mov eax, 100
  2175 00003DA4 50                      push eax
  2176 00003DA5 A1[FB3C0000]            mov eax, [test_z_draw_addrVram]
  2177 00003DAA 50                      push eax
  2178 00003DAB E8A0FDFFFF              call test_z_rect
  2179                                  
  2180 00003DB0 C3                      ret
  2181                                  test_z_draw$pass:
  2182                                  ;============[fun end]draw=============
  2183                                  
  2184                                  
  2185                                  
  2186                                  ;############[fun begin]init############
  2187 00003DB1 E92B010000              jmp GDT_z_init$pass
  2188                                  GDT_z_init:
  2189 00003DB6 5D                      pop ebp
  2190 00003DB7 55                      push ebp
  2191 00003DB8 B800000000              mov eax, 0
  2192 00003DBD 50                      push eax
  2193 00003DBE EB04                    jmp GDT_z_init_i$pass
  2194 00003DC0 00000000                GDT_z_init_i: dd 0
  2195                                  GDT_z_init_i$pass:
  2196 00003DC4 58                      pop eax
  2197 00003DC5 A3[C03D0000]            mov [GDT_z_init_i], eax
  2198                                  
  2199                                  ;########## GDT_z_init_while#r1_$start ##########
  2200                                  GDT_z_init_while#r1_$start:
  2201 00003DCA A1[C03D0000]            mov eax, [GDT_z_init_i]
  2202 00003DCF 50                      push eax
  2203 00003DD0 B800200000              mov eax, 8192
  2204 00003DD5 50                      push eax
  2205 00003DD6 5B                      pop ebx
  2206 00003DD7 58                      pop eax
  2207 00003DD8 39D8                    cmp eax, ebx
  2208 00003DDA 7207                    jb GDT_z_init_while#r1_les#r2$true
  2209 00003DDC B800000000              mov eax, 0
  2210 00003DE1 EB05                    jmp GDT_z_init_while#r1_les#r2$false
  2211                                  GDT_z_init_while#r1_les#r2$true:
  2212 00003DE3 B801000000              mov eax, 1
  2213                                  GDT_z_init_while#r1_les#r2$false:
  2214 00003DE8 50                      push eax
  2215 00003DE9 58                      pop eax
  2216 00003DEA 83F800                  cmp eax, 0
  2217 00003DED 7465                    je GDT_z_init_while#r1_$end
  2218 00003DEF A1[C03D0000]            mov eax, [GDT_z_init_i]
  2219 00003DF4 50                      push eax
  2220 00003DF5 B802000000              mov eax, 2
  2221 00003DFA 50                      push eax
  2222 00003DFB 58                      pop eax
  2223 00003DFC 5B                      pop ebx
  2224 00003DFD F7E3                    mul ebx
  2225 00003DFF 50                      push eax
  2226 00003E00 B800000000              mov eax, 0
  2227 00003E05 50                      push eax
  2228 00003E06 58                      pop eax
  2229 00003E07 5B                      pop ebx
  2230 00003E08 8983[74000000]          mov [main_z_addrGDT+ebx], eax
  2231 00003E0E A1[C03D0000]            mov eax, [GDT_z_init_i]
  2232 00003E13 50                      push eax
  2233 00003E14 B802000000              mov eax, 2
  2234 00003E19 50                      push eax
  2235 00003E1A 58                      pop eax
  2236 00003E1B 5B                      pop ebx
  2237 00003E1C F7E3                    mul ebx
  2238 00003E1E 50                      push eax
  2239 00003E1F B801000000              mov eax, 1
  2240 00003E24 50                      push eax
  2241 00003E25 58                      pop eax
  2242 00003E26 5B                      pop ebx
  2243 00003E27 01D8                    add eax, ebx
  2244 00003E29 50                      push eax
  2245 00003E2A B800000000              mov eax, 0
  2246 00003E2F 50                      push eax
  2247 00003E30 58                      pop eax
  2248 00003E31 5B                      pop ebx
  2249 00003E32 8983[74000000]          mov [main_z_addrGDT+ebx], eax
  2250 00003E38 A1[C03D0000]            mov eax, [GDT_z_init_i]
  2251 00003E3D 50                      push eax
  2252 00003E3E B801000000              mov eax, 1
  2253 00003E43 50                      push eax
  2254 00003E44 58                      pop eax
  2255 00003E45 5B                      pop ebx
  2256 00003E46 01D8                    add eax, ebx
  2257 00003E48 50                      push eax
  2258 00003E49 58                      pop eax
  2259 00003E4A A3[C03D0000]            mov [GDT_z_init_i], eax
  2260 00003E4F E976FFFFFF              jmp GDT_z_init_while#r1_$start
  2261                                  GDT_z_init_while#r1_$end:
  2262                                  ;========== GDT_z_init_while#r1_$end ==========
  2263                                  
  2264 00003E54 A1[74000000]            mov eax, [main_z_addrGDT]
  2265 00003E59 50                      push eax
  2266 00003E5A B800000000              mov eax, 0
  2267 00003E5F 50                      push eax
  2268 00003E60 B808000000              mov eax, 8
  2269 00003E65 50                      push eax
  2270 00003E66 58                      pop eax
  2271 00003E67 5B                      pop ebx
  2272 00003E68 F7E3                    mul ebx
  2273 00003E6A 50                      push eax
  2274 00003E6B 58                      pop eax
  2275 00003E6C 5B                      pop ebx
  2276 00003E6D 01D8                    add eax, ebx
  2277 00003E6F 50                      push eax
  2278 00003E70 B800000000              mov eax, 0x00000000
  2279 00003E75 50                      push eax
  2280 00003E76 B800000000              mov eax, 0x00000000
  2281 00003E7B 50                      push eax
  2282 00003E7C E8F5000000              call kernel_z_setGDT
  2283                                  
  2284 00003E81 A1[74000000]            mov eax, [main_z_addrGDT]
  2285 00003E86 50                      push eax
  2286 00003E87 B801000000              mov eax, 1
  2287 00003E8C 50                      push eax
  2288 00003E8D B808000000              mov eax, 8
  2289 00003E92 50                      push eax
  2290 00003E93 58                      pop eax
  2291 00003E94 5B                      pop ebx
  2292 00003E95 F7E3                    mul ebx
  2293 00003E97 50                      push eax
  2294 00003E98 58                      pop eax
  2295 00003E99 5B                      pop ebx
  2296 00003E9A 01D8                    add eax, ebx
  2297 00003E9C 50                      push eax
  2298 00003E9D B800000000              mov eax, 0x00000000
  2299 00003EA2 50                      push eax
  2300 00003EA3 B892FFFF0F              mov eax, 0x0fffff92
  2301 00003EA8 50                      push eax
  2302 00003EA9 E8C8000000              call kernel_z_setGDT
  2303                                  
  2304 00003EAE A1[74000000]            mov eax, [main_z_addrGDT]
  2305 00003EB3 50                      push eax
  2306 00003EB4 B802000000              mov eax, 2
  2307 00003EB9 50                      push eax
  2308 00003EBA B808000000              mov eax, 8
  2309 00003EBF 50                      push eax
  2310 00003EC0 58                      pop eax
  2311 00003EC1 5B                      pop ebx
  2312 00003EC2 F7E3                    mul ebx
  2313 00003EC4 50                      push eax
  2314 00003EC5 58                      pop eax
  2315 00003EC6 5B                      pop ebx
  2316 00003EC7 01D8                    add eax, ebx
  2317 00003EC9 50                      push eax
  2318 00003ECA B800000000              mov eax, 0x00000000
  2319 00003ECF 50                      push eax
  2320 00003ED0 B89AFFFF07              mov eax, 0x07ffff9a
  2321 00003ED5 50                      push eax
  2322 00003ED6 E89B000000              call kernel_z_setGDT
  2323                                  
  2324 00003EDB E8BE000000              call kernel_z_loadGDT
  2325                                  
  2326 00003EE0 C3                      ret
  2327                                  GDT_z_init$pass:
  2328                                  ;============[fun end]init=============
  2329                                  
  2330                                  
  2331                                  
  2332                                  ;############[fun begin]init############
  2333 00003EE1 EB6C                    jmp IDT_z_init$pass
  2334                                  IDT_z_init:
  2335 00003EE3 5D                      pop ebp
  2336 00003EE4 55                      push ebp
  2337 00003EE5 B800000000              mov eax, 0
  2338 00003EEA 50                      push eax
  2339 00003EEB EB04                    jmp IDT_z_init_i$pass
  2340 00003EED 00000000                IDT_z_init_i: dd 0
  2341                                  IDT_z_init_i$pass:
  2342 00003EF1 58                      pop eax
  2343 00003EF2 A3[ED3E0000]            mov [IDT_z_init_i], eax
  2344                                  
  2345                                  ;########## IDT_z_init_while#r1_$start ##########
  2346                                  IDT_z_init_while#r1_$start:
  2347 00003EF7 A1[ED3E0000]            mov eax, [IDT_z_init_i]
  2348 00003EFC 50                      push eax
  2349 00003EFD B800010000              mov eax, 256
  2350 00003F02 50                      push eax
  2351 00003F03 5B                      pop ebx
  2352 00003F04 58                      pop eax
  2353 00003F05 39D8                    cmp eax, ebx
  2354 00003F07 7207                    jb IDT_z_init_while#r1_les#r2$true
  2355 00003F09 B800000000              mov eax, 0
  2356 00003F0E EB05                    jmp IDT_z_init_while#r1_les#r2$false
  2357                                  IDT_z_init_while#r1_les#r2$true:
  2358 00003F10 B801000000              mov eax, 1
  2359                                  IDT_z_init_while#r1_les#r2$false:
  2360 00003F15 50                      push eax
  2361 00003F16 58                      pop eax
  2362 00003F17 83F800                  cmp eax, 0
  2363 00003F1A 742D                    je IDT_z_init_while#r1_$end
  2364 00003F1C A1[ED3E0000]            mov eax, [IDT_z_init_i]
  2365 00003F21 50                      push eax
  2366 00003F22 B800000000              mov eax, 0
  2367 00003F27 50                      push eax
  2368 00003F28 58                      pop eax
  2369 00003F29 5B                      pop ebx
  2370 00003F2A 8983[62000000]          mov [main_z_addrIDT+ebx], eax
  2371 00003F30 A1[ED3E0000]            mov eax, [IDT_z_init_i]
  2372 00003F35 50                      push eax
  2373 00003F36 B801000000              mov eax, 1
  2374 00003F3B 50                      push eax
  2375 00003F3C 58                      pop eax
  2376 00003F3D 5B                      pop ebx
  2377 00003F3E 01D8                    add eax, ebx
  2378 00003F40 50                      push eax
  2379 00003F41 58                      pop eax
  2380 00003F42 A3[ED3E0000]            mov [IDT_z_init_i], eax
  2381 00003F47 EBAE                    jmp IDT_z_init_while#r1_$start
  2382                                  IDT_z_init_while#r1_$end:
  2383                                  ;========== IDT_z_init_while#r1_$end ==========
  2384                                  
  2385 00003F49 E858000000              call kernel_z_loadIDT
  2386                                  
  2387 00003F4E C3                      ret
  2388                                  IDT_z_init$pass:
  2389                                  ;============[fun end]init=============
  2390                                  
  2391                                  
  2392 00003F4F E991000000              jmp main
  2393                                  
  2394                                  limit_low equ 0
  2395                                  base_low equ 2 
  2396                                  base_mid equ 4 
  2397                                  access_right equ 5
  2398                                  limit_high equ 6 
  2399                                  base_high equ 7 
  2400                                  	
  2401 00003F54 <res Ch>                ALIGNB	16
  2402                                  GDTR:
  2403 00003F60 FFFF                    		DW 8*8192-1 ; 最后一个字节的偏移
  2404 00003F62 00002700                		DD 0x270000 ; 表的地址
  2405                                  
  2406 00003F66 <res Ah>                ALIGNB	16
  2407                                  IDTR:
  2408 00003F70 FF07                    		DW 8*256-1       ; 后16位是IDT的大小，limit
  2409 00003F72 00F82600                		DD 0x26f800      ; 前32位是IDT在内存中的位置
  2410                                  
  2411                                  ; esi是将要填入的地址，就是GDT表的地址，例如Addr_GDT+1*8, Addr_GDT+2*8
  2412                                  ; eax是基地址，是代码的
  2413                                  ; ebx是控制参数和限制 24+8 4位扩展(自动填上)20位限长8位参数
  2414                                  ;     高4位参数 高4位限制 低16位限制 8位参数 = 32位ebx
  2415                                  ; 实际上高4位参数被自己固定掉了
  2416                                  ; 因此用一个常量代替比较好
  2417                                  ; 设置GDT内容
  2418                                  ; kernel.z\setGDT(addr: dword, param1: dword, param2: dword)
  2419                                  kernel_z_setGDT:
  2420 00003F76 5D                        pop ebp
  2421 00003F77 5B                        pop ebx
  2422 00003F78 58                        pop eax
  2423 00003F79 5E                        pop esi
  2424 00003F7A 55                        push ebp
  2425 00003F7B 66894602                	mov [esi+base_low],  ax ; 基地址的低16位
  2426 00003F7F C1E810                  	shr eax, 16
  2427 00003F82 884604                  	mov [esi+base_mid], al ; 8位，1个字节
  2428 00003F85 886607                  	mov [esi+base_high], ah
  2429                                  	; 下面是限制与权限设置
  2430 00003F88 885E05                  	mov [esi+access_right], bl;8位参数
  2431                                  	; 0x00 未使用的记录表
  2432                                  	; 0x92 系统模式，可读写不可执行
  2433                                  	; 0x9a 系统模式，可执行可读不可写
  2434                                  	; 0xf2 应用模式，可读写不可执行
  2435                                  	; 0xfa 应用模式，可执行可读不可写
  2436 00003F8B C1EB08                  	shr ebx, 8
  2437 00003F8E 66891E                  	mov [esi+limit_low], bx ; 限制的低16位
  2438 00003F91 C1EB10                  	shr ebx, 16
  2439 00003F94 80CBC0                  	or  bl, 0xc0 ; 0xc0=11000000
  2440 00003F97 80E3CF                  	and bl, 0xcf ; 规定好前4位为1100，0x11001111
  2441 00003F9A 885E06                  	mov [esi+limit_high], bl ; 4位参数+4位段限长，高4位被称为扩展访问权，参数固定为
  2442                                  	; G=1(开启4K),D/B=1(32位段),0(固定),AVL=0(也是默认的)这4位在386前是没有的
  2443                                  	; 因此注意limit在这里被规定为24位长，其中高四位是扩展访问权，是固定的
  2444 00003F9D C3                      ret 
  2445                                  
  2446                                  ; 加载GDT
  2447                                  ; kernel.z\loadGDT()
  2448                                  kernel_z_loadGDT:
  2449 00003F9E 0F0115[603F0000]          lgdt [GDTR] ; 不加dword会警告，因为现在的标签的确从0开始的
  2450 00003FA5 C3                      ret
  2451                                  
  2452                                  kernel_z_loadIDT:
  2453 00003FA6 0F011D[703F0000]        	lidt [IDTR];装载IDT
  2454 00003FAD C3                      ret
  2455                                  
  2456                                  offset_low equ 0
  2457                                  selector equ 2
  2458                                  dw_count equ 4
  2459                                  access_right equ 5
  2460                                  offset_high equ 6
  2461                                  	
  2462                                  ; esi是将要填入的地址
  2463                                  ; eax偏移地址4字节,也就是中断函数地址了
  2464                                  kernel_z_setIDT:
  2465 00003FAE 5D                      	pop ebp
  2466 00003FAF 58                      	pop eax 
  2467 00003FB0 5E                      	pop esi 
  2468 00003FB1 55                      	push ebp 
  2469 00003FB2 668906                  	mov [esi+offset_low], ax 
  2470 00003FB5 C1E810                  	shr eax, 16
  2471 00003FB8 66894606                	mov [esi+offset_high], ax
  2472 00003FBC 66C746021000            	mov [esi+selector], word 2<<3 ; 第二段 
  2473 00003FC2 66B8008E                	mov ax, 1000111000000000B ; 参数都在这里，中断门
  2474 00003FC6 66894604                	mov [esi+dw_count], ax 
  2475 00003FCA C3                      ret
  2476                                  
  2477                                  ; 读写内存
  2478                                  ; kernel.z\setMem.1byte(val:dword, addr:dword)
  2479                                  kernel_z_setMem_1byte:
  2480 00003FCB 5D                        pop ebp
  2481 00003FCC 5B                        pop ebx
  2482 00003FCD 58                        pop eax
  2483 00003FCE 55                        push ebp
  2484 00003FCF 8803                      mov [ebx], al
  2485 00003FD1 C3                      ret
  2486                                  
  2487                                  ; kernel.z\setMem.2byte(val:dword, addr:dword)
  2488                                  kernel_z_setMem_2byte:
  2489 00003FD2 5D                        pop ebp
  2490 00003FD3 5B                        pop ebx
  2491 00003FD4 58                        pop eax
  2492 00003FD5 55                        push ebp
  2493 00003FD6 668903                    mov [ebx], ax
  2494 00003FD9 C3                      ret
  2495                                  
  2496                                  ; kernel.z\setMem.4byte(val:dword, addr:dword)
  2497                                  kernel_z_setMem_4byte:
  2498 00003FDA 5D                        pop ebp
  2499 00003FDB 5B                        pop ebx
  2500 00003FDC 58                        pop eax
  2501 00003FDD 55                        push ebp
  2502 00003FDE 8903                      mov [ebx], eax
  2503 00003FE0 C3                      ret
  2504                                  
  2505                                  ; kernel.z\halt()
  2506                                  kernel_z_halt:
  2507 00003FE1 F4                        hlt
  2508 00003FE2 C3                      ret
  2509 00003FE3 3412                    TESTA: DW 0x1234
  2510                                  ; 主进程入口
  2511                                  main:
  2512                                  
  2513                                    ; 测试用
  2514 00003FE5 9BDBE3                    finit
  2515 00003FE8 D905[E33F0000]            fld DWORD [TESTA]
  2516 00003FEE D900                      fld DWORD [eax]
  2517 00003FF0 DCC1                      fadd to st1
  2518                                  
  2519 00003FF2 E889C0FFFF                call main_z_run_once
  2520                                    .loop:
  2521 00003FF7 E89EC0FFFF                  call main_z_run_loop
  2522 00003FFC EBF9                      jmp .loop
  2523                                  
