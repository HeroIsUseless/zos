     1                                  [bits 32]
     2                                  ORG 0x280000
     3 00000000 B840010000              mov eax, 320
     4 00000005 50                      push eax
     5 00000006 EB04                    jmp main_z_screenWidth$pass
     6 00000008 00000000                main_z_screenWidth: dd 0
     7                                  main_z_screenWidth$pass:
     8 0000000C 58                      pop eax
     9 0000000D A3[08000000]            mov [main_z_screenWidth], eax
    10                                  
    11 00000012 B8C8000000              mov eax, 200
    12 00000017 50                      push eax
    13 00000018 EB04                    jmp main_z_screenHeight$pass
    14 0000001A 00000000                main_z_screenHeight: dd 0
    15                                  main_z_screenHeight$pass:
    16 0000001E 58                      pop eax
    17 0000001F A3[1A000000]            mov [main_z_screenHeight], eax
    18                                  
    19 00000024 B800000A00              mov eax, 0x000a0000
    20 00000029 50                      push eax
    21 0000002A EB04                    jmp main_z_addrVram$pass
    22 0000002C 00000000                main_z_addrVram: dd 0
    23                                  main_z_addrVram$pass:
    24 00000030 58                      pop eax
    25 00000031 A3[2C000000]            mov [main_z_addrVram], eax
    26                                  
    27 00000036 B800E02400              mov eax, 0x0024e000
    28 0000003B 50                      push eax
    29 0000003C EB04                    jmp main_z_addrPM$pass
    30 0000003E 00000000                main_z_addrPM: dd 0
    31                                  main_z_addrPM$pass:
    32 00000042 58                      pop eax
    33 00000043 A3[3E000000]            mov [main_z_addrPM], eax
    34                                  
    35 00000048 B800E02600              mov eax, 0x0026e000
    36 0000004D 50                      push eax
    37 0000004E EB04                    jmp main_z_addrPDT$pass
    38 00000050 00000000                main_z_addrPDT: dd 0
    39                                  main_z_addrPDT$pass:
    40 00000054 58                      pop eax
    41 00000055 A3[50000000]            mov [main_z_addrPDT], eax
    42                                  
    43 0000005A B800F82600              mov eax, 0x0026f800
    44 0000005F 50                      push eax
    45 00000060 EB04                    jmp main_z_addrIDT$pass
    46 00000062 00000000                main_z_addrIDT: dd 0
    47                                  main_z_addrIDT$pass:
    48 00000066 58                      pop eax
    49 00000067 A3[62000000]            mov [main_z_addrIDT], eax
    50                                  
    51 0000006C B800002700              mov eax, 0x00270000
    52 00000071 50                      push eax
    53 00000072 EB04                    jmp main_z_addrGDT$pass
    54 00000074 00000000                main_z_addrGDT: dd 0
    55                                  main_z_addrGDT$pass:
    56 00000078 58                      pop eax
    57 00000079 A3[74000000]            mov [main_z_addrGDT], eax
    58                                  
    59                                  
    60                                  ;############[fun begin]run_once############
    61 0000007E EB18                    jmp main_z_run_once$pass
    62                                  main_z_run_once:
    63 00000080 5D                      pop ebp
    64 00000081 55                      push ebp
    65 00000082 A1[2C000000]            mov eax, [main_z_addrVram]
    66 00000087 50                      push eax
    67 00000088 E8BC3C0000              call test_z_draw
    68                                  
    69 0000008D E8303D0000              call GDT_z_init
    70                                  
    71 00000092 E8583E0000              call IDT_z_init
    72                                  
    73 00000097 C3                      ret
    74                                  main_z_run_once$pass:
    75                                  ;============[fun end]run_once=============
    76                                  
    77                                  
    78                                  ;############[fun begin]run_loop############
    79 00000098 EB08                    jmp main_z_run_loop$pass
    80                                  main_z_run_loop:
    81 0000009A 5D                      pop ebp
    82 0000009B 55                      push ebp
    83 0000009C E8403F0000              call kernel_z_halt
    84                                  
    85 000000A1 C3                      ret
    86                                  main_z_run_loop$pass:
    87                                  ;============[fun end]run_loop=============
    88                                  
    89                                  
    90                                  
    91                                  ;############[fun begin]set_1byte############
    92 000000A2 EB2C                    jmp memory_z_set_1byte$pass
    93                                  memory_z_set_1byte:
    94 000000A4 5D                      pop ebp
    95                                  ;param: addr
    96 000000A5 EB04                    jmp memory_z_set_1byte_addr$pass
    97 000000A7 00000000                memory_z_set_1byte_addr: dd 0
    98                                  memory_z_set_1byte_addr$pass:
    99 000000AB 58                      pop eax
   100 000000AC A3[A7000000]            mov [memory_z_set_1byte_addr], eax
   101                                  ;param: val
   102 000000B1 EB04                    jmp memory_z_set_1byte_val$pass
   103 000000B3 00000000                memory_z_set_1byte_val: dd 0
   104                                  memory_z_set_1byte_val$pass:
   105 000000B7 58                      pop eax
   106 000000B8 A3[B3000000]            mov [memory_z_set_1byte_val], eax
   107 000000BD 55                      push ebp
   108 000000BE A1[B3000000]            mov eax, [memory_z_set_1byte_val]
   109 000000C3 50                      push eax
   110 000000C4 A1[A7000000]            mov eax, [memory_z_set_1byte_addr]
   111 000000C9 50                      push eax
   112 000000CA E8FC3E0000              call kernel_z_setMem_1byte
   113                                  
   114 000000CF C3                      ret
   115                                  memory_z_set_1byte$pass:
   116                                  ;============[fun end]set_1byte=============
   117                                  
   118                                  
   119                                  ;############[fun begin]set_2byte############
   120 000000D0 EB2C                    jmp memory_z_set_2byte$pass
   121                                  memory_z_set_2byte:
   122 000000D2 5D                      pop ebp
   123                                  ;param: addr
   124 000000D3 EB04                    jmp memory_z_set_2byte_addr$pass
   125 000000D5 00000000                memory_z_set_2byte_addr: dd 0
   126                                  memory_z_set_2byte_addr$pass:
   127 000000D9 58                      pop eax
   128 000000DA A3[D5000000]            mov [memory_z_set_2byte_addr], eax
   129                                  ;param: val
   130 000000DF EB04                    jmp memory_z_set_2byte_val$pass
   131 000000E1 00000000                memory_z_set_2byte_val: dd 0
   132                                  memory_z_set_2byte_val$pass:
   133 000000E5 58                      pop eax
   134 000000E6 A3[E1000000]            mov [memory_z_set_2byte_val], eax
   135 000000EB 55                      push ebp
   136 000000EC A1[E1000000]            mov eax, [memory_z_set_2byte_val]
   137 000000F1 50                      push eax
   138 000000F2 A1[D5000000]            mov eax, [memory_z_set_2byte_addr]
   139 000000F7 50                      push eax
   140 000000F8 E8D53E0000              call kernel_z_setMem_2byte
   141                                  
   142 000000FD C3                      ret
   143                                  memory_z_set_2byte$pass:
   144                                  ;============[fun end]set_2byte=============
   145                                  
   146                                  
   147                                  ;############[fun begin]set_4byte############
   148 000000FE EB2C                    jmp memory_z_set_4byte$pass
   149                                  memory_z_set_4byte:
   150 00000100 5D                      pop ebp
   151                                  ;param: addr
   152 00000101 EB04                    jmp memory_z_set_4byte_addr$pass
   153 00000103 00000000                memory_z_set_4byte_addr: dd 0
   154                                  memory_z_set_4byte_addr$pass:
   155 00000107 58                      pop eax
   156 00000108 A3[03010000]            mov [memory_z_set_4byte_addr], eax
   157                                  ;param: val
   158 0000010D EB04                    jmp memory_z_set_4byte_val$pass
   159 0000010F 00000000                memory_z_set_4byte_val: dd 0
   160                                  memory_z_set_4byte_val$pass:
   161 00000113 58                      pop eax
   162 00000114 A3[0F010000]            mov [memory_z_set_4byte_val], eax
   163 00000119 55                      push ebp
   164 0000011A A1[0F010000]            mov eax, [memory_z_set_4byte_val]
   165 0000011F 50                      push eax
   166 00000120 A1[03010000]            mov eax, [memory_z_set_4byte_addr]
   167 00000125 50                      push eax
   168 00000126 E8AF3E0000              call kernel_z_setMem_4byte
   169                                  
   170 0000012B C3                      ret
   171                                  memory_z_set_4byte$pass:
   172                                  ;============[fun end]set_4byte=============
   173                                  
   174                                  
   175                                  
   176                                  ;############[fun begin]pixel############
   177 0000012C E983000000              jmp draw_z_pixel$pass
   178                                  draw_z_pixel:
   179 00000131 5D                      pop ebp
   180                                  ;param: vramAddr
   181 00000132 EB04                    jmp draw_z_pixel_vramAddr$pass
   182 00000134 00000000                draw_z_pixel_vramAddr: dd 0
   183                                  draw_z_pixel_vramAddr$pass:
   184 00000138 58                      pop eax
   185 00000139 A3[34010000]            mov [draw_z_pixel_vramAddr], eax
   186                                  ;param: screenWidth
   187 0000013E EB04                    jmp draw_z_pixel_screenWidth$pass
   188 00000140 00000000                draw_z_pixel_screenWidth: dd 0
   189                                  draw_z_pixel_screenWidth$pass:
   190 00000144 58                      pop eax
   191 00000145 A3[40010000]            mov [draw_z_pixel_screenWidth], eax
   192                                  ;param: color
   193 0000014A EB04                    jmp draw_z_pixel_color$pass
   194 0000014C 00000000                draw_z_pixel_color: dd 0
   195                                  draw_z_pixel_color$pass:
   196 00000150 58                      pop eax
   197 00000151 A3[4C010000]            mov [draw_z_pixel_color], eax
   198                                  ;param: y
   199 00000156 EB04                    jmp draw_z_pixel_y$pass
   200 00000158 00000000                draw_z_pixel_y: dd 0
   201                                  draw_z_pixel_y$pass:
   202 0000015C 58                      pop eax
   203 0000015D A3[58010000]            mov [draw_z_pixel_y], eax
   204                                  ;param: x
   205 00000162 EB04                    jmp draw_z_pixel_x$pass
   206 00000164 00000000                draw_z_pixel_x: dd 0
   207                                  draw_z_pixel_x$pass:
   208 00000168 58                      pop eax
   209 00000169 A3[64010000]            mov [draw_z_pixel_x], eax
   210 0000016E 55                      push ebp
   211 0000016F A1[58010000]            mov eax, [draw_z_pixel_y]
   212 00000174 50                      push eax
   213 00000175 A1[40010000]            mov eax, [draw_z_pixel_screenWidth]
   214 0000017A 50                      push eax
   215 0000017B 58                      pop eax
   216 0000017C 5B                      pop ebx
   217 0000017D F7E3                    mul ebx
   218 0000017F 50                      push eax
   219 00000180 A1[64010000]            mov eax, [draw_z_pixel_x]
   220 00000185 50                      push eax
   221 00000186 58                      pop eax
   222 00000187 5B                      pop ebx
   223 00000188 01D8                    add eax, ebx
   224 0000018A 50                      push eax
   225 0000018B A1[34010000]            mov eax, [draw_z_pixel_vramAddr]
   226 00000190 50                      push eax
   227 00000191 58                      pop eax
   228 00000192 5B                      pop ebx
   229 00000193 01D8                    add eax, ebx
   230 00000195 50                      push eax
   231 00000196 EB04                    jmp draw_z_pixel_addr$pass
   232 00000198 00000000                draw_z_pixel_addr: dd 0
   233                                  draw_z_pixel_addr$pass:
   234 0000019C 58                      pop eax
   235 0000019D A3[98010000]            mov [draw_z_pixel_addr], eax
   236                                  
   237 000001A2 A1[4C010000]            mov eax, [draw_z_pixel_color]
   238 000001A7 50                      push eax
   239 000001A8 A1[98010000]            mov eax, [draw_z_pixel_addr]
   240 000001AD 50                      push eax
   241 000001AE E8F1FEFFFF              call memory_z_set_1byte
   242                                  
   243 000001B3 C3                      ret
   244                                  draw_z_pixel$pass:
   245                                  ;============[fun end]pixel=============
   246                                  
   247                                  
   248                                  ;############[fun begin]hLine############
   249 000001B4 E9CA000000              jmp draw_z_hLine$pass
   250                                  draw_z_hLine:
   251 000001B9 5D                      pop ebp
   252                                  ;param: vramAddr
   253 000001BA EB04                    jmp draw_z_hLine_vramAddr$pass
   254 000001BC 00000000                draw_z_hLine_vramAddr: dd 0
   255                                  draw_z_hLine_vramAddr$pass:
   256 000001C0 58                      pop eax
   257 000001C1 A3[BC010000]            mov [draw_z_hLine_vramAddr], eax
   258                                  ;param: screenWidth
   259 000001C6 EB04                    jmp draw_z_hLine_screenWidth$pass
   260 000001C8 00000000                draw_z_hLine_screenWidth: dd 0
   261                                  draw_z_hLine_screenWidth$pass:
   262 000001CC 58                      pop eax
   263 000001CD A3[C8010000]            mov [draw_z_hLine_screenWidth], eax
   264                                  ;param: color
   265 000001D2 EB04                    jmp draw_z_hLine_color$pass
   266 000001D4 00000000                draw_z_hLine_color: dd 0
   267                                  draw_z_hLine_color$pass:
   268 000001D8 58                      pop eax
   269 000001D9 A3[D4010000]            mov [draw_z_hLine_color], eax
   270                                  ;param: ey
   271 000001DE EB04                    jmp draw_z_hLine_ey$pass
   272 000001E0 00000000                draw_z_hLine_ey: dd 0
   273                                  draw_z_hLine_ey$pass:
   274 000001E4 58                      pop eax
   275 000001E5 A3[E0010000]            mov [draw_z_hLine_ey], eax
   276                                  ;param: ex
   277 000001EA EB04                    jmp draw_z_hLine_ex$pass
   278 000001EC 00000000                draw_z_hLine_ex: dd 0
   279                                  draw_z_hLine_ex$pass:
   280 000001F0 58                      pop eax
   281 000001F1 A3[EC010000]            mov [draw_z_hLine_ex], eax
   282                                  ;param: by
   283 000001F6 EB04                    jmp draw_z_hLine_by$pass
   284 000001F8 00000000                draw_z_hLine_by: dd 0
   285                                  draw_z_hLine_by$pass:
   286 000001FC 58                      pop eax
   287 000001FD A3[F8010000]            mov [draw_z_hLine_by], eax
   288                                  ;param: bx
   289 00000202 EB04                    jmp draw_z_hLine_bx$pass
   290 00000204 00000000                draw_z_hLine_bx: dd 0
   291                                  draw_z_hLine_bx$pass:
   292 00000208 58                      pop eax
   293 00000209 A3[04020000]            mov [draw_z_hLine_bx], eax
   294 0000020E 55                      push ebp
   295 0000020F A1[04020000]            mov eax, [draw_z_hLine_bx]
   296 00000214 50                      push eax
   297 00000215 EB04                    jmp draw_z_hLine_i$pass
   298 00000217 00000000                draw_z_hLine_i: dd 0
   299                                  draw_z_hLine_i$pass:
   300 0000021B 58                      pop eax
   301 0000021C A3[17020000]            mov [draw_z_hLine_i], eax
   302                                  
   303                                  ;########## draw_z_hLine_while#r1_$start ##########
   304                                  draw_z_hLine_while#r1_$start:
   305 00000221 A1[17020000]            mov eax, [draw_z_hLine_i]
   306 00000226 50                      push eax
   307 00000227 A1[EC010000]            mov eax, [draw_z_hLine_ex]
   308 0000022C 50                      push eax
   309 0000022D 5B                      pop ebx
   310 0000022E 58                      pop eax
   311 0000022F 39D8                    cmp eax, ebx
   312 00000231 7607                    jbe draw_z_hLine_while#r1_leq#r2$true
   313 00000233 B800000000              mov eax, 0
   314 00000238 EB05                    jmp draw_z_hLine_while#r1_leq#r2$false
   315                                  draw_z_hLine_while#r1_leq#r2$true:
   316 0000023A B801000000              mov eax, 1
   317                                  draw_z_hLine_while#r1_leq#r2$false:
   318 0000023F 50                      push eax
   319 00000240 58                      pop eax
   320 00000241 83F800                  cmp eax, 0
   321 00000244 743C                    je draw_z_hLine_while#r1_$end
   322 00000246 A1[17020000]            mov eax, [draw_z_hLine_i]
   323 0000024B 50                      push eax
   324 0000024C A1[F8010000]            mov eax, [draw_z_hLine_by]
   325 00000251 50                      push eax
   326 00000252 A1[D4010000]            mov eax, [draw_z_hLine_color]
   327 00000257 50                      push eax
   328 00000258 A1[C8010000]            mov eax, [draw_z_hLine_screenWidth]
   329 0000025D 50                      push eax
   330 0000025E A1[BC010000]            mov eax, [draw_z_hLine_vramAddr]
   331 00000263 50                      push eax
   332 00000264 E8C8FEFFFF              call draw_z_pixel
   333                                  
   334 00000269 A1[17020000]            mov eax, [draw_z_hLine_i]
   335 0000026E 50                      push eax
   336 0000026F B801000000              mov eax, 1
   337 00000274 50                      push eax
   338 00000275 58                      pop eax
   339 00000276 5B                      pop ebx
   340 00000277 01D8                    add eax, ebx
   341 00000279 50                      push eax
   342 0000027A 58                      pop eax
   343 0000027B A3[17020000]            mov [draw_z_hLine_i], eax
   344 00000280 EB9F                    jmp draw_z_hLine_while#r1_$start
   345                                  draw_z_hLine_while#r1_$end:
   346                                  ;========== draw_z_hLine_while#r1_$end ==========
   347                                  
   348 00000282 C3                      ret
   349                                  draw_z_hLine$pass:
   350                                  ;============[fun end]hLine=============
   351                                  
   352                                  
   353                                  ;############[fun begin]font############
   354 00000283 EB3F                    jmp draw_z_font$pass
   355                                  draw_z_font:
   356 00000285 5D                      pop ebp
   357                                  ;param: backColor
   358 00000286 EB04                    jmp draw_z_font_backColor$pass
   359 00000288 00000000                draw_z_font_backColor: dd 0
   360                                  draw_z_font_backColor$pass:
   361 0000028C 58                      pop eax
   362 0000028D A3[88020000]            mov [draw_z_font_backColor], eax
   363                                  ;param: foreColor
   364 00000292 EB04                    jmp draw_z_font_foreColor$pass
   365 00000294 00000000                draw_z_font_foreColor: dd 0
   366                                  draw_z_font_foreColor$pass:
   367 00000298 58                      pop eax
   368 00000299 A3[94020000]            mov [draw_z_font_foreColor], eax
   369                                  ;param: top
   370 0000029E EB04                    jmp draw_z_font_top$pass
   371 000002A0 00000000                draw_z_font_top: dd 0
   372                                  draw_z_font_top$pass:
   373 000002A4 58                      pop eax
   374 000002A5 A3[A0020000]            mov [draw_z_font_top], eax
   375                                  ;param: left
   376 000002AA EB04                    jmp draw_z_font_left$pass
   377 000002AC 00000000                draw_z_font_left: dd 0
   378                                  draw_z_font_left$pass:
   379 000002B0 58                      pop eax
   380 000002B1 A3[AC020000]            mov [draw_z_font_left], eax
   381                                  ;param: charAddr
   382 000002B6 EB04                    jmp draw_z_font_charAddr$pass
   383 000002B8 00000000                draw_z_font_charAddr: dd 0
   384                                  draw_z_font_charAddr$pass:
   385 000002BC 58                      pop eax
   386 000002BD A3[B8020000]            mov [draw_z_font_charAddr], eax
   387 000002C2 55                      push ebp
   388 000002C3 C3                      ret
   389                                  draw_z_font$pass:
   390                                  ;============[fun end]font=============
   391                                  
   392                                  
   393                                  ;############[fun begin]flush############
   394 000002C4 E910010000              jmp draw_z_flush$pass
   395                                  draw_z_flush:
   396 000002C9 5D                      pop ebp
   397                                  ;param: addrVram
   398 000002CA EB04                    jmp draw_z_flush_addrVram$pass
   399 000002CC 00000000                draw_z_flush_addrVram: dd 0
   400                                  draw_z_flush_addrVram$pass:
   401 000002D0 58                      pop eax
   402 000002D1 A3[CC020000]            mov [draw_z_flush_addrVram], eax
   403 000002D6 55                      push ebp
   404 000002D7 B800000000              mov eax, 0
   405 000002DC 50                      push eax
   406 000002DD EB04                    jmp draw_z_flush_left$pass
   407 000002DF 00000000                draw_z_flush_left: dd 0
   408                                  draw_z_flush_left$pass:
   409 000002E3 58                      pop eax
   410 000002E4 A3[DF020000]            mov [draw_z_flush_left], eax
   411                                  
   412 000002E9 B800000000              mov eax, 0
   413 000002EE 50                      push eax
   414 000002EF EB04                    jmp draw_z_flush_top$pass
   415 000002F1 00000000                draw_z_flush_top: dd 0
   416                                  draw_z_flush_top$pass:
   417 000002F5 58                      pop eax
   418 000002F6 A3[F1020000]            mov [draw_z_flush_top], eax
   419                                  
   420                                  ;########## draw_z_flush_while#r3_$start ##########
   421                                  draw_z_flush_while#r3_$start:
   422 000002FB A1[F1020000]            mov eax, [draw_z_flush_top]
   423 00000300 50                      push eax
   424 00000301 B819000000              mov eax, 25
   425 00000306 50                      push eax
   426 00000307 5B                      pop ebx
   427 00000308 58                      pop eax
   428 00000309 39D8                    cmp eax, ebx
   429 0000030B 7207                    jb draw_z_flush_while#r3_les#r4$true
   430 0000030D B800000000              mov eax, 0
   431 00000312 EB05                    jmp draw_z_flush_while#r3_les#r4$false
   432                                  draw_z_flush_while#r3_les#r4$true:
   433 00000314 B801000000              mov eax, 1
   434                                  draw_z_flush_while#r3_les#r4$false:
   435 00000319 50                      push eax
   436 0000031A 58                      pop eax
   437 0000031B 83F800                  cmp eax, 0
   438 0000031E 0F84B4000000            je draw_z_flush_while#r3_$end
   439 00000324 B800000000              mov eax, 0
   440 00000329 50                      push eax
   441 0000032A 58                      pop eax
   442 0000032B A3[DF020000]            mov [draw_z_flush_left], eax
   443                                  ;########## draw_z_flush_while#r3_while#r5_$start ##########
   444                                  draw_z_flush_while#r3_while#r5_$start:
   445 00000330 A1[DF020000]            mov eax, [draw_z_flush_left]
   446 00000335 50                      push eax
   447 00000336 B828000000              mov eax, 40
   448 0000033B 50                      push eax
   449 0000033C 5B                      pop ebx
   450 0000033D 58                      pop eax
   451 0000033E 39D8                    cmp eax, ebx
   452 00000340 7207                    jb draw_z_flush_while#r3_while#r5_les#r6$true
   453 00000342 B800000000              mov eax, 0
   454 00000347 EB05                    jmp draw_z_flush_while#r3_while#r5_les#r6$false
   455                                  draw_z_flush_while#r3_while#r5_les#r6$true:
   456 00000349 B801000000              mov eax, 1
   457                                  draw_z_flush_while#r3_while#r5_les#r6$false:
   458 0000034E 50                      push eax
   459 0000034F 58                      pop eax
   460 00000350 83F800                  cmp eax, 0
   461 00000353 7467                    je draw_z_flush_while#r3_while#r5_$end
   462 00000355 B80F000000              mov eax, 15
   463 0000035A 50                      push eax
   464 0000035B EB04                    jmp draw_z_flush_while#r3_while#r5_color$pass
   465 0000035D 00000000                draw_z_flush_while#r3_while#r5_color: dd 0
   466                                  draw_z_flush_while#r3_while#r5_color$pass:
   467 00000361 58                      pop eax
   468 00000362 A3[5D030000]            mov [draw_z_flush_while#r3_while#r5_color], eax
   469                                  
   470 00000367 A1[DF020000]            mov eax, [draw_z_flush_left]
   471 0000036C 50                      push eax
   472 0000036D B808000000              mov eax, 8
   473 00000372 50                      push eax
   474 00000373 58                      pop eax
   475 00000374 5B                      pop ebx
   476 00000375 F7E3                    mul ebx
   477 00000377 50                      push eax
   478 00000378 A1[F1020000]            mov eax, [draw_z_flush_top]
   479 0000037D 50                      push eax
   480 0000037E B808000000              mov eax, 8
   481 00000383 50                      push eax
   482 00000384 58                      pop eax
   483 00000385 5B                      pop ebx
   484 00000386 F7E3                    mul ebx
   485 00000388 50                      push eax
   486 00000389 A1[5D030000]            mov eax, [draw_z_flush_while#r3_while#r5_color]
   487 0000038E 50                      push eax
   488 0000038F B840010000              mov eax, 320
   489 00000394 50                      push eax
   490 00000395 A1[CC020000]            mov eax, [draw_z_flush_addrVram]
   491 0000039A 50                      push eax
   492 0000039B E891FDFFFF              call draw_z_pixel
   493                                  
   494 000003A0 A1[DF020000]            mov eax, [draw_z_flush_left]
   495 000003A5 50                      push eax
   496 000003A6 B801000000              mov eax, 1
   497 000003AB 50                      push eax
   498 000003AC 58                      pop eax
   499 000003AD 5B                      pop ebx
   500 000003AE 01D8                    add eax, ebx
   501 000003B0 50                      push eax
   502 000003B1 58                      pop eax
   503 000003B2 A3[DF020000]            mov [draw_z_flush_left], eax
   504 000003B7 E974FFFFFF              jmp draw_z_flush_while#r3_while#r5_$start
   505                                  draw_z_flush_while#r3_while#r5_$end:
   506                                  ;========== draw_z_flush_while#r3_while#r5_$end ==========
   507                                  
   508 000003BC A1[F1020000]            mov eax, [draw_z_flush_top]
   509 000003C1 50                      push eax
   510 000003C2 B801000000              mov eax, 1
   511 000003C7 50                      push eax
   512 000003C8 58                      pop eax
   513 000003C9 5B                      pop ebx
   514 000003CA 01D8                    add eax, ebx
   515 000003CC 50                      push eax
   516 000003CD 58                      pop eax
   517 000003CE A3[F1020000]            mov [draw_z_flush_top], eax
   518 000003D3 E923FFFFFF              jmp draw_z_flush_while#r3_$start
   519                                  draw_z_flush_while#r3_$end:
   520                                  ;========== draw_z_flush_while#r3_$end ==========
   521                                  
   522 000003D8 C3                      ret
   523                                  draw_z_flush$pass:
   524                                  ;============[fun end]flush=============
   525                                  
   526                                  
   527                                  ;############[fun begin]char############
   528 000003D9 E9FC010000              jmp draw_z_char$pass
   529                                  draw_z_char:
   530 000003DE 5D                      pop ebp
   531                                  ;param: addrVram
   532 000003DF EB04                    jmp draw_z_char_addrVram$pass
   533 000003E1 00000000                draw_z_char_addrVram: dd 0
   534                                  draw_z_char_addrVram$pass:
   535 000003E5 58                      pop eax
   536 000003E6 A3[E1030000]            mov [draw_z_char_addrVram], eax
   537                                  ;param: screenWidth
   538 000003EB EB04                    jmp draw_z_char_screenWidth$pass
   539 000003ED 00000000                draw_z_char_screenWidth: dd 0
   540                                  draw_z_char_screenWidth$pass:
   541 000003F1 58                      pop eax
   542 000003F2 A3[ED030000]            mov [draw_z_char_screenWidth], eax
   543                                  ;param: ascii
   544 000003F7 EB04                    jmp draw_z_char_ascii$pass
   545 000003F9 00000000                draw_z_char_ascii: dd 0
   546                                  draw_z_char_ascii$pass:
   547 000003FD 58                      pop eax
   548 000003FE A3[F9030000]            mov [draw_z_char_ascii], eax
   549                                  ;param: backColor
   550 00000403 EB04                    jmp draw_z_char_backColor$pass
   551 00000405 00000000                draw_z_char_backColor: dd 0
   552                                  draw_z_char_backColor$pass:
   553 00000409 58                      pop eax
   554 0000040A A3[05040000]            mov [draw_z_char_backColor], eax
   555                                  ;param: foreColor
   556 0000040F EB04                    jmp draw_z_char_foreColor$pass
   557 00000411 00000000                draw_z_char_foreColor: dd 0
   558                                  draw_z_char_foreColor$pass:
   559 00000415 58                      pop eax
   560 00000416 A3[11040000]            mov [draw_z_char_foreColor], eax
   561                                  ;param: top
   562 0000041B EB04                    jmp draw_z_char_top$pass
   563 0000041D 00000000                draw_z_char_top: dd 0
   564                                  draw_z_char_top$pass:
   565 00000421 58                      pop eax
   566 00000422 A3[1D040000]            mov [draw_z_char_top], eax
   567                                  ;param: left
   568 00000427 EB04                    jmp draw_z_char_left$pass
   569 00000429 00000000                draw_z_char_left: dd 0
   570                                  draw_z_char_left$pass:
   571 0000042D 58                      pop eax
   572 0000042E A3[29040000]            mov [draw_z_char_left], eax
   573 00000433 55                      push ebp
   574 00000434 A1[F9030000]            mov eax, [draw_z_char_ascii]
   575 00000439 50                      push eax
   576 0000043A E80B320000              call font_z_getAddrByAscii
   577                                  
   578 0000043F EB04                    jmp draw_z_char_fontAddr$pass
   579 00000441 00000000                draw_z_char_fontAddr: dd 0
   580                                  draw_z_char_fontAddr$pass:
   581 00000445 58                      pop eax
   582 00000446 A3[41040000]            mov [draw_z_char_fontAddr], eax
   583                                  
   584 0000044B B800000000              mov eax, 0
   585 00000450 50                      push eax
   586 00000451 EB04                    jmp draw_z_char_x$pass
   587 00000453 00000000                draw_z_char_x: dd 0
   588                                  draw_z_char_x$pass:
   589 00000457 58                      pop eax
   590 00000458 A3[53040000]            mov [draw_z_char_x], eax
   591                                  
   592 0000045D B800000000              mov eax, 0
   593 00000462 50                      push eax
   594 00000463 EB04                    jmp draw_z_char_y$pass
   595 00000465 00000000                draw_z_char_y: dd 0
   596                                  draw_z_char_y$pass:
   597 00000469 58                      pop eax
   598 0000046A A3[65040000]            mov [draw_z_char_y], eax
   599                                  
   600                                  ;########## draw_z_char_while#r7_$start ##########
   601                                  draw_z_char_while#r7_$start:
   602 0000046F A1[65040000]            mov eax, [draw_z_char_y]
   603 00000474 50                      push eax
   604 00000475 B808000000              mov eax, 8
   605 0000047A 50                      push eax
   606 0000047B 5B                      pop ebx
   607 0000047C 58                      pop eax
   608 0000047D 39D8                    cmp eax, ebx
   609 0000047F 7207                    jb draw_z_char_while#r7_les#r8$true
   610 00000481 B800000000              mov eax, 0
   611 00000486 EB05                    jmp draw_z_char_while#r7_les#r8$false
   612                                  draw_z_char_while#r7_les#r8$true:
   613 00000488 B801000000              mov eax, 1
   614                                  draw_z_char_while#r7_les#r8$false:
   615 0000048D 50                      push eax
   616 0000048E 58                      pop eax
   617 0000048F 83F800                  cmp eax, 0
   618 00000492 0F8441010000            je draw_z_char_while#r7_$end
   619 00000498 B800000000              mov eax, 0
   620 0000049D 50                      push eax
   621 0000049E 58                      pop eax
   622 0000049F A3[53040000]            mov [draw_z_char_x], eax
   623                                  ;########## draw_z_char_while#r7_while#r9_$start ##########
   624                                  draw_z_char_while#r7_while#r9_$start:
   625 000004A4 A1[53040000]            mov eax, [draw_z_char_x]
   626 000004A9 50                      push eax
   627 000004AA B808000000              mov eax, 8
   628 000004AF 50                      push eax
   629 000004B0 5B                      pop ebx
   630 000004B1 58                      pop eax
   631 000004B2 39D8                    cmp eax, ebx
   632 000004B4 7207                    jb draw_z_char_while#r7_while#r9_les#r01$true
   633 000004B6 B800000000              mov eax, 0
   634 000004BB EB05                    jmp draw_z_char_while#r7_while#r9_les#r01$false
   635                                  draw_z_char_while#r7_while#r9_les#r01$true:
   636 000004BD B801000000              mov eax, 1
   637                                  draw_z_char_while#r7_while#r9_les#r01$false:
   638 000004C2 50                      push eax
   639 000004C3 58                      pop eax
   640 000004C4 83F800                  cmp eax, 0
   641 000004C7 0F84F0000000            je draw_z_char_while#r7_while#r9_$end
   642 000004CD A1[65040000]            mov eax, [draw_z_char_y]
   643 000004D2 50                      push eax
   644 000004D3 B808000000              mov eax, 8
   645 000004D8 50                      push eax
   646 000004D9 58                      pop eax
   647 000004DA 5B                      pop ebx
   648 000004DB F7E3                    mul ebx
   649 000004DD 50                      push eax
   650 000004DE A1[53040000]            mov eax, [draw_z_char_x]
   651 000004E3 50                      push eax
   652 000004E4 58                      pop eax
   653 000004E5 5B                      pop ebx
   654 000004E6 01D8                    add eax, ebx
   655 000004E8 50                      push eax
   656 000004E9 58                      pop eax
   657 000004EA BB04000000              mov ebx, 4
   658 000004EF F7E3                    mul ebx
   659 000004F1 8B98[41040000]          mov ebx, [draw_z_char_fontAddr+eax]
   660 000004F7 53                      push ebx
   661 000004F8 EB04                    jmp draw_z_char_while#r7_while#r9_color$pass
   662 000004FA 00000000                draw_z_char_while#r7_while#r9_color: dd 0
   663                                  draw_z_char_while#r7_while#r9_color$pass:
   664 000004FE 58                      pop eax
   665 000004FF A3[FA040000]            mov [draw_z_char_while#r7_while#r9_color], eax
   666                                  
   667                                  ;########## draw_z_char_while#r7_while#r9_if#r11_$start ##########
   668 00000504 A1[65040000]            mov eax, [draw_z_char_y]
   669 00000509 50                      push eax
   670 0000050A B808000000              mov eax, 8
   671 0000050F 50                      push eax
   672 00000510 58                      pop eax
   673 00000511 5B                      pop ebx
   674 00000512 F7E3                    mul ebx
   675 00000514 50                      push eax
   676 00000515 A1[53040000]            mov eax, [draw_z_char_x]
   677 0000051A 50                      push eax
   678 0000051B 58                      pop eax
   679 0000051C 5B                      pop ebx
   680 0000051D 01D8                    add eax, ebx
   681 0000051F 50                      push eax
   682 00000520 58                      pop eax
   683 00000521 BB04000000              mov ebx, 4
   684 00000526 F7E3                    mul ebx
   685 00000528 8B98[41040000]          mov ebx, [draw_z_char_fontAddr+eax]
   686 0000052E 53                      push ebx
   687 0000052F B800000000              mov eax, 0
   688 00000534 50                      push eax
   689 00000535 5B                      pop ebx
   690 00000536 58                      pop eax
   691 00000537 39D8                    cmp eax, ebx
   692 00000539 7507                    jne draw_z_char_while#r7_while#r9_if#r11_neq#r21$true
   693 0000053B B800000000              mov eax, 0
   694 00000540 EB05                    jmp draw_z_char_while#r7_while#r9_if#r11_neq#r21$false
   695                                  draw_z_char_while#r7_while#r9_if#r11_neq#r21$true:
   696 00000542 B801000000              mov eax, 1
   697                                  draw_z_char_while#r7_while#r9_if#r11_neq#r21$false:
   698 00000547 50                      push eax
   699 00000548 58                      pop eax
   700 00000549 83F800                  cmp eax, 0
   701 0000054C 740E                    je draw_z_char_while#r7_while#r9_if#r11_$else
   702 0000054E B80F000000              mov eax, 15
   703 00000553 50                      push eax
   704 00000554 58                      pop eax
   705 00000555 A3[FA040000]            mov [draw_z_char_while#r7_while#r9_color], eax
   706 0000055A EB0C                    jmp draw_z_char_while#r7_while#r9_if#r11_$end
   707                                  draw_z_char_while#r7_while#r9_if#r11_$else:
   708 0000055C B800000000              mov eax, 0
   709 00000561 50                      push eax
   710 00000562 58                      pop eax
   711 00000563 A3[FA040000]            mov [draw_z_char_while#r7_while#r9_color], eax
   712                                  draw_z_char_while#r7_while#r9_if#r11_$end:
   713                                  ;========== draw_z_char_while#r7_while#r9_if#r11_$end ==========
   714                                  
   715 00000568 A1[29040000]            mov eax, [draw_z_char_left]
   716 0000056D 50                      push eax
   717 0000056E A1[53040000]            mov eax, [draw_z_char_x]
   718 00000573 50                      push eax
   719 00000574 58                      pop eax
   720 00000575 5B                      pop ebx
   721 00000576 01D8                    add eax, ebx
   722 00000578 50                      push eax
   723 00000579 A1[1D040000]            mov eax, [draw_z_char_top]
   724 0000057E 50                      push eax
   725 0000057F A1[65040000]            mov eax, [draw_z_char_y]
   726 00000584 50                      push eax
   727 00000585 58                      pop eax
   728 00000586 5B                      pop ebx
   729 00000587 01D8                    add eax, ebx
   730 00000589 50                      push eax
   731 0000058A A1[FA040000]            mov eax, [draw_z_char_while#r7_while#r9_color]
   732 0000058F 50                      push eax
   733 00000590 B840010000              mov eax, 320
   734 00000595 50                      push eax
   735 00000596 A1[E1030000]            mov eax, [draw_z_char_addrVram]
   736 0000059B 50                      push eax
   737 0000059C E890FBFFFF              call draw_z_pixel
   738                                  
   739 000005A1 A1[53040000]            mov eax, [draw_z_char_x]
   740 000005A6 50                      push eax
   741 000005A7 B801000000              mov eax, 1
   742 000005AC 50                      push eax
   743 000005AD 58                      pop eax
   744 000005AE 5B                      pop ebx
   745 000005AF 01D8                    add eax, ebx
   746 000005B1 50                      push eax
   747 000005B2 58                      pop eax
   748 000005B3 A3[53040000]            mov [draw_z_char_x], eax
   749 000005B8 E9E7FEFFFF              jmp draw_z_char_while#r7_while#r9_$start
   750                                  draw_z_char_while#r7_while#r9_$end:
   751                                  ;========== draw_z_char_while#r7_while#r9_$end ==========
   752                                  
   753 000005BD A1[65040000]            mov eax, [draw_z_char_y]
   754 000005C2 50                      push eax
   755 000005C3 B801000000              mov eax, 1
   756 000005C8 50                      push eax
   757 000005C9 58                      pop eax
   758 000005CA 5B                      pop ebx
   759 000005CB 01D8                    add eax, ebx
   760 000005CD 50                      push eax
   761 000005CE 58                      pop eax
   762 000005CF A3[65040000]            mov [draw_z_char_y], eax
   763 000005D4 E996FEFFFF              jmp draw_z_char_while#r7_$start
   764                                  draw_z_char_while#r7_$end:
   765                                  ;========== draw_z_char_while#r7_$end ==========
   766                                  
   767 000005D9 C3                      ret
   768                                  draw_z_char$pass:
   769                                  ;============[fun end]char=============
   770                                  
   771                                  
   772                                  ;############[fun begin]string############
   773 000005DA E9F5000000              jmp draw_z_string$pass
   774                                  draw_z_string:
   775 000005DF 5D                      pop ebp
   776                                  ;param: addrVram
   777 000005E0 EB04                    jmp draw_z_string_addrVram$pass
   778 000005E2 00000000                draw_z_string_addrVram: dd 0
   779                                  draw_z_string_addrVram$pass:
   780 000005E6 58                      pop eax
   781 000005E7 A3[E2050000]            mov [draw_z_string_addrVram], eax
   782                                  ;param: screenWidth
   783 000005EC EB04                    jmp draw_z_string_screenWidth$pass
   784 000005EE 00000000                draw_z_string_screenWidth: dd 0
   785                                  draw_z_string_screenWidth$pass:
   786 000005F2 58                      pop eax
   787 000005F3 A3[EE050000]            mov [draw_z_string_screenWidth], eax
   788                                  ;param: strAddr
   789 000005F8 EB04                    jmp draw_z_string_strAddr$pass
   790 000005FA 00000000                draw_z_string_strAddr: dd 0
   791                                  draw_z_string_strAddr$pass:
   792 000005FE 58                      pop eax
   793 000005FF A3[FA050000]            mov [draw_z_string_strAddr], eax
   794                                  ;param: top
   795 00000604 EB04                    jmp draw_z_string_top$pass
   796 00000606 00000000                draw_z_string_top: dd 0
   797                                  draw_z_string_top$pass:
   798 0000060A 58                      pop eax
   799 0000060B A3[06060000]            mov [draw_z_string_top], eax
   800                                  ;param: left
   801 00000610 EB04                    jmp draw_z_string_left$pass
   802 00000612 00000000                draw_z_string_left: dd 0
   803                                  draw_z_string_left$pass:
   804 00000616 58                      pop eax
   805 00000617 A3[12060000]            mov [draw_z_string_left], eax
   806 0000061C 55                      push ebp
   807 0000061D B800000000              mov eax, 0
   808 00000622 50                      push eax
   809 00000623 EB04                    jmp draw_z_string_i$pass
   810 00000625 00000000                draw_z_string_i: dd 0
   811                                  draw_z_string_i$pass:
   812 00000629 58                      pop eax
   813 0000062A A3[25060000]            mov [draw_z_string_i], eax
   814                                  
   815                                  ;########## draw_z_string_while#r31_$start ##########
   816                                  draw_z_string_while#r31_$start:
   817 0000062F A1[25060000]            mov eax, [draw_z_string_i]
   818 00000634 50                      push eax
   819 00000635 58                      pop eax
   820 00000636 BB04000000              mov ebx, 4
   821 0000063B F7E3                    mul ebx
   822 0000063D 8B98[FA050000]          mov ebx, [draw_z_string_strAddr+eax]
   823 00000643 53                      push ebx
   824 00000644 B800000000              mov eax, 0
   825 00000649 50                      push eax
   826 0000064A 5B                      pop ebx
   827 0000064B 58                      pop eax
   828 0000064C 39D8                    cmp eax, ebx
   829 0000064E 7507                    jne draw_z_string_while#r31_neq#r41$true
   830 00000650 B800000000              mov eax, 0
   831 00000655 EB05                    jmp draw_z_string_while#r31_neq#r41$false
   832                                  draw_z_string_while#r31_neq#r41$true:
   833 00000657 B801000000              mov eax, 1
   834                                  draw_z_string_while#r31_neq#r41$false:
   835 0000065C 50                      push eax
   836 0000065D 58                      pop eax
   837 0000065E 83F800                  cmp eax, 0
   838 00000661 7470                    je draw_z_string_while#r31_$end
   839 00000663 A1[12060000]            mov eax, [draw_z_string_left]
   840 00000668 50                      push eax
   841 00000669 A1[25060000]            mov eax, [draw_z_string_i]
   842 0000066E 50                      push eax
   843 0000066F B808000000              mov eax, 8
   844 00000674 50                      push eax
   845 00000675 58                      pop eax
   846 00000676 5B                      pop ebx
   847 00000677 F7E3                    mul ebx
   848 00000679 50                      push eax
   849 0000067A 58                      pop eax
   850 0000067B 5B                      pop ebx
   851 0000067C 01D8                    add eax, ebx
   852 0000067E 50                      push eax
   853 0000067F A1[06060000]            mov eax, [draw_z_string_top]
   854 00000684 50                      push eax
   855 00000685 B801000000              mov eax, 1
   856 0000068A 50                      push eax
   857 0000068B B802000000              mov eax, 2
   858 00000690 50                      push eax
   859 00000691 A1[25060000]            mov eax, [draw_z_string_i]
   860 00000696 50                      push eax
   861 00000697 58                      pop eax
   862 00000698 BB04000000              mov ebx, 4
   863 0000069D F7E3                    mul ebx
   864 0000069F 8B98[FA050000]          mov ebx, [draw_z_string_strAddr+eax]
   865 000006A5 53                      push ebx
   866 000006A6 A1[EE050000]            mov eax, [draw_z_string_screenWidth]
   867 000006AB 50                      push eax
   868 000006AC A1[E2050000]            mov eax, [draw_z_string_addrVram]
   869 000006B1 50                      push eax
   870 000006B2 E827FDFFFF              call draw_z_char
   871                                  
   872 000006B7 A1[25060000]            mov eax, [draw_z_string_i]
   873 000006BC 50                      push eax
   874 000006BD B801000000              mov eax, 1
   875 000006C2 50                      push eax
   876 000006C3 58                      pop eax
   877 000006C4 5B                      pop ebx
   878 000006C5 01D8                    add eax, ebx
   879 000006C7 50                      push eax
   880 000006C8 58                      pop eax
   881 000006C9 A3[25060000]            mov [draw_z_string_i], eax
   882 000006CE E95CFFFFFF              jmp draw_z_string_while#r31_$start
   883                                  draw_z_string_while#r31_$end:
   884                                  ;========== draw_z_string_while#r31_$end ==========
   885                                  
   886 000006D3 C3                      ret
   887                                  draw_z_string$pass:
   888                                  ;============[fun end]string=============
   889                                  
   890                                  
   891 000006D4 E900010000              jmp font_z_A$pass
   892 000006D9 000000000000000000-     font_z_A: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   892 000006E2 000000000000000000-
   892 000006EB 000000000000000000-
   892 000006F4 000000000000000000-
   892 000006FD 000000000000000001-
   892 00000706 000000010000000000-
   892 0000070F 000000000000000000-
   892 00000718 000000000000000000-
   892 00000721 010000000000000000-
   892 0000072A 000000010000000000-
   892 00000733 000000000000000000-
   892 0000073C 000100000000000000-
   892 00000745 000000000000000000-
   892 0000074E 000000010000000000-
   892 00000757 000000000000010000-
   892 00000760 000100000001000000-
   892 00000769 010000000100000001-
   892 00000772 000000000000000000-
   892 0000077B 000001000000000000-
   892 00000784 000000000000000000-
   892 0000078D 000000000100000000-
   892 00000796 000000000000000100-
   892 0000079F 000000000000000000-
   892 000007A8 000000000000000000-
   892 000007B1 010000000000000000-
   892 000007BA 000000000000000000-
   892 000007C3 000000000000000000-
   892 000007CC 000000000000000000-
   892 000007D5 00000000           
   894                                  font_z_A$pass:
   895 000007D9 B8[D9060000]            mov eax, font_z_A
   896 000007DE A1[DD060000]            mov eax, [font_z_A+4]
   897                                  
   898 000007E3 E900010000              jmp font_z_B$pass
   899 000007E8 000000000000000000-     font_z_B: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   899 000007F1 000000000000000000-
   899 000007FA 000000000000000000-
   899 00000803 000000000000000000-
   899 0000080C 010000000100000001-
   899 00000815 000000010000000100-
   899 0000081E 000000000000000000-
   899 00000827 000000000001000000-
   899 00000830 000000000000000000-
   899 00000839 000000000000000100-
   899 00000842 000000000000000000-
   899 0000084B 000100000001000000-
   899 00000854 010000000100000001-
   899 0000085D 000000000000000000-
   899 00000866 000000000000010000-
   899 0000086F 000000000000000000-
   899 00000878 000000000000000001-
   899 00000881 000000000000000000-
   899 0000088A 000001000000000000-
   899 00000893 000000000000000000-
   899 0000089C 000000000100000000-
   899 000008A5 000000000000000100-
   899 000008AE 000001000000010000-
   899 000008B7 000100000001000000-
   899 000008C0 000000000000000000-
   899 000008C9 000000000000000000-
   899 000008D2 000000000000000000-
   899 000008DB 000000000000000000-
   899 000008E4 00000000           
   901                                  font_z_B$pass:
   902 000008E8 B8[E8070000]            mov eax, font_z_B
   903 000008ED A1[EC070000]            mov eax, [font_z_B+4]
   904                                  
   905 000008F2 E900010000              jmp font_z_C$pass
   906 000008F7 000000000000000000-     font_z_C: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   906 00000900 000000000000000000-
   906 00000909 000000000000000000-
   906 00000912 000000000000000000-
   906 0000091B 000000000100000001-
   906 00000924 000000010000000100-
   906 0000092D 000000000000000000-
   906 00000936 000000000001000000-
   906 0000093F 000000000000000000-
   906 00000948 000000000000000100-
   906 00000951 000000000000000000-
   906 0000095A 000100000000000000-
   906 00000963 000000000000000000-
   906 0000096C 000000000000000000-
   906 00000975 000000000000010000-
   906 0000097E 000000000000000000-
   906 00000987 000000000000000000-
   906 00000990 000000000000000000-
   906 00000999 000001000000000000-
   906 000009A2 000000000000000000-
   906 000009AB 000000000100000000-
   906 000009B4 000000000000000000-
   906 000009BD 000001000000010000-
   906 000009C6 000100000001000000-
   906 000009CF 000000000000000000-
   906 000009D8 000000000000000000-
   906 000009E1 000000000000000000-
   906 000009EA 000000000000000000-
   906 000009F3 00000000           
   908                                  font_z_C$pass:
   909 000009F7 B8[F7080000]            mov eax, font_z_C
   910 000009FC A1[FB080000]            mov eax, [font_z_C+4]
   911                                  
   912 00000A01 E900010000              jmp font_z_D$pass
   913 00000A06 000000000000000000-     font_z_D: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   913 00000A0F 000000000000000000-
   913 00000A18 000000000000000000-
   913 00000A21 000000000000000000-
   913 00000A2A 010000000100000001-
   913 00000A33 000000010000000100-
   913 00000A3C 000000000000000000-
   913 00000A45 000000000001000000-
   913 00000A4E 000000000000000000-
   913 00000A57 000000000000000100-
   913 00000A60 000000000000000000-
   913 00000A69 000100000000000000-
   913 00000A72 000000000000000000-
   913 00000A7B 000000010000000000-
   913 00000A84 000000000000010000-
   913 00000A8D 000000000000000000-
   913 00000A96 000000000000000001-
   913 00000A9F 000000000000000000-
   913 00000AA8 000001000000000000-
   913 00000AB1 000000000000000000-
   913 00000ABA 000000000100000000-
   913 00000AC3 000000000000000100-
   913 00000ACC 000001000000010000-
   913 00000AD5 000100000001000000-
   913 00000ADE 000000000000000000-
   913 00000AE7 000000000000000000-
   913 00000AF0 000000000000000000-
   913 00000AF9 000000000000000000-
   913 00000B02 00000000           
   915                                  font_z_D$pass:
   916 00000B06 B8[060A0000]            mov eax, font_z_D
   917 00000B0B A1[0A0A0000]            mov eax, [font_z_D+4]
   918                                  
   919 00000B10 E900010000              jmp font_z_E$pass
   920 00000B15 000000000000000000-     font_z_E: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   920 00000B1E 000000000000000000-
   920 00000B27 000000000000000000-
   920 00000B30 000000000000000000-
   920 00000B39 010000000100000001-
   920 00000B42 000000010000000100-
   920 00000B4B 000001000000000000-
   920 00000B54 000000000001000000-
   920 00000B5D 000000000000000000-
   920 00000B66 000000000000000000-
   920 00000B6F 000000000000000000-
   920 00000B78 000100000001000000-
   920 00000B81 010000000100000001-
   920 00000B8A 000000010000000000-
   920 00000B93 000000000000010000-
   920 00000B9C 000000000000000000-
   920 00000BA5 000000000000000000-
   920 00000BAE 000000000000000000-
   920 00000BB7 000001000000000000-
   920 00000BC0 000000000000000000-
   920 00000BC9 000000000000000000-
   920 00000BD2 000000000000000100-
   920 00000BDB 000001000000010000-
   920 00000BE4 000100000001000000-
   920 00000BED 010000000000000000-
   920 00000BF6 000000000000000000-
   920 00000BFF 000000000000000000-
   920 00000C08 000000000000000000-
   920 00000C11 00000000           
   922                                  font_z_E$pass:
   923 00000C15 B8[150B0000]            mov eax, font_z_E
   924 00000C1A A1[190B0000]            mov eax, [font_z_E+4]
   925                                  
   926 00000C1F E900010000              jmp font_z_F$pass
   927 00000C24 000000000000000000-     font_z_F: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   927 00000C2D 000000000000000000-
   927 00000C36 000000000000000000-
   927 00000C3F 000000000000000000-
   927 00000C48 010000000100000001-
   927 00000C51 000000010000000100-
   927 00000C5A 000001000000000000-
   927 00000C63 000000000001000000-
   927 00000C6C 000000000000000000-
   927 00000C75 000000000000000000-
   927 00000C7E 000000000000000000-
   927 00000C87 000100000001000000-
   927 00000C90 010000000100000001-
   927 00000C99 000000000000000000-
   927 00000CA2 000000000000010000-
   927 00000CAB 000000000000000000-
   927 00000CB4 000000000000000000-
   927 00000CBD 000000000000000000-
   927 00000CC6 000001000000000000-
   927 00000CCF 000000000000000000-
   927 00000CD8 000000000000000000-
   927 00000CE1 000000000000000100-
   927 00000CEA 000000000000000000-
   927 00000CF3 000000000000000000-
   927 00000CFC 000000000000000000-
   927 00000D05 000000000000000000-
   927 00000D0E 000000000000000000-
   927 00000D17 000000000000000000-
   927 00000D20 00000000           
   929                                  font_z_F$pass:
   930 00000D24 B8[240C0000]            mov eax, font_z_F
   931 00000D29 A1[280C0000]            mov eax, [font_z_F+4]
   932                                  
   933 00000D2E E900010000              jmp font_z_G$pass
   934 00000D33 000000000000000000-     font_z_G: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   934 00000D3C 000000000000000000-
   934 00000D45 000000000000000000-
   934 00000D4E 000000000000000000-
   934 00000D57 000000000100000001-
   934 00000D60 000000010000000100-
   934 00000D69 000000000000000000-
   934 00000D72 000000000001000000-
   934 00000D7B 000000000000000000-
   934 00000D84 000000000000000100-
   934 00000D8D 000000000000000000-
   934 00000D96 000100000000000000-
   934 00000D9F 000000000000000000-
   934 00000DA8 000000000000000000-
   934 00000DB1 000000000000010000-
   934 00000DBA 000000000000000000-
   934 00000DC3 000000000100000001-
   934 00000DCC 000000000000000000-
   934 00000DD5 000001000000000000-
   934 00000DDE 000000000000000000-
   934 00000DE7 000000000100000000-
   934 00000DF0 000000000000000000-
   934 00000DF9 000001000000010000-
   934 00000E02 000100000001000000-
   934 00000E0B 010000000000000000-
   934 00000E14 000000000000000000-
   934 00000E1D 000000000000000000-
   934 00000E26 000000000000000000-
   934 00000E2F 00000000           
   936                                  font_z_G$pass:
   937 00000E33 B8[330D0000]            mov eax, font_z_G
   938 00000E38 A1[370D0000]            mov eax, [font_z_G+4]
   939                                  
   940 00000E3D E900010000              jmp font_z_H$pass
   941 00000E42 000000000000000000-     font_z_H: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   941 00000E4B 000000000000000000-
   941 00000E54 000000000000000000-
   941 00000E5D 000000000000000000-
   941 00000E66 010000000000000000-
   941 00000E6F 000000000000000000-
   941 00000E78 000001000000000000-
   941 00000E81 000000000001000000-
   941 00000E8A 000000000000000000-
   941 00000E93 000000000000000100-
   941 00000E9C 000000000000000000-
   941 00000EA5 000100000001000000-
   941 00000EAE 010000000100000001-
   941 00000EB7 000000010000000000-
   941 00000EC0 000000000000010000-
   941 00000EC9 000000000000000000-
   941 00000ED2 000000000000000001-
   941 00000EDB 000000000000000000-
   941 00000EE4 000001000000000000-
   941 00000EED 000000000000000000-
   941 00000EF6 000000000100000000-
   941 00000EFF 000000000000000100-
   941 00000F08 000000000000000000-
   941 00000F11 000000000000000000-
   941 00000F1A 010000000000000000-
   941 00000F23 000000000000000000-
   941 00000F2C 000000000000000000-
   941 00000F35 000000000000000000-
   941 00000F3E 00000000           
   943                                  font_z_H$pass:
   944 00000F42 B8[420E0000]            mov eax, font_z_H
   945 00000F47 A1[460E0000]            mov eax, [font_z_H+4]
   946                                  
   947 00000F4C E900010000              jmp font_z_I$pass
   948 00000F51 000000000000000000-     font_z_I: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   948 00000F5A 000000000000000000-
   948 00000F63 000000000000000000-
   948 00000F6C 000000000000000000-
   948 00000F75 000000000100000001-
   948 00000F7E 000000010000000000-
   948 00000F87 000000000000000000-
   948 00000F90 000000000000000000-
   948 00000F99 000000000100000000-
   948 00000FA2 000000000000000000-
   948 00000FAB 000000000000000000-
   948 00000FB4 000000000000000000-
   948 00000FBD 010000000000000000-
   948 00000FC6 000000000000000000-
   948 00000FCF 000000000000000000-
   948 00000FD8 000000000001000000-
   948 00000FE1 000000000000000000-
   948 00000FEA 000000000000000000-
   948 00000FF3 000000000000000000-
   948 00000FFC 000100000000000000-
   948 00001005 000000000000000000-
   948 0000100E 000000000000000000-
   948 00001017 000001000000010000-
   948 00001020 000100000000000000-
   948 00001029 000000000000000000-
   948 00001032 000000000000000000-
   948 0000103B 000000000000000000-
   948 00001044 000000000000000000-
   948 0000104D 00000000           
   950                                  font_z_I$pass:
   951 00001051 B8[510F0000]            mov eax, font_z_I
   952 00001056 A1[550F0000]            mov eax, [font_z_I+4]
   953                                  
   954 0000105B E900010000              jmp font_z_J$pass
   955 00001060 000000000000000000-     font_z_J: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   955 00001069 000000000000000000-
   955 00001072 000000000000000000-
   955 0000107B 000000000000000000-
   955 00001084 000000000100000001-
   955 0000108D 000000010000000100-
   955 00001096 000000000000000000-
   955 0000109F 000000000000000000-
   955 000010A8 000000000000000000-
   955 000010B1 000000010000000000-
   955 000010BA 000000000000000000-
   955 000010C3 000000000000000000-
   955 000010CC 000000000000000001-
   955 000010D5 000000000000000000-
   955 000010DE 000000000000000000-
   955 000010E7 000000000000000000-
   955 000010F0 000000000100000000-
   955 000010F9 000000000000000000-
   955 00001102 000000000000000000-
   955 0000110B 000100000000000000-
   955 00001114 010000000000000000-
   955 0000111D 000000000000000000-
   955 00001126 000000000000000000-
   955 0000112F 000100000000000000-
   955 00001138 000000000000000000-
   955 00001141 000000000000000000-
   955 0000114A 000000000000000000-
   955 00001153 000000000000000000-
   955 0000115C 00000000           
   957                                  font_z_J$pass:
   958 00001160 B8[60100000]            mov eax, font_z_J
   959 00001165 A1[64100000]            mov eax, [font_z_J+4]
   960                                  
   961 0000116A E900010000              jmp font_z_K$pass
   962 0000116F 000000000000000000-     font_z_K: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   962 00001178 000000000000000000-
   962 00001181 000000000000000000-
   962 0000118A 000000000000000000-
   962 00001193 010000000000000000-
   962 0000119C 000000010000000100-
   962 000011A5 000000000000000000-
   962 000011AE 000000000001000000-
   962 000011B7 000000000100000001-
   962 000011C0 000000000000000000-
   962 000011C9 000000000000000000-
   962 000011D2 000100000001000000-
   962 000011DB 010000000000000000-
   962 000011E4 000000000000000000-
   962 000011ED 000000000000010000-
   962 000011F6 000000000001000000-
   962 000011FF 010000000000000000-
   962 00001208 000000000000000000-
   962 00001211 000001000000000000-
   962 0000121A 000000000001000000-
   962 00001223 010000000000000000-
   962 0000122C 000000000000000100-
   962 00001235 000000000000000000-
   962 0000123E 000000000001000000-
   962 00001247 010000000000000000-
   962 00001250 000000000000000000-
   962 00001259 000000000000000000-
   962 00001262 000000000000000000-
   962 0000126B 00000000           
   964                                  font_z_K$pass:
   965 0000126F B8[6F110000]            mov eax, font_z_K
   966 00001274 A1[73110000]            mov eax, [font_z_K+4]
   967                                  
   968 00001279 E900010000              jmp font_z_L$pass
   969 0000127E 000000000000000000-     font_z_L: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   969 00001287 000000000000000000-
   969 00001290 000000000000000000-
   969 00001299 000000000000000000-
   969 000012A2 000000000100000000-
   969 000012AB 000000000000000000-
   969 000012B4 000000000000000000-
   969 000012BD 000000000000000000-
   969 000012C6 010000000000000000-
   969 000012CF 000000000000000000-
   969 000012D8 000000000000000000-
   969 000012E1 000000000001000000-
   969 000012EA 000000000000000000-
   969 000012F3 000000000000000000-
   969 000012FC 000000000000000000-
   969 00001305 000100000000000000-
   969 0000130E 000000000000000000-
   969 00001317 000000000000000000-
   969 00001320 000000000000010000-
   969 00001329 000000000000000000-
   969 00001332 000000000000000000-
   969 0000133B 000000000000000000-
   969 00001344 000001000000010000-
   969 0000134D 000100000001000000-
   969 00001356 000000000000000000-
   969 0000135F 000000000000000000-
   969 00001368 000000000000000000-
   969 00001371 000000000000000000-
   969 0000137A 00000000           
   971                                  font_z_L$pass:
   972 0000137E B8[7E120000]            mov eax, font_z_L
   973 00001383 A1[82120000]            mov eax, [font_z_L+4]
   974                                  
   975 00001388 E900010000              jmp font_z_M$pass
   976 0000138D 000000000000000000-     font_z_M: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   976 00001396 000000000000000000-
   976 0000139F 000000000000000000-
   976 000013A8 000000000000000000-
   976 000013B1 010000000000000000-
   976 000013BA 000000000000000000-
   976 000013C3 000001000000000000-
   976 000013CC 000000000001000000-
   976 000013D5 010000000000000000-
   976 000013DE 000000010000000100-
   976 000013E7 000000000000000000-
   976 000013F0 000100000000000000-
   976 000013F9 010000000100000000-
   976 00001402 000000010000000000-
   976 0000140B 000000000000010000-
   976 00001414 000000000000000000-
   976 0000141D 000000000000000001-
   976 00001426 000000000000000000-
   976 0000142F 000001000000000000-
   976 00001438 000000000000000000-
   976 00001441 000000000100000000-
   976 0000144A 000000000000000100-
   976 00001453 000000000000000000-
   976 0000145C 000000000000000000-
   976 00001465 010000000000000000-
   976 0000146E 000000000000000000-
   976 00001477 000000000000000000-
   976 00001480 000000000000000000-
   976 00001489 00000000           
   978                                  font_z_M$pass:
   979 0000148D B8[8D130000]            mov eax, font_z_M
   980 00001492 A1[91130000]            mov eax, [font_z_M+4]
   981                                  
   982 00001497 E900010000              jmp font_z_N$pass
   983 0000149C 000000000000000000-     font_z_N: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   983 000014A5 000000000000000000-
   983 000014AE 000000000000000000-
   983 000014B7 000000000000000000-
   983 000014C0 010000000000000000-
   983 000014C9 000000000000000000-
   983 000014D2 000001000000000000-
   983 000014DB 000000000001000000-
   983 000014E4 010000000000000000-
   983 000014ED 000000000000000100-
   983 000014F6 000000000000000000-
   983 000014FF 000100000000000000-
   983 00001508 010000000000000000-
   983 00001511 000000010000000000-
   983 0000151A 000000000000010000-
   983 00001523 000000000000000000-
   983 0000152C 010000000000000001-
   983 00001535 000000000000000000-
   983 0000153E 000001000000000000-
   983 00001547 000000000000000000-
   983 00001550 010000000100000000-
   983 00001559 000000000000000100-
   983 00001562 000000000000000000-
   983 0000156B 000000000000000000-
   983 00001574 010000000000000000-
   983 0000157D 000000000000000000-
   983 00001586 000000000000000000-
   983 0000158F 000000000000000000-
   983 00001598 00000000           
   985                                  font_z_N$pass:
   986 0000159C B8[9C140000]            mov eax, font_z_N
   987 000015A1 A1[A0140000]            mov eax, [font_z_N+4]
   988                                  
   989 000015A6 E900010000              jmp font_z_O$pass
   990 000015AB 000000000000000000-     font_z_O: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   990 000015B4 000000000000000000-
   990 000015BD 000000000000000000-
   990 000015C6 000000000000000000-
   990 000015CF 010000000100000001-
   990 000015D8 000000010000000100-
   990 000015E1 000001000000000000-
   990 000015EA 000000000001000000-
   990 000015F3 000000000000000000-
   990 000015FC 000000000000000100-
   990 00001605 000000000000000000-
   990 0000160E 000100000000000000-
   990 00001617 000000000000000000-
   990 00001620 000000010000000000-
   990 00001629 000000000000010000-
   990 00001632 000000000000000000-
   990 0000163B 000000000000000001-
   990 00001644 000000000000000000-
   990 0000164D 000001000000000000-
   990 00001656 000000000000000000-
   990 0000165F 000000000100000000-
   990 00001668 000000000000000100-
   990 00001671 000001000000010000-
   990 0000167A 000100000001000000-
   990 00001683 010000000000000000-
   990 0000168C 000000000000000000-
   990 00001695 000000000000000000-
   990 0000169E 000000000000000000-
   990 000016A7 00000000           
   992                                  font_z_O$pass:
   993 000016AB B8[AB150000]            mov eax, font_z_O
   994 000016B0 A1[AF150000]            mov eax, [font_z_O+4]
   995                                  
   996 000016B5 E900010000              jmp font_z_P$pass
   997 000016BA 000000000000000000-     font_z_P: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   997 000016C3 000000000000000000-
   997 000016CC 000000000000000000-
   997 000016D5 000000000000000000-
   997 000016DE 000000000100000001-
   997 000016E7 000000010000000000-
   997 000016F0 000000000000000000-
   997 000016F9 000000000000000000-
   997 00001702 010000000000000000-
   997 0000170B 000000010000000000-
   997 00001714 000000000000000000-
   997 0000171D 000000000001000000-
   997 00001726 000000000000000001-
   997 0000172F 000000000000000000-
   997 00001738 000000000000000000-
   997 00001741 000100000001000000-
   997 0000174A 010000000000000000-
   997 00001753 000000000000000000-
   997 0000175C 000000000000010000-
   997 00001765 000000000000000000-
   997 0000176E 000000000000000000-
   997 00001777 000000000000000000-
   997 00001780 000001000000000000-
   997 00001789 000000000000000000-
   997 00001792 000000000000000000-
   997 0000179B 000000000000000000-
   997 000017A4 000000000000000000-
   997 000017AD 000000000000000000-
   997 000017B6 00000000           
   999                                  font_z_P$pass:
  1000 000017BA B8[BA160000]            mov eax, font_z_P
  1001 000017BF A1[BE160000]            mov eax, [font_z_P+4]
  1002                                  
  1003 000017C4 E900010000              jmp font_z_Q$pass
  1004 000017C9 000000000000000000-     font_z_Q: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  1004 000017D2 000000000000000000-
  1004 000017DB 000000000000000000-
  1004 000017E4 000000000000000000-
  1004 000017ED 000000000000000001-
  1004 000017F6 000000010000000000-
  1004 000017FF 000000000000000000-
  1004 00001808 000000000000000000-
  1004 00001811 010000000000000000-
  1004 0000181A 000000010000000000-
  1004 00001823 000000000000000000-
  1004 0000182C 000100000000000000-
  1004 00001835 000000000000000000-
  1004 0000183E 000000010000000000-
  1004 00001847 000000000000010000-
  1004 00001850 000000000000000000-
  1004 00001859 010000000000000001-
  1004 00001862 000000000000000000-
  1004 0000186B 000000000000010000-
  1004 00001874 000000000000000000-
  1004 0000187D 010000000000000000-
  1004 00001886 000000000000000000-
  1004 0000188F 000000000000010000-
  1004 00001898 000100000000000000-
  1004 000018A1 010000000000000000-
  1004 000018AA 000000000000000000-
  1004 000018B3 000000000000000000-
  1004 000018BC 000000000000000000-
  1004 000018C5 00000000           
  1006                                  font_z_Q$pass:
  1007 000018C9 B8[C9170000]            mov eax, font_z_Q
  1008 000018CE A1[CD170000]            mov eax, [font_z_Q+4]
  1009                                  
  1010 000018D3 E900010000              jmp font_z_R$pass
  1011 000018D8 000000000000000000-     font_z_R: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  1011 000018E1 000000000000000000-
  1011 000018EA 000000000000000000-
  1011 000018F3 000000000000000000-
  1011 000018FC 000000000100000001-
  1011 00001905 000000010000000000-
  1011 0000190E 000000000000000000-
  1011 00001917 000000000000000000-
  1011 00001920 010000000000000000-
  1011 00001929 000000010000000000-
  1011 00001932 000000000000000000-
  1011 0000193B 000000000001000000-
  1011 00001944 000000000000000001-
  1011 0000194D 000000000000000000-
  1011 00001956 000000000000000000-
  1011 0000195F 000100000001000000-
  1011 00001968 010000000000000000-
  1011 00001971 000000000000000000-
  1011 0000197A 000000000000010000-
  1011 00001983 000000000000000000-
  1011 0000198C 010000000000000000-
  1011 00001995 000000000000000000-
  1011 0000199E 000001000000000000-
  1011 000019A7 000000000000000000-
  1011 000019B0 010000000000000000-
  1011 000019B9 000000000000000000-
  1011 000019C2 000000000000000000-
  1011 000019CB 000000000000000000-
  1011 000019D4 00000000           
  1013                                  font_z_R$pass:
  1014 000019D8 B8[D8180000]            mov eax, font_z_R
  1015 000019DD A1[DC180000]            mov eax, [font_z_R+4]
  1016                                  
  1017 000019E2 E900010000              jmp font_z_S$pass
  1018 000019E7 000000000000000000-     font_z_S: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  1018 000019F0 000000000000000000-
  1018 000019F9 000000000000000000-
  1018 00001A02 000000000000000000-
  1018 00001A0B 000000000100000001-
  1018 00001A14 000000010000000100-
  1018 00001A1D 000000000000000000-
  1018 00001A26 000000000001000000-
  1018 00001A2F 000000000000000000-
  1018 00001A38 000000000000000100-
  1018 00001A41 000000000000000000-
  1018 00001A4A 000000000001000000-
  1018 00001A53 010000000000000000-
  1018 00001A5C 000000000000000000-
  1018 00001A65 000000000000000000-
  1018 00001A6E 000000000000000000-
  1018 00001A77 010000000100000000-
  1018 00001A80 000000000000000000-
  1018 00001A89 000001000000000000-
  1018 00001A92 000000000000000000-
  1018 00001A9B 000000000100000000-
  1018 00001AA4 000000000000000000-
  1018 00001AAD 000001000000010000-
  1018 00001AB6 000100000001000000-
  1018 00001ABF 000000000000000000-
  1018 00001AC8 000000000000000000-
  1018 00001AD1 000000000000000000-
  1018 00001ADA 000000000000000000-
  1018 00001AE3 00000000           
  1020                                  font_z_S$pass:
  1021 00001AE7 B8[E7190000]            mov eax, font_z_S
  1022 00001AEC A1[EB190000]            mov eax, [font_z_S+4]
  1023                                  
  1024 00001AF1 E900010000              jmp font_z_T$pass
  1025 00001AF6 000000000000000000-     font_z_T: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  1025 00001AFF 000000000000000000-
  1025 00001B08 000000000000000000-
  1025 00001B11 000000000000000000-
  1025 00001B1A 010000000100000001-
  1025 00001B23 000000010000000100-
  1025 00001B2C 000000000000000000-
  1025 00001B35 000000000000000000-
  1025 00001B3E 000000000100000000-
  1025 00001B47 000000000000000000-
  1025 00001B50 000000000000000000-
  1025 00001B59 000000000000000000-
  1025 00001B62 010000000000000000-
  1025 00001B6B 000000000000000000-
  1025 00001B74 000000000000000000-
  1025 00001B7D 000000000001000000-
  1025 00001B86 000000000000000000-
  1025 00001B8F 000000000000000000-
  1025 00001B98 000000000000000000-
  1025 00001BA1 000100000000000000-
  1025 00001BAA 000000000000000000-
  1025 00001BB3 000000000000000000-
  1025 00001BBC 000000000000010000-
  1025 00001BC5 000000000000000000-
  1025 00001BCE 000000000000000000-
  1025 00001BD7 000000000000000000-
  1025 00001BE0 000000000000000000-
  1025 00001BE9 000000000000000000-
  1025 00001BF2 00000000           
  1027                                  font_z_T$pass:
  1028 00001BF6 B8[F61A0000]            mov eax, font_z_T
  1029 00001BFB A1[FA1A0000]            mov eax, [font_z_T+4]
  1030                                  
  1031 00001C00 E900010000              jmp font_z_U$pass
  1032 00001C05 000000000000000000-     font_z_U: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  1032 00001C0E 000000000000000000-
  1032 00001C17 000000000000000000-
  1032 00001C20 000000000000000000-
  1032 00001C29 010000000000000000-
  1032 00001C32 000000000000000000-
  1032 00001C3B 000001000000000000-
  1032 00001C44 000000000001000000-
  1032 00001C4D 000000000000000000-
  1032 00001C56 000000000000000100-
  1032 00001C5F 000000000000000000-
  1032 00001C68 000100000000000000-
  1032 00001C71 000000000000000000-
  1032 00001C7A 000000010000000000-
  1032 00001C83 000000000000010000-
  1032 00001C8C 000000000000000000-
  1032 00001C95 000000000000000001-
  1032 00001C9E 000000000000000000-
  1032 00001CA7 000000000000010000-
  1032 00001CB0 000000000000000000-
  1032 00001CB9 010000000000000000-
  1032 00001CC2 000000000000000000-
  1032 00001CCB 000000000000010000-
  1032 00001CD4 000100000000000000-
  1032 00001CDD 000000000000000000-
  1032 00001CE6 000000000000000000-
  1032 00001CEF 000000000000000000-
  1032 00001CF8 000000000000000000-
  1032 00001D01 00000000           
  1034                                  font_z_U$pass:
  1035 00001D05 B8[051C0000]            mov eax, font_z_U
  1036 00001D0A A1[091C0000]            mov eax, [font_z_U+4]
  1037                                  
  1038 00001D0F E900010000              jmp font_z_V$pass
  1039 00001D14 000000000000000000-     font_z_V: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  1039 00001D1D 000000000000000000-
  1039 00001D26 000000000000000000-
  1039 00001D2F 000000000000000000-
  1039 00001D38 010000000000000000-
  1039 00001D41 000000000000000000-
  1039 00001D4A 000001000000000000-
  1039 00001D53 000000000001000000-
  1039 00001D5C 000000000000000000-
  1039 00001D65 000000000000000100-
  1039 00001D6E 000000000000000000-
  1039 00001D77 000000000001000000-
  1039 00001D80 000000000000000001-
  1039 00001D89 000000000000000000-
  1039 00001D92 000000000000000000-
  1039 00001D9B 000100000000000000-
  1039 00001DA4 000000000100000000-
  1039 00001DAD 000000000000000000-
  1039 00001DB6 000000000000000000-
  1039 00001DBF 000100000001000000-
  1039 00001DC8 000000000000000000-
  1039 00001DD1 000000000000000000-
  1039 00001DDA 000000000000010000-
  1039 00001DE3 000100000000000000-
  1039 00001DEC 000000000000000000-
  1039 00001DF5 000000000000000000-
  1039 00001DFE 000000000000000000-
  1039 00001E07 000000000000000000-
  1039 00001E10 00000000           
  1041                                  font_z_V$pass:
  1042 00001E14 B8[141D0000]            mov eax, font_z_V
  1043 00001E19 A1[181D0000]            mov eax, [font_z_V+4]
  1044                                  
  1045 00001E1E E900010000              jmp font_z_W$pass
  1046 00001E23 000000000000000000-     font_z_W: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  1046 00001E2C 000000000000000000-
  1046 00001E35 000000000000000000-
  1046 00001E3E 000000000000000000-
  1046 00001E47 010000000000000000-
  1046 00001E50 000000000000000000-
  1046 00001E59 000001000000000000-
  1046 00001E62 000000000001000000-
  1046 00001E6B 000000000000000000-
  1046 00001E74 000000000000000100-
  1046 00001E7D 000000000000000000-
  1046 00001E86 000100000000000000-
  1046 00001E8F 000000000000000000-
  1046 00001E98 000000010000000000-
  1046 00001EA1 000000000000010000-
  1046 00001EAA 000000000001000000-
  1046 00001EB3 010000000000000001-
  1046 00001EBC 000000000000000000-
  1046 00001EC5 000001000000010000-
  1046 00001ECE 000000000000000000-
  1046 00001ED7 010000000100000000-
  1046 00001EE0 000000000000000100-
  1046 00001EE9 000000000000000000-
  1046 00001EF2 000000000000000000-
  1046 00001EFB 010000000000000000-
  1046 00001F04 000000000000000000-
  1046 00001F0D 000000000000000000-
  1046 00001F16 000000000000000000-
  1046 00001F1F 00000000           
  1048                                  font_z_W$pass:
  1049 00001F23 B8[231E0000]            mov eax, font_z_W
  1050 00001F28 A1[271E0000]            mov eax, [font_z_W+4]
  1051                                  
  1052 00001F2D E900010000              jmp font_z_X$pass
  1053 00001F32 000000000000000000-     font_z_X: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  1053 00001F3B 000000000000000000-
  1053 00001F44 000000000000000000-
  1053 00001F4D 000000000000000000-
  1053 00001F56 010000000000000000-
  1053 00001F5F 000000000000000000-
  1053 00001F68 000001000000000000-
  1053 00001F71 000000000000000000-
  1053 00001F7A 010000000000000000-
  1053 00001F83 000000010000000000-
  1053 00001F8C 000000000000000000-
  1053 00001F95 000000000000000000-
  1053 00001F9E 010000000100000000-
  1053 00001FA7 000000000000000000-
  1053 00001FB0 000000000000000000-
  1053 00001FB9 000000000001000000-
  1053 00001FC2 010000000000000000-
  1053 00001FCB 000000000000000000-
  1053 00001FD4 000000000000010000-
  1053 00001FDD 000000000000000000-
  1053 00001FE6 010000000000000000-
  1053 00001FEF 000000000000000100-
  1053 00001FF8 000000000000000000-
  1053 00002001 000000000000000000-
  1053 0000200A 010000000000000000-
  1053 00002013 000000000000000000-
  1053 0000201C 000000000000000000-
  1053 00002025 000000000000000000-
  1053 0000202E 00000000           
  1055                                  font_z_X$pass:
  1056 00002032 B8[321F0000]            mov eax, font_z_X
  1057 00002037 A1[361F0000]            mov eax, [font_z_X+4]
  1058                                  
  1059 0000203C E900010000              jmp font_z_Y$pass
  1060 00002041 000000000000000000-     font_z_Y: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  1060 0000204A 000000000000000000-
  1060 00002053 000000000000000000-
  1060 0000205C 000000000000000000-
  1060 00002065 010000000000000000-
  1060 0000206E 000000000000000100-
  1060 00002077 000000000000000000-
  1060 00002080 000000000000000000-
  1060 00002089 010000000000000001-
  1060 00002092 000000000000000000-
  1060 0000209B 000000000000000000-
  1060 000020A4 000000000000000000-
  1060 000020AD 010000000000000000-
  1060 000020B6 000000000000000000-
  1060 000020BF 000000000000000000-
  1060 000020C8 000000000001000000-
  1060 000020D1 000000000000000000-
  1060 000020DA 000000000000000000-
  1060 000020E3 000000000000000000-
  1060 000020EC 000100000000000000-
  1060 000020F5 000000000000000000-
  1060 000020FE 000000000000000000-
  1060 00002107 000000000000010000-
  1060 00002110 000000000000000000-
  1060 00002119 000000000000000000-
  1060 00002122 000000000000000000-
  1060 0000212B 000000000000000000-
  1060 00002134 000000000000000000-
  1060 0000213D 00000000           
  1062                                  font_z_Y$pass:
  1063 00002141 B8[41200000]            mov eax, font_z_Y
  1064 00002146 A1[45200000]            mov eax, [font_z_Y+4]
  1065                                  
  1066 0000214B E900010000              jmp font_z_Z$pass
  1067 00002150 000000000000000000-     font_z_Z: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  1067 00002159 000000000000000000-
  1067 00002162 000000000000000000-
  1067 0000216B 000000000000000000-
  1067 00002174 010000000100000001-
  1067 0000217D 000000010000000100-
  1067 00002186 000001000000000000-
  1067 0000218F 000000000000000000-
  1067 00002198 000000000000000000-
  1067 000021A1 000000010000000000-
  1067 000021AA 000000000000000000-
  1067 000021B3 000000000000000000-
  1067 000021BC 000000000100000000-
  1067 000021C5 000000000000000000-
  1067 000021CE 000000000000000000-
  1067 000021D7 000000000001000000-
  1067 000021E0 000000000000000000-
  1067 000021E9 000000000000000000-
  1067 000021F2 000000000000010000-
  1067 000021FB 000000000000000000-
  1067 00002204 000000000000000000-
  1067 0000220D 000000000000000100-
  1067 00002216 000001000000010000-
  1067 0000221F 000100000001000000-
  1067 00002228 010000000000000000-
  1067 00002231 000000000000000000-
  1067 0000223A 000000000000000000-
  1067 00002243 000000000000000000-
  1067 0000224C 00000000           
  1069                                  font_z_Z$pass:
  1070 00002250 B8[50210000]            mov eax, font_z_Z
  1071 00002255 A1[54210000]            mov eax, [font_z_Z+4]
  1072                                  
  1073 0000225A E900010000              jmp font_z_question$pass
  1074 0000225F 000000000000000000-     font_z_question: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 
  1074 00002268 000000000000000000-
  1074 00002271 000000000000000000-
  1074 0000227A 000000000000000000-
  1074 00002283 000000000100000001-
  1074 0000228C 000000010000000100-
  1074 00002295 000000000000000000-
  1074 0000229E 000000000001000000-
  1074 000022A7 000000000000000000-
  1074 000022B0 000000000000000100-
  1074 000022B9 000000000000000000-
  1074 000022C2 000000000000000000-
  1074 000022CB 000000000000000001-
  1074 000022D4 000000000000000000-
  1074 000022DD 000000000000000000-
  1074 000022E6 000000000000000000-
  1074 000022EF 010000000000000000-
  1074 000022F8 000000000000000000-
  1074 00002301 000000000000000000-
  1074 0000230A 000000000001000000-
  1074 00002313 000000000000000000-
  1074 0000231C 000000000000000000-
  1074 00002325 000000000000000000-
  1074 0000232E 000000000000000000-
  1074 00002337 000000000000000000-
  1074 00002340 000000000000000000-
  1074 00002349 000000000000010000-
  1074 00002352 000000000000000000-
  1074 0000235B 00000000           
  1076                                  font_z_question$pass:
  1077 0000235F B8[5F220000]            mov eax, font_z_question
  1078 00002364 A1[63220000]            mov eax, [font_z_question+4]
  1079                                  
  1080 00002369 E900010000              jmp font_z_space$pass
  1081 0000236E 000000000000000000-     font_z_space: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  1081 00002377 000000000000000000-
  1081 00002380 000000000000000000-
  1081 00002389 000000000000000000-
  1081 00002392 000000000000000000-
  1081 0000239B 000000000000000000-
  1081 000023A4 000000000000000000-
  1081 000023AD 000000000000000000-
  1081 000023B6 000000000000000000-
  1081 000023BF 000000000000000000-
  1081 000023C8 000000000000000000-
  1081 000023D1 000000000000000000-
  1081 000023DA 000000000000000000-
  1081 000023E3 000000000000000000-
  1081 000023EC 000000000000000000-
  1081 000023F5 000000000000000000-
  1081 000023FE 000000000000000000-
  1081 00002407 000000000000000000-
  1081 00002410 000000000000000000-
  1081 00002419 000000000000000000-
  1081 00002422 000000000000000000-
  1081 0000242B 000000000000000000-
  1081 00002434 000000000000000000-
  1081 0000243D 000000000000000000-
  1081 00002446 000000000000000000-
  1081 0000244F 000000000000000000-
  1081 00002458 000000000000000000-
  1081 00002461 000000000000000000-
  1081 0000246A 00000000           
  1083                                  font_z_space$pass:
  1084 0000246E B8[6E230000]            mov eax, font_z_space
  1085 00002473 A1[72230000]            mov eax, [font_z_space+4]
  1086                                  
  1087 00002478 E900010000              jmp font_z_add$pass
  1088 0000247D 000000000000000000-     font_z_add: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  1088 00002486 000000000000000000-
  1088 0000248F 000000000000000000-
  1088 00002498 000000000000000000-
  1088 000024A1 000000000000000001-
  1088 000024AA 000000010000000000-
  1088 000024B3 000000000000000000-
  1088 000024BC 000000000000000000-
  1088 000024C5 000000000100000001-
  1088 000024CE 000000000000000000-
  1088 000024D7 000000000000000000-
  1088 000024E0 000100000001000000-
  1088 000024E9 010000000100000001-
  1088 000024F2 000000010000000000-
  1088 000024FB 000000000000010000-
  1088 00002504 000100000001000000-
  1088 0000250D 010000000100000001-
  1088 00002516 000000000000000000-
  1088 0000251F 000000000000000000-
  1088 00002528 000100000001000000-
  1088 00002531 000000000000000000-
  1088 0000253A 000000000000000000-
  1088 00002543 000000000000010000-
  1088 0000254C 000100000000000000-
  1088 00002555 000000000000000000-
  1088 0000255E 000000000000000000-
  1088 00002567 000000000000000000-
  1088 00002570 000000000000000000-
  1088 00002579 00000000           
  1090                                  font_z_add$pass:
  1091 0000257D B8[7D240000]            mov eax, font_z_add
  1092 00002582 A1[81240000]            mov eax, [font_z_add+4]
  1093                                  
  1094 00002587 E900010000              jmp font_z_sub$pass
  1095 0000258C 000000000000000000-     font_z_sub: dd 0 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  1095 00002595 000000000000000000-
  1095 0000259E 000000000000000000-
  1095 000025A7 000000000000000000-
  1095 000025B0 000000000000000000-
  1095 000025B9 000000000000000000-
  1095 000025C2 000000000000000000-
  1095 000025CB 000000000000000000-
  1095 000025D4 000000000000000000-
  1095 000025DD 000000000000000000-
  1095 000025E6 000000000000000000-
  1095 000025EF 000100000001000000-
  1095 000025F8 010000000100000001-
  1095 00002601 000000010000000000-
  1095 0000260A 000000000000010000-
  1095 00002613 000100000001000000-
  1095 0000261C 010000000100000001-
  1095 00002625 000000000000000000-
  1095 0000262E 000000000000000000-
  1095 00002637 000000000000000000-
  1095 00002640 000000000000000000-
  1095 00002649 000000000000000000-
  1095 00002652 000000000000000000-
  1095 0000265B 000000000000000000-
  1095 00002664 000000000000000000-
  1095 0000266D 000000000000000000-
  1095 00002676 000000000000000000-
  1095 0000267F 000000000000000000-
  1095 00002688 00000000           
  1097                                  font_z_sub$pass:
  1098 0000268C B8[8C250000]            mov eax, font_z_sub
  1099 00002691 A1[90250000]            mov eax, [font_z_sub+4]
  1100                                  
  1101 00002696 E9A00F0000              jmp font_z_screen_buf$pass
  1102 0000269B 000000002000000020-     font_z_screen_buf: dd 0 32, 32, 32, 32, 33, 34, 35, 36, 37, 38, 39, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, ...
  1102 000026A4 000000200000002100-
  1102 000026AD 000022000000230000-
  1102 000026B6 002400000025000000-
  1102 000026BF 260000002700000020-
  1102 000026C8 000000200000002000-
  1102 000026D1 000020000000200000-
  1102 000026DA 002000000020000000-
  1102 000026E3 200000002000000020-
  1102 000026EC 000000200000002000-
  1102 000026F5 000020000000200000-
  1102 000026FE 002000000020000000-
  1102 00002707 200000002000000020-
  1102 00002710 000000200000002000-
  1102 00002719 000020000000200000-
  1102 00002722 002000000020000000-
  1102 0000272B 200000002000000020-
  1102 00002734 000000200000002000-
  1102 0000273D 000020000000200000-
  1102 00002746 002000000020000000-
  1102 0000274F 200000002000000020-
  1102 00002758 000000200000002000-
  1102 00002761 000020000000200000-
  1102 0000276A 002000000020000000-
  1102 00002773 200000002000000020-
  1102 0000277C 000000200000002000-
  1102 00002785 000020000000200000-
  1102 0000278E 002000000020000000-
  1102 00002797 200000002000000020-
  1102 000027A0 000000200000002000-
  1102 000027A9 000020000000200000-
  1102 000027B2 002000000020000000-
  1102 000027BB 200000002000000020-
  1102 000027C4 000000200000002000-
  1102 000027CD 000020000000200000-
  1102 000027D6 002000000020000000-
  1102 000027DF 200000002000000020-
  1102 000027E8 000000200000002000-
  1102 000027F1 000020000000200000-
  1102 000027FA 002000000020000000-
  1102 00002803 200000002000000020-
  1102 0000280C 000000200000002000-
  1102 00002815 000020000000200000-
  1102 0000281E 002000000020000000-
  1102 00002827 200000002000000020-
  1102 00002830 000000200000002000-
  1102 00002839 000020000000200000-
  1102 00002842 002000000020000000-
  1102 0000284B 200000002000000020-
  1102 00002854 000000200000002000-
  1102 0000285D 000020000000200000-
  1102 00002866 002000000020000000-
  1102 0000286F 200000002000000020-
  1102 00002878 000000200000002000-
  1102 00002881 000020000000200000-
  1102 0000288A 002000000020000000-
  1102 00002893 200000002000000020-
  1102 0000289C 000000200000002000-
  1102 000028A5 000020000000200000-
  1102 000028AE 002000000020000000-
  1102 000028B7 200000002000000020-
  1102 000028C0 000000200000002000-
  1102 000028C9 000020000000200000-
  1102 000028D2 002000000020000000-
  1102 000028DB 200000002000000020-
  1102 000028E4 000000200000002000-
  1102 000028ED 000020000000200000-
  1102 000028F6 002000000020000000-
  1102 000028FF 200000002000000020-
  1102 00002908 000000200000002000-
  1102 00002911 000020000000200000-
  1102 0000291A 002000000020000000-
  1102 00002923 200000002000000020-
  1102 0000292C 000000200000002000-
  1102 00002935 000020000000200000-
  1102 0000293E 002000000020000000-
  1102 00002947 200000002000000020-
  1102 00002950 000000200000002000-
  1102 00002959 000020000000200000-
  1102 00002962 002000000020000000-
  1102 0000296B 200000002000000020-
  1102 00002974 000000200000002000-
  1102 0000297D 000020000000200000-
  1102 00002986 002000000020000000-
  1102 0000298F 200000002000000020-
  1102 00002998 000000200000002000-
  1102 000029A1 000020000000200000-
  1102 000029AA 002000000020000000-
  1102 000029B3 200000002000000020-
  1102 000029BC 000000200000002000-
  1102 000029C5 000020000000200000-
  1102 000029CE 002000000020000000-
  1102 000029D7 200000002000000020-
  1102 000029E0 000000200000002000-
  1102 000029E9 000020000000200000-
  1102 000029F2 002000000020000000-
  1102 000029FB 200000002000000020-
  1102 00002A04 000000200000002000-
  1102 00002A0D 000020000000200000-
  1102 00002A16 002000000020000000-
  1102 00002A1F 200000002000000020-
  1102 00002A28 000000200000002000-
  1102 00002A31 000020000000200000-
  1102 00002A3A 002000000020000000-
  1102 00002A43 200000002000000020-
  1102 00002A4C 000000200000002000-
  1102 00002A55 000020000000200000-
  1102 00002A5E 002000000020000000-
  1102 00002A67 200000002000000020-
  1102 00002A70 000000200000002000-
  1102 00002A79 000020000000200000-
  1102 00002A82 002000000020000000-
  1102 00002A8B 200000002000000020-
  1102 00002A94 000000200000002000-
  1102 00002A9D 000020000000200000-
  1102 00002AA6 002000000020000000-
  1102 00002AAF 200000002000000020-
  1102 00002AB8 000000200000002000-
  1102 00002AC1 000020000000200000-
  1102 00002ACA 002000000020000000-
  1102 00002AD3 200000002000000020-
  1102 00002ADC 000000200000002000-
  1102 00002AE5 000020000000200000-
  1102 00002AEE 002000000020000000-
  1102 00002AF7 200000002000000020-
  1102 00002B00 000000200000002000-
  1102 00002B09 000020000000200000-
  1102 00002B12 002000000020000000-
  1102 00002B1B 200000002000000020-
  1102 00002B24 000000200000002000-
  1102 00002B2D 000020000000200000-
  1102 00002B36 002000000020000000-
  1102 00002B3F 200000002000000020-
  1102 00002B48 000000200000002000-
  1102 00002B51 000020000000200000-
  1102 00002B5A 002000000020000000-
  1102 00002B63 200000002000000020-
  1102 00002B6C 000000200000002000-
  1102 00002B75 000020000000200000-
  1102 00002B7E 002000000020000000-
  1102 00002B87 200000002000000020-
  1102 00002B90 000000200000002000-
  1102 00002B99 000020000000200000-
  1102 00002BA2 002000000020000000-
  1102 00002BAB 200000002000000020-
  1102 00002BB4 000000200000002000-
  1102 00002BBD 000020000000200000-
  1102 00002BC6 002000000020000000-
  1102 00002BCF 200000002000000020-
  1102 00002BD8 000000200000002000-
  1102 00002BE1 000020000000200000-
  1102 00002BEA 002000000020000000-
  1102 00002BF3 200000002000000020-
  1102 00002BFC 000000200000002000-
  1102 00002C05 000020000000200000-
  1102 00002C0E 002000000020000000-
  1102 00002C17 200000002000000020-
  1102 00002C20 000000200000002000-
  1102 00002C29 000020000000200000-
  1102 00002C32 002000000020000000-
  1102 00002C3B 200000002000000020-
  1102 00002C44 000000200000002000-
  1102 00002C4D 000020000000200000-
  1102 00002C56 002000000020000000-
  1102 00002C5F 200000002000000020-
  1102 00002C68 000000200000002000-
  1102 00002C71 000020000000200000-
  1102 00002C7A 002000000020000000-
  1102 00002C83 200000002000000020-
  1102 00002C8C 000000200000002000-
  1102 00002C95 000020000000200000-
  1102 00002C9E 002000000020000000-
  1102 00002CA7 200000002000000020-
  1102 00002CB0 000000200000002000-
  1102 00002CB9 000020000000200000-
  1102 00002CC2 002000000020000000-
  1102 00002CCB 200000002000000020-
  1102 00002CD4 000000200000002000-
  1102 00002CDD 000020000000200000-
  1102 00002CE6 002000000020000000-
  1102 00002CEF 200000002000000020-
  1102 00002CF8 000000200000002000-
  1102 00002D01 000020000000200000-
  1102 00002D0A 002000000020000000-
  1102 00002D13 200000002000000020-
  1102 00002D1C 000000200000002000-
  1102 00002D25 000020000000200000-
  1102 00002D2E 002000000020000000-
  1102 00002D37 200000002000000020-
  1102 00002D40 000000200000002000-
  1102 00002D49 000020000000200000-
  1102 00002D52 002000000020000000-
  1102 00002D5B 200000002000000020-
  1102 00002D64 000000200000002000-
  1102 00002D6D 000020000000200000-
  1102 00002D76 002000000020000000-
  1102 00002D7F 200000002000000020-
  1102 00002D88 000000200000002000-
  1102 00002D91 000020000000200000-
  1102 00002D9A 002000000020000000-
  1102 00002DA3 200000002000000020-
  1102 00002DAC 000000200000002000-
  1102 00002DB5 000020000000200000-
  1102 00002DBE 002000000020000000-
  1102 00002DC7 200000002000000020-
  1102 00002DD0 000000200000002000-
  1102 00002DD9 000020000000200000-
  1102 00002DE2 002000000020000000-
  1102 00002DEB 200000002000000020-
  1102 00002DF4 000000200000002000-
  1102 00002DFD 000020000000200000-
  1102 00002E06 002000000020000000-
  1102 00002E0F 200000002000000020-
  1102 00002E18 000000200000002000-
  1102 00002E21 000020000000200000-
  1102 00002E2A 002000000020000000-
  1102 00002E33 200000002000000020-
  1102 00002E3C 000000200000002000-
  1102 00002E45 000020000000200000-
  1102 00002E4E 002000000020000000-
  1102 00002E57 200000002000000020-
  1102 00002E60 000000200000002000-
  1102 00002E69 000020000000200000-
  1102 00002E72 002000000020000000-
  1102 00002E7B 200000002000000020-
  1102 00002E84 000000200000002000-
  1102 00002E8D 000020000000200000-
  1102 00002E96 002000000020000000-
  1102 00002E9F 200000002000000020-
  1102 00002EA8 000000200000002000-
  1102 00002EB1 000020000000200000-
  1102 00002EBA 002000000020000000-
  1102 00002EC3 200000002000000020-
  1102 00002ECC 000000200000002000-
  1102 00002ED5 000020000000200000-
  1102 00002EDE 002000000020000000-
  1102 00002EE7 200000002000000020-
  1102 00002EF0 000000200000002000-
  1102 00002EF9 000020000000200000-
  1102 00002F02 002000000020000000-
  1102 00002F0B 200000002000000020-
  1102 00002F14 000000200000002000-
  1102 00002F1D 000020000000200000-
  1102 00002F26 002000000020000000-
  1102 00002F2F 200000002000000020-
  1102 00002F38 000000200000002000-
  1102 00002F41 000020000000200000-
  1102 00002F4A 002000000020000000-
  1102 00002F53 200000002000000020-
  1102 00002F5C 000000200000002000-
  1102 00002F65 000020000000200000-
  1102 00002F6E 002000000020000000-
  1102 00002F77 200000002000000020-
  1102 00002F80 000000200000002000-
  1102 00002F89 000020000000200000-
  1102 00002F92 002000000020000000-
  1102 00002F9B 200000002000000020-
  1102 00002FA4 000000200000002000-
  1102 00002FAD 000020000000200000-
  1102 00002FB6 002000000020000000-
  1102 00002FBF 200000002000000020-
  1102 00002FC8 000000200000002000-
  1102 00002FD1 000020000000200000-
  1102 00002FDA 002000000020000000-
  1102 00002FE3 200000002000000020-
  1102 00002FEC 000000200000002000-
  1102 00002FF5 000020000000200000-
  1102 00002FFE 002000000020000000-
  1102 00003007 200000002000000020-
  1102 00003010 000000200000002000-
  1102 00003019 000020000000200000-
  1102 00003022 002000000020000000-
  1102 0000302B 200000002000000020-
  1102 00003034 000000200000002000-
  1102 0000303D 000020000000200000-
  1102 00003046 002000000020000000-
  1102 0000304F 200000002000000020-
  1102 00003058 000000200000002000-
  1102 00003061 000020000000200000-
  1102 0000306A 002000000020000000-
  1102 00003073 200000002000000020-
  1102 0000307C 000000200000002000-
  1102 00003085 000020000000200000-
  1102 0000308E 002000000020000000-
  1102 00003097 200000002000000020-
  1102 000030A0 000000200000002000-
  1102 000030A9 000020000000200000-
  1102 000030B2 002000000020000000-
  1102 000030BB 200000002000000020-
  1102 000030C4 000000200000002000-
  1102 000030CD 000020000000200000-
  1102 000030D6 002000000020000000-
  1102 000030DF 200000002000000020-
  1102 000030E8 000000200000002000-
  1102 000030F1 000020000000200000-
  1102 000030FA 002000000020000000-
  1102 00003103 200000002000000020-
  1102 0000310C 000000200000002000-
  1102 00003115 000020000000200000-
  1102 0000311E 002000000020000000-
  1102 00003127 200000002000000020-
  1102 00003130 000000200000002000-
  1102 00003139 000020000000200000-
  1102 00003142 002000000020000000-
  1102 0000314B 200000002000000020-
  1102 00003154 000000200000002000-
  1102 0000315D 000020000000200000-
  1102 00003166 002000000020000000-
  1102 0000316F 200000002000000020-
  1102 00003178 000000200000002000-
  1102 00003181 000020000000200000-
  1102 0000318A 002000000020000000-
  1102 00003193 200000002000000020-
  1102 0000319C 000000200000002000-
  1102 000031A5 000020000000200000-
  1102 000031AE 002000000020000000-
  1102 000031B7 200000002000000020-
  1102 000031C0 000000200000002000-
  1102 000031C9 000020000000200000-
  1102 000031D2 002000000020000000-
  1102 000031DB 200000002000000020-
  1102 000031E4 000000200000002000-
  1102 000031ED 000020000000200000-
  1102 000031F6 002000000020000000-
  1102 000031FF 200000002000000020-
  1102 00003208 000000200000002000-
  1102 00003211 000020000000200000-
  1102 0000321A 002000000020000000-
  1102 00003223 200000002000000020-
  1102 0000322C 000000200000002000-
  1102 00003235 000020000000200000-
  1102 0000323E 002000000020000000-
  1102 00003247 200000002000000020-
  1102 00003250 000000200000002000-
  1102 00003259 000020000000200000-
  1102 00003262 002000000020000000-
  1102 0000326B 200000002000000020-
  1102 00003274 000000200000002000-
  1102 0000327D 000020000000200000-
  1102 00003286 002000000020000000-
  1102 0000328F 200000002000000020-
  1102 00003298 000000200000002000-
  1102 000032A1 000020000000200000-
  1102 000032AA 002000000020000000-
  1102 000032B3 200000002000000020-
  1102 000032BC 000000200000002000-
  1102 000032C5 000020000000200000-
  1102 000032CE 002000000020000000-
  1102 000032D7 200000002000000020-
  1102 000032E0 000000200000002000-
  1102 000032E9 000020000000200000-
  1102 000032F2 002000000020000000-
  1102 000032FB 200000002000000020-
  1102 00003304 000000200000002000-
  1102 0000330D 000020000000200000-
  1102 00003316 002000000020000000-
  1102 0000331F 200000002000000020-
  1102 00003328 000000200000002000-
  1102 00003331 000020000000200000-
  1102 0000333A 002000000020000000-
  1102 00003343 200000002000000020-
  1102 0000334C 000000200000002000-
  1102 00003355 000020000000200000-
  1102 0000335E 002000000020000000-
  1102 00003367 200000002000000020-
  1102 00003370 000000200000002000-
  1102 00003379 000020000000200000-
  1102 00003382 002000000020000000-
  1102 0000338B 200000002000000020-
  1102 00003394 000000200000002000-
  1102 0000339D 000020000000200000-
  1102 000033A6 002000000020000000-
  1102 000033AF 200000002000000020-
  1102 000033B8 000000200000002000-
  1102 000033C1 000020000000200000-
  1102 000033CA 002000000020000000-
  1102 000033D3 200000002000000020-
  1102 000033DC 000000200000002000-
  1102 000033E5 000020000000200000-
  1102 000033EE 002000000020000000-
  1102 000033F7 200000002000000020-
  1102 00003400 000000200000002000-
  1102 00003409 000020000000200000-
  1102 00003412 002000000020000000-
  1102 0000341B 200000002000000020-
  1102 00003424 000000200000002000-
  1102 0000342D 000020000000200000-
  1102 00003436 002000000020000000-
  1102 0000343F 200000002000000020-
  1102 00003448 000000200000002000-
  1102 00003451 000020000000200000-
  1102 0000345A 002000000020000000-
  1102 00003463 200000002000000020-
  1102 0000346C 000000200000002000-
  1102 00003475 000020000000200000-
  1102 0000347E 002000000020000000-
  1102 00003487 200000002000000020-
  1102 00003490 000000200000002000-
  1102 00003499 000020000000200000-
  1102 000034A2 002000000020000000-
  1102 000034AB 200000002000000020-
  1102 000034B4 000000200000002000-
  1102 000034BD 000020000000200000-
  1102 000034C6 002000000020000000-
  1102 000034CF 200000002000000020-
  1102 000034D8 000000200000002000-
  1102 000034E1 000020000000200000-
  1102 000034EA 002000000020000000-
  1102 000034F3 200000002000000020-
  1102 000034FC 000000200000002000-
  1102 00003505 000020000000200000-
  1102 0000350E 002000000020000000-
  1102 00003517 200000002000000020-
  1102 00003520 000000200000002000-
  1102 00003529 000020000000200000-
  1102 00003532 002000000020000000-
  1102 0000353B 200000002000000020-
  1102 00003544 000000200000002000-
  1102 0000354D 000020000000200000-
  1102 00003556 002000000020000000-
  1102 0000355F 200000002000000020-
  1102 00003568 000000200000002000-
  1102 00003571 000020000000200000-
  1102 0000357A 002000000020000000-
  1102 00003583 200000002000000020-
  1102 0000358C 000000200000002000-
  1102 00003595 000020000000200000-
  1102 0000359E 002000000020000000-
  1102 000035A7 200000002000000020-
  1102 000035B0 000000200000002000-
  1102 000035B9 000020000000200000-
  1102 000035C2 002000000020000000-
  1102 000035CB 200000002000000020-
  1102 000035D4 000000200000002000-
  1102 000035DD 000020000000200000-
  1102 000035E6 002000000020000000-
  1102 000035EF 200000002000000020-
  1102 000035F8 000000200000002000-
  1102 00003601 000020000000200000-
  1102 0000360A 002000000020000000-
  1102 00003613 200000002000000020-
  1102 0000361C 000000200000002000-
  1102 00003625 000020000000200000-
  1102 0000362E 002000000020000000-
  1102 00003637 20000000           
  1104                                  font_z_screen_buf$pass:
  1105 0000363B B8[9B260000]            mov eax, font_z_screen_buf
  1106 00003640 A1[9F260000]            mov eax, [font_z_screen_buf+4]
  1107                                  
  1108                                  
  1109                                  ;############[fun begin]getAddrByAscii############
  1110 00003645 E955050000              jmp font_z_getAddrByAscii$pass
  1111                                  font_z_getAddrByAscii:
  1112 0000364A 5D                      pop ebp
  1113                                  ;param: ascii
  1114 0000364B EB04                    jmp font_z_getAddrByAscii_ascii$pass
  1115 0000364D 00000000                font_z_getAddrByAscii_ascii: dd 0
  1116                                  font_z_getAddrByAscii_ascii$pass:
  1117 00003651 58                      pop eax
  1118 00003652 A3[4D360000]            mov [font_z_getAddrByAscii_ascii], eax
  1119 00003657 55                      push ebp
  1120                                  ;########## font_z_getAddrByAscii_if#r1_$start ##########
  1121 00003658 A1[4D360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1122 0000365D 50                      push eax
  1123 0000365E B820000000              mov eax, 32
  1124 00003663 50                      push eax
  1125 00003664 5B                      pop ebx
  1126 00003665 58                      pop eax
  1127 00003666 39D8                    cmp eax, ebx
  1128 00003668 7407                    je font_z_getAddrByAscii_if#r1_equ#r2$true
  1129 0000366A B800000000              mov eax, 0
  1130 0000366F EB05                    jmp font_z_getAddrByAscii_if#r1_equ#r2$false
  1131                                  font_z_getAddrByAscii_if#r1_equ#r2$true:
  1132 00003671 B801000000              mov eax, 1
  1133                                  font_z_getAddrByAscii_if#r1_equ#r2$false:
  1134 00003676 50                      push eax
  1135 00003677 58                      pop eax
  1136 00003678 83F800                  cmp eax, 0
  1137 0000367B 740D                    je font_z_getAddrByAscii_if#r1_$else
  1138 0000367D A1[6E230000]            mov eax, [font_z_space]
  1139 00003682 50                      push eax
  1140 00003683 58                      pop eax
  1141 00003684 5D                      pop ebp
  1142 00003685 50                      push eax
  1143 00003686 55                      push ebp
  1144 00003687 C3                      ret
  1145 00003688 EB00                    jmp font_z_getAddrByAscii_if#r1_$end
  1146                                  font_z_getAddrByAscii_if#r1_$else:
  1147                                  font_z_getAddrByAscii_if#r1_$end:
  1148                                  ;========== font_z_getAddrByAscii_if#r1_$end ==========
  1149                                  
  1150                                  ;########## font_z_getAddrByAscii_if#r3_$start ##########
  1151 0000368A A1[4D360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1152 0000368F 50                      push eax
  1153 00003690 B841000000              mov eax, 65
  1154 00003695 50                      push eax
  1155 00003696 5B                      pop ebx
  1156 00003697 58                      pop eax
  1157 00003698 39D8                    cmp eax, ebx
  1158 0000369A 7407                    je font_z_getAddrByAscii_if#r3_equ#r4$true
  1159 0000369C B800000000              mov eax, 0
  1160 000036A1 EB05                    jmp font_z_getAddrByAscii_if#r3_equ#r4$false
  1161                                  font_z_getAddrByAscii_if#r3_equ#r4$true:
  1162 000036A3 B801000000              mov eax, 1
  1163                                  font_z_getAddrByAscii_if#r3_equ#r4$false:
  1164 000036A8 50                      push eax
  1165 000036A9 58                      pop eax
  1166 000036AA 83F800                  cmp eax, 0
  1167 000036AD 740D                    je font_z_getAddrByAscii_if#r3_$else
  1168 000036AF A1[D9060000]            mov eax, [font_z_A]
  1169 000036B4 50                      push eax
  1170 000036B5 58                      pop eax
  1171 000036B6 5D                      pop ebp
  1172 000036B7 50                      push eax
  1173 000036B8 55                      push ebp
  1174 000036B9 C3                      ret
  1175 000036BA EB00                    jmp font_z_getAddrByAscii_if#r3_$end
  1176                                  font_z_getAddrByAscii_if#r3_$else:
  1177                                  font_z_getAddrByAscii_if#r3_$end:
  1178                                  ;========== font_z_getAddrByAscii_if#r3_$end ==========
  1179                                  
  1180                                  ;########## font_z_getAddrByAscii_if#r5_$start ##########
  1181 000036BC A1[4D360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1182 000036C1 50                      push eax
  1183 000036C2 B842000000              mov eax, 66
  1184 000036C7 50                      push eax
  1185 000036C8 5B                      pop ebx
  1186 000036C9 58                      pop eax
  1187 000036CA 39D8                    cmp eax, ebx
  1188 000036CC 7407                    je font_z_getAddrByAscii_if#r5_equ#r6$true
  1189 000036CE B800000000              mov eax, 0
  1190 000036D3 EB05                    jmp font_z_getAddrByAscii_if#r5_equ#r6$false
  1191                                  font_z_getAddrByAscii_if#r5_equ#r6$true:
  1192 000036D5 B801000000              mov eax, 1
  1193                                  font_z_getAddrByAscii_if#r5_equ#r6$false:
  1194 000036DA 50                      push eax
  1195 000036DB 58                      pop eax
  1196 000036DC 83F800                  cmp eax, 0
  1197 000036DF 740D                    je font_z_getAddrByAscii_if#r5_$else
  1198 000036E1 A1[E8070000]            mov eax, [font_z_B]
  1199 000036E6 50                      push eax
  1200 000036E7 58                      pop eax
  1201 000036E8 5D                      pop ebp
  1202 000036E9 50                      push eax
  1203 000036EA 55                      push ebp
  1204 000036EB C3                      ret
  1205 000036EC EB00                    jmp font_z_getAddrByAscii_if#r5_$end
  1206                                  font_z_getAddrByAscii_if#r5_$else:
  1207                                  font_z_getAddrByAscii_if#r5_$end:
  1208                                  ;========== font_z_getAddrByAscii_if#r5_$end ==========
  1209                                  
  1210                                  ;########## font_z_getAddrByAscii_if#r7_$start ##########
  1211 000036EE A1[4D360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1212 000036F3 50                      push eax
  1213 000036F4 B843000000              mov eax, 67
  1214 000036F9 50                      push eax
  1215 000036FA 5B                      pop ebx
  1216 000036FB 58                      pop eax
  1217 000036FC 39D8                    cmp eax, ebx
  1218 000036FE 7407                    je font_z_getAddrByAscii_if#r7_equ#r8$true
  1219 00003700 B800000000              mov eax, 0
  1220 00003705 EB05                    jmp font_z_getAddrByAscii_if#r7_equ#r8$false
  1221                                  font_z_getAddrByAscii_if#r7_equ#r8$true:
  1222 00003707 B801000000              mov eax, 1
  1223                                  font_z_getAddrByAscii_if#r7_equ#r8$false:
  1224 0000370C 50                      push eax
  1225 0000370D 58                      pop eax
  1226 0000370E 83F800                  cmp eax, 0
  1227 00003711 740D                    je font_z_getAddrByAscii_if#r7_$else
  1228 00003713 A1[F7080000]            mov eax, [font_z_C]
  1229 00003718 50                      push eax
  1230 00003719 58                      pop eax
  1231 0000371A 5D                      pop ebp
  1232 0000371B 50                      push eax
  1233 0000371C 55                      push ebp
  1234 0000371D C3                      ret
  1235 0000371E EB00                    jmp font_z_getAddrByAscii_if#r7_$end
  1236                                  font_z_getAddrByAscii_if#r7_$else:
  1237                                  font_z_getAddrByAscii_if#r7_$end:
  1238                                  ;========== font_z_getAddrByAscii_if#r7_$end ==========
  1239                                  
  1240                                  ;########## font_z_getAddrByAscii_if#r9_$start ##########
  1241 00003720 A1[4D360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1242 00003725 50                      push eax
  1243 00003726 B844000000              mov eax, 68
  1244 0000372B 50                      push eax
  1245 0000372C 5B                      pop ebx
  1246 0000372D 58                      pop eax
  1247 0000372E 39D8                    cmp eax, ebx
  1248 00003730 7407                    je font_z_getAddrByAscii_if#r9_equ#r01$true
  1249 00003732 B800000000              mov eax, 0
  1250 00003737 EB05                    jmp font_z_getAddrByAscii_if#r9_equ#r01$false
  1251                                  font_z_getAddrByAscii_if#r9_equ#r01$true:
  1252 00003739 B801000000              mov eax, 1
  1253                                  font_z_getAddrByAscii_if#r9_equ#r01$false:
  1254 0000373E 50                      push eax
  1255 0000373F 58                      pop eax
  1256 00003740 83F800                  cmp eax, 0
  1257 00003743 740D                    je font_z_getAddrByAscii_if#r9_$else
  1258 00003745 A1[060A0000]            mov eax, [font_z_D]
  1259 0000374A 50                      push eax
  1260 0000374B 58                      pop eax
  1261 0000374C 5D                      pop ebp
  1262 0000374D 50                      push eax
  1263 0000374E 55                      push ebp
  1264 0000374F C3                      ret
  1265 00003750 EB00                    jmp font_z_getAddrByAscii_if#r9_$end
  1266                                  font_z_getAddrByAscii_if#r9_$else:
  1267                                  font_z_getAddrByAscii_if#r9_$end:
  1268                                  ;========== font_z_getAddrByAscii_if#r9_$end ==========
  1269                                  
  1270                                  ;########## font_z_getAddrByAscii_if#r11_$start ##########
  1271 00003752 A1[4D360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1272 00003757 50                      push eax
  1273 00003758 B845000000              mov eax, 69
  1274 0000375D 50                      push eax
  1275 0000375E 5B                      pop ebx
  1276 0000375F 58                      pop eax
  1277 00003760 39D8                    cmp eax, ebx
  1278 00003762 7407                    je font_z_getAddrByAscii_if#r11_equ#r21$true
  1279 00003764 B800000000              mov eax, 0
  1280 00003769 EB05                    jmp font_z_getAddrByAscii_if#r11_equ#r21$false
  1281                                  font_z_getAddrByAscii_if#r11_equ#r21$true:
  1282 0000376B B801000000              mov eax, 1
  1283                                  font_z_getAddrByAscii_if#r11_equ#r21$false:
  1284 00003770 50                      push eax
  1285 00003771 58                      pop eax
  1286 00003772 83F800                  cmp eax, 0
  1287 00003775 740D                    je font_z_getAddrByAscii_if#r11_$else
  1288 00003777 A1[150B0000]            mov eax, [font_z_E]
  1289 0000377C 50                      push eax
  1290 0000377D 58                      pop eax
  1291 0000377E 5D                      pop ebp
  1292 0000377F 50                      push eax
  1293 00003780 55                      push ebp
  1294 00003781 C3                      ret
  1295 00003782 EB00                    jmp font_z_getAddrByAscii_if#r11_$end
  1296                                  font_z_getAddrByAscii_if#r11_$else:
  1297                                  font_z_getAddrByAscii_if#r11_$end:
  1298                                  ;========== font_z_getAddrByAscii_if#r11_$end ==========
  1299                                  
  1300                                  ;########## font_z_getAddrByAscii_if#r31_$start ##########
  1301 00003784 A1[4D360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1302 00003789 50                      push eax
  1303 0000378A B846000000              mov eax, 70
  1304 0000378F 50                      push eax
  1305 00003790 5B                      pop ebx
  1306 00003791 58                      pop eax
  1307 00003792 39D8                    cmp eax, ebx
  1308 00003794 7407                    je font_z_getAddrByAscii_if#r31_equ#r41$true
  1309 00003796 B800000000              mov eax, 0
  1310 0000379B EB05                    jmp font_z_getAddrByAscii_if#r31_equ#r41$false
  1311                                  font_z_getAddrByAscii_if#r31_equ#r41$true:
  1312 0000379D B801000000              mov eax, 1
  1313                                  font_z_getAddrByAscii_if#r31_equ#r41$false:
  1314 000037A2 50                      push eax
  1315 000037A3 58                      pop eax
  1316 000037A4 83F800                  cmp eax, 0
  1317 000037A7 740D                    je font_z_getAddrByAscii_if#r31_$else
  1318 000037A9 A1[240C0000]            mov eax, [font_z_F]
  1319 000037AE 50                      push eax
  1320 000037AF 58                      pop eax
  1321 000037B0 5D                      pop ebp
  1322 000037B1 50                      push eax
  1323 000037B2 55                      push ebp
  1324 000037B3 C3                      ret
  1325 000037B4 EB00                    jmp font_z_getAddrByAscii_if#r31_$end
  1326                                  font_z_getAddrByAscii_if#r31_$else:
  1327                                  font_z_getAddrByAscii_if#r31_$end:
  1328                                  ;========== font_z_getAddrByAscii_if#r31_$end ==========
  1329                                  
  1330                                  ;########## font_z_getAddrByAscii_if#r51_$start ##########
  1331 000037B6 A1[4D360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1332 000037BB 50                      push eax
  1333 000037BC B847000000              mov eax, 71
  1334 000037C1 50                      push eax
  1335 000037C2 5B                      pop ebx
  1336 000037C3 58                      pop eax
  1337 000037C4 39D8                    cmp eax, ebx
  1338 000037C6 7407                    je font_z_getAddrByAscii_if#r51_equ#r61$true
  1339 000037C8 B800000000              mov eax, 0
  1340 000037CD EB05                    jmp font_z_getAddrByAscii_if#r51_equ#r61$false
  1341                                  font_z_getAddrByAscii_if#r51_equ#r61$true:
  1342 000037CF B801000000              mov eax, 1
  1343                                  font_z_getAddrByAscii_if#r51_equ#r61$false:
  1344 000037D4 50                      push eax
  1345 000037D5 58                      pop eax
  1346 000037D6 83F800                  cmp eax, 0
  1347 000037D9 740D                    je font_z_getAddrByAscii_if#r51_$else
  1348 000037DB A1[330D0000]            mov eax, [font_z_G]
  1349 000037E0 50                      push eax
  1350 000037E1 58                      pop eax
  1351 000037E2 5D                      pop ebp
  1352 000037E3 50                      push eax
  1353 000037E4 55                      push ebp
  1354 000037E5 C3                      ret
  1355 000037E6 EB00                    jmp font_z_getAddrByAscii_if#r51_$end
  1356                                  font_z_getAddrByAscii_if#r51_$else:
  1357                                  font_z_getAddrByAscii_if#r51_$end:
  1358                                  ;========== font_z_getAddrByAscii_if#r51_$end ==========
  1359                                  
  1360                                  ;########## font_z_getAddrByAscii_if#r71_$start ##########
  1361 000037E8 A1[4D360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1362 000037ED 50                      push eax
  1363 000037EE B848000000              mov eax, 72
  1364 000037F3 50                      push eax
  1365 000037F4 5B                      pop ebx
  1366 000037F5 58                      pop eax
  1367 000037F6 39D8                    cmp eax, ebx
  1368 000037F8 7407                    je font_z_getAddrByAscii_if#r71_equ#r81$true
  1369 000037FA B800000000              mov eax, 0
  1370 000037FF EB05                    jmp font_z_getAddrByAscii_if#r71_equ#r81$false
  1371                                  font_z_getAddrByAscii_if#r71_equ#r81$true:
  1372 00003801 B801000000              mov eax, 1
  1373                                  font_z_getAddrByAscii_if#r71_equ#r81$false:
  1374 00003806 50                      push eax
  1375 00003807 58                      pop eax
  1376 00003808 83F800                  cmp eax, 0
  1377 0000380B 740D                    je font_z_getAddrByAscii_if#r71_$else
  1378 0000380D A1[420E0000]            mov eax, [font_z_H]
  1379 00003812 50                      push eax
  1380 00003813 58                      pop eax
  1381 00003814 5D                      pop ebp
  1382 00003815 50                      push eax
  1383 00003816 55                      push ebp
  1384 00003817 C3                      ret
  1385 00003818 EB00                    jmp font_z_getAddrByAscii_if#r71_$end
  1386                                  font_z_getAddrByAscii_if#r71_$else:
  1387                                  font_z_getAddrByAscii_if#r71_$end:
  1388                                  ;========== font_z_getAddrByAscii_if#r71_$end ==========
  1389                                  
  1390                                  ;########## font_z_getAddrByAscii_if#r91_$start ##########
  1391 0000381A A1[4D360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1392 0000381F 50                      push eax
  1393 00003820 B849000000              mov eax, 73
  1394 00003825 50                      push eax
  1395 00003826 5B                      pop ebx
  1396 00003827 58                      pop eax
  1397 00003828 39D8                    cmp eax, ebx
  1398 0000382A 7407                    je font_z_getAddrByAscii_if#r91_equ#r02$true
  1399 0000382C B800000000              mov eax, 0
  1400 00003831 EB05                    jmp font_z_getAddrByAscii_if#r91_equ#r02$false
  1401                                  font_z_getAddrByAscii_if#r91_equ#r02$true:
  1402 00003833 B801000000              mov eax, 1
  1403                                  font_z_getAddrByAscii_if#r91_equ#r02$false:
  1404 00003838 50                      push eax
  1405 00003839 58                      pop eax
  1406 0000383A 83F800                  cmp eax, 0
  1407 0000383D 740D                    je font_z_getAddrByAscii_if#r91_$else
  1408 0000383F A1[510F0000]            mov eax, [font_z_I]
  1409 00003844 50                      push eax
  1410 00003845 58                      pop eax
  1411 00003846 5D                      pop ebp
  1412 00003847 50                      push eax
  1413 00003848 55                      push ebp
  1414 00003849 C3                      ret
  1415 0000384A EB00                    jmp font_z_getAddrByAscii_if#r91_$end
  1416                                  font_z_getAddrByAscii_if#r91_$else:
  1417                                  font_z_getAddrByAscii_if#r91_$end:
  1418                                  ;========== font_z_getAddrByAscii_if#r91_$end ==========
  1419                                  
  1420                                  ;########## font_z_getAddrByAscii_if#r12_$start ##########
  1421 0000384C A1[4D360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1422 00003851 50                      push eax
  1423 00003852 B84A000000              mov eax, 74
  1424 00003857 50                      push eax
  1425 00003858 5B                      pop ebx
  1426 00003859 58                      pop eax
  1427 0000385A 39D8                    cmp eax, ebx
  1428 0000385C 7407                    je font_z_getAddrByAscii_if#r12_equ#r22$true
  1429 0000385E B800000000              mov eax, 0
  1430 00003863 EB05                    jmp font_z_getAddrByAscii_if#r12_equ#r22$false
  1431                                  font_z_getAddrByAscii_if#r12_equ#r22$true:
  1432 00003865 B801000000              mov eax, 1
  1433                                  font_z_getAddrByAscii_if#r12_equ#r22$false:
  1434 0000386A 50                      push eax
  1435 0000386B 58                      pop eax
  1436 0000386C 83F800                  cmp eax, 0
  1437 0000386F 740D                    je font_z_getAddrByAscii_if#r12_$else
  1438 00003871 A1[330D0000]            mov eax, [font_z_G]
  1439 00003876 50                      push eax
  1440 00003877 58                      pop eax
  1441 00003878 5D                      pop ebp
  1442 00003879 50                      push eax
  1443 0000387A 55                      push ebp
  1444 0000387B C3                      ret
  1445 0000387C EB00                    jmp font_z_getAddrByAscii_if#r12_$end
  1446                                  font_z_getAddrByAscii_if#r12_$else:
  1447                                  font_z_getAddrByAscii_if#r12_$end:
  1448                                  ;========== font_z_getAddrByAscii_if#r12_$end ==========
  1449                                  
  1450                                  ;########## font_z_getAddrByAscii_if#r32_$start ##########
  1451 0000387E A1[4D360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1452 00003883 50                      push eax
  1453 00003884 B84B000000              mov eax, 75
  1454 00003889 50                      push eax
  1455 0000388A 5B                      pop ebx
  1456 0000388B 58                      pop eax
  1457 0000388C 39D8                    cmp eax, ebx
  1458 0000388E 7407                    je font_z_getAddrByAscii_if#r32_equ#r42$true
  1459 00003890 B800000000              mov eax, 0
  1460 00003895 EB05                    jmp font_z_getAddrByAscii_if#r32_equ#r42$false
  1461                                  font_z_getAddrByAscii_if#r32_equ#r42$true:
  1462 00003897 B801000000              mov eax, 1
  1463                                  font_z_getAddrByAscii_if#r32_equ#r42$false:
  1464 0000389C 50                      push eax
  1465 0000389D 58                      pop eax
  1466 0000389E 83F800                  cmp eax, 0
  1467 000038A1 740D                    je font_z_getAddrByAscii_if#r32_$else
  1468 000038A3 A1[6F110000]            mov eax, [font_z_K]
  1469 000038A8 50                      push eax
  1470 000038A9 58                      pop eax
  1471 000038AA 5D                      pop ebp
  1472 000038AB 50                      push eax
  1473 000038AC 55                      push ebp
  1474 000038AD C3                      ret
  1475 000038AE EB00                    jmp font_z_getAddrByAscii_if#r32_$end
  1476                                  font_z_getAddrByAscii_if#r32_$else:
  1477                                  font_z_getAddrByAscii_if#r32_$end:
  1478                                  ;========== font_z_getAddrByAscii_if#r32_$end ==========
  1479                                  
  1480                                  ;########## font_z_getAddrByAscii_if#r52_$start ##########
  1481 000038B0 A1[4D360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1482 000038B5 50                      push eax
  1483 000038B6 B84C000000              mov eax, 76
  1484 000038BB 50                      push eax
  1485 000038BC 5B                      pop ebx
  1486 000038BD 58                      pop eax
  1487 000038BE 39D8                    cmp eax, ebx
  1488 000038C0 7407                    je font_z_getAddrByAscii_if#r52_equ#r62$true
  1489 000038C2 B800000000              mov eax, 0
  1490 000038C7 EB05                    jmp font_z_getAddrByAscii_if#r52_equ#r62$false
  1491                                  font_z_getAddrByAscii_if#r52_equ#r62$true:
  1492 000038C9 B801000000              mov eax, 1
  1493                                  font_z_getAddrByAscii_if#r52_equ#r62$false:
  1494 000038CE 50                      push eax
  1495 000038CF 58                      pop eax
  1496 000038D0 83F800                  cmp eax, 0
  1497 000038D3 740D                    je font_z_getAddrByAscii_if#r52_$else
  1498 000038D5 A1[7E120000]            mov eax, [font_z_L]
  1499 000038DA 50                      push eax
  1500 000038DB 58                      pop eax
  1501 000038DC 5D                      pop ebp
  1502 000038DD 50                      push eax
  1503 000038DE 55                      push ebp
  1504 000038DF C3                      ret
  1505 000038E0 EB00                    jmp font_z_getAddrByAscii_if#r52_$end
  1506                                  font_z_getAddrByAscii_if#r52_$else:
  1507                                  font_z_getAddrByAscii_if#r52_$end:
  1508                                  ;========== font_z_getAddrByAscii_if#r52_$end ==========
  1509                                  
  1510                                  ;########## font_z_getAddrByAscii_if#r72_$start ##########
  1511 000038E2 A1[4D360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1512 000038E7 50                      push eax
  1513 000038E8 B84D000000              mov eax, 77
  1514 000038ED 50                      push eax
  1515 000038EE 5B                      pop ebx
  1516 000038EF 58                      pop eax
  1517 000038F0 39D8                    cmp eax, ebx
  1518 000038F2 7407                    je font_z_getAddrByAscii_if#r72_equ#r82$true
  1519 000038F4 B800000000              mov eax, 0
  1520 000038F9 EB05                    jmp font_z_getAddrByAscii_if#r72_equ#r82$false
  1521                                  font_z_getAddrByAscii_if#r72_equ#r82$true:
  1522 000038FB B801000000              mov eax, 1
  1523                                  font_z_getAddrByAscii_if#r72_equ#r82$false:
  1524 00003900 50                      push eax
  1525 00003901 58                      pop eax
  1526 00003902 83F800                  cmp eax, 0
  1527 00003905 740D                    je font_z_getAddrByAscii_if#r72_$else
  1528 00003907 A1[8D130000]            mov eax, [font_z_M]
  1529 0000390C 50                      push eax
  1530 0000390D 58                      pop eax
  1531 0000390E 5D                      pop ebp
  1532 0000390F 50                      push eax
  1533 00003910 55                      push ebp
  1534 00003911 C3                      ret
  1535 00003912 EB00                    jmp font_z_getAddrByAscii_if#r72_$end
  1536                                  font_z_getAddrByAscii_if#r72_$else:
  1537                                  font_z_getAddrByAscii_if#r72_$end:
  1538                                  ;========== font_z_getAddrByAscii_if#r72_$end ==========
  1539                                  
  1540                                  ;########## font_z_getAddrByAscii_if#r92_$start ##########
  1541 00003914 A1[4D360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1542 00003919 50                      push eax
  1543 0000391A B84E000000              mov eax, 78
  1544 0000391F 50                      push eax
  1545 00003920 5B                      pop ebx
  1546 00003921 58                      pop eax
  1547 00003922 39D8                    cmp eax, ebx
  1548 00003924 7407                    je font_z_getAddrByAscii_if#r92_equ#r03$true
  1549 00003926 B800000000              mov eax, 0
  1550 0000392B EB05                    jmp font_z_getAddrByAscii_if#r92_equ#r03$false
  1551                                  font_z_getAddrByAscii_if#r92_equ#r03$true:
  1552 0000392D B801000000              mov eax, 1
  1553                                  font_z_getAddrByAscii_if#r92_equ#r03$false:
  1554 00003932 50                      push eax
  1555 00003933 58                      pop eax
  1556 00003934 83F800                  cmp eax, 0
  1557 00003937 740D                    je font_z_getAddrByAscii_if#r92_$else
  1558 00003939 A1[9C140000]            mov eax, [font_z_N]
  1559 0000393E 50                      push eax
  1560 0000393F 58                      pop eax
  1561 00003940 5D                      pop ebp
  1562 00003941 50                      push eax
  1563 00003942 55                      push ebp
  1564 00003943 C3                      ret
  1565 00003944 EB00                    jmp font_z_getAddrByAscii_if#r92_$end
  1566                                  font_z_getAddrByAscii_if#r92_$else:
  1567                                  font_z_getAddrByAscii_if#r92_$end:
  1568                                  ;========== font_z_getAddrByAscii_if#r92_$end ==========
  1569                                  
  1570                                  ;########## font_z_getAddrByAscii_if#r13_$start ##########
  1571 00003946 A1[4D360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1572 0000394B 50                      push eax
  1573 0000394C B84F000000              mov eax, 79
  1574 00003951 50                      push eax
  1575 00003952 5B                      pop ebx
  1576 00003953 58                      pop eax
  1577 00003954 39D8                    cmp eax, ebx
  1578 00003956 7407                    je font_z_getAddrByAscii_if#r13_equ#r23$true
  1579 00003958 B800000000              mov eax, 0
  1580 0000395D EB05                    jmp font_z_getAddrByAscii_if#r13_equ#r23$false
  1581                                  font_z_getAddrByAscii_if#r13_equ#r23$true:
  1582 0000395F B801000000              mov eax, 1
  1583                                  font_z_getAddrByAscii_if#r13_equ#r23$false:
  1584 00003964 50                      push eax
  1585 00003965 58                      pop eax
  1586 00003966 83F800                  cmp eax, 0
  1587 00003969 740D                    je font_z_getAddrByAscii_if#r13_$else
  1588 0000396B A1[AB150000]            mov eax, [font_z_O]
  1589 00003970 50                      push eax
  1590 00003971 58                      pop eax
  1591 00003972 5D                      pop ebp
  1592 00003973 50                      push eax
  1593 00003974 55                      push ebp
  1594 00003975 C3                      ret
  1595 00003976 EB00                    jmp font_z_getAddrByAscii_if#r13_$end
  1596                                  font_z_getAddrByAscii_if#r13_$else:
  1597                                  font_z_getAddrByAscii_if#r13_$end:
  1598                                  ;========== font_z_getAddrByAscii_if#r13_$end ==========
  1599                                  
  1600                                  ;########## font_z_getAddrByAscii_if#r33_$start ##########
  1601 00003978 A1[4D360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1602 0000397D 50                      push eax
  1603 0000397E B850000000              mov eax, 80
  1604 00003983 50                      push eax
  1605 00003984 5B                      pop ebx
  1606 00003985 58                      pop eax
  1607 00003986 39D8                    cmp eax, ebx
  1608 00003988 7407                    je font_z_getAddrByAscii_if#r33_equ#r43$true
  1609 0000398A B800000000              mov eax, 0
  1610 0000398F EB05                    jmp font_z_getAddrByAscii_if#r33_equ#r43$false
  1611                                  font_z_getAddrByAscii_if#r33_equ#r43$true:
  1612 00003991 B801000000              mov eax, 1
  1613                                  font_z_getAddrByAscii_if#r33_equ#r43$false:
  1614 00003996 50                      push eax
  1615 00003997 58                      pop eax
  1616 00003998 83F800                  cmp eax, 0
  1617 0000399B 740D                    je font_z_getAddrByAscii_if#r33_$else
  1618 0000399D A1[BA160000]            mov eax, [font_z_P]
  1619 000039A2 50                      push eax
  1620 000039A3 58                      pop eax
  1621 000039A4 5D                      pop ebp
  1622 000039A5 50                      push eax
  1623 000039A6 55                      push ebp
  1624 000039A7 C3                      ret
  1625 000039A8 EB00                    jmp font_z_getAddrByAscii_if#r33_$end
  1626                                  font_z_getAddrByAscii_if#r33_$else:
  1627                                  font_z_getAddrByAscii_if#r33_$end:
  1628                                  ;========== font_z_getAddrByAscii_if#r33_$end ==========
  1629                                  
  1630                                  ;########## font_z_getAddrByAscii_if#r53_$start ##########
  1631 000039AA A1[4D360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1632 000039AF 50                      push eax
  1633 000039B0 B851000000              mov eax, 81
  1634 000039B5 50                      push eax
  1635 000039B6 5B                      pop ebx
  1636 000039B7 58                      pop eax
  1637 000039B8 39D8                    cmp eax, ebx
  1638 000039BA 7407                    je font_z_getAddrByAscii_if#r53_equ#r63$true
  1639 000039BC B800000000              mov eax, 0
  1640 000039C1 EB05                    jmp font_z_getAddrByAscii_if#r53_equ#r63$false
  1641                                  font_z_getAddrByAscii_if#r53_equ#r63$true:
  1642 000039C3 B801000000              mov eax, 1
  1643                                  font_z_getAddrByAscii_if#r53_equ#r63$false:
  1644 000039C8 50                      push eax
  1645 000039C9 58                      pop eax
  1646 000039CA 83F800                  cmp eax, 0
  1647 000039CD 740D                    je font_z_getAddrByAscii_if#r53_$else
  1648 000039CF A1[C9170000]            mov eax, [font_z_Q]
  1649 000039D4 50                      push eax
  1650 000039D5 58                      pop eax
  1651 000039D6 5D                      pop ebp
  1652 000039D7 50                      push eax
  1653 000039D8 55                      push ebp
  1654 000039D9 C3                      ret
  1655 000039DA EB00                    jmp font_z_getAddrByAscii_if#r53_$end
  1656                                  font_z_getAddrByAscii_if#r53_$else:
  1657                                  font_z_getAddrByAscii_if#r53_$end:
  1658                                  ;========== font_z_getAddrByAscii_if#r53_$end ==========
  1659                                  
  1660                                  ;########## font_z_getAddrByAscii_if#r73_$start ##########
  1661 000039DC A1[4D360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1662 000039E1 50                      push eax
  1663 000039E2 B852000000              mov eax, 82
  1664 000039E7 50                      push eax
  1665 000039E8 5B                      pop ebx
  1666 000039E9 58                      pop eax
  1667 000039EA 39D8                    cmp eax, ebx
  1668 000039EC 7407                    je font_z_getAddrByAscii_if#r73_equ#r83$true
  1669 000039EE B800000000              mov eax, 0
  1670 000039F3 EB05                    jmp font_z_getAddrByAscii_if#r73_equ#r83$false
  1671                                  font_z_getAddrByAscii_if#r73_equ#r83$true:
  1672 000039F5 B801000000              mov eax, 1
  1673                                  font_z_getAddrByAscii_if#r73_equ#r83$false:
  1674 000039FA 50                      push eax
  1675 000039FB 58                      pop eax
  1676 000039FC 83F800                  cmp eax, 0
  1677 000039FF 740D                    je font_z_getAddrByAscii_if#r73_$else
  1678 00003A01 A1[D8180000]            mov eax, [font_z_R]
  1679 00003A06 50                      push eax
  1680 00003A07 58                      pop eax
  1681 00003A08 5D                      pop ebp
  1682 00003A09 50                      push eax
  1683 00003A0A 55                      push ebp
  1684 00003A0B C3                      ret
  1685 00003A0C EB00                    jmp font_z_getAddrByAscii_if#r73_$end
  1686                                  font_z_getAddrByAscii_if#r73_$else:
  1687                                  font_z_getAddrByAscii_if#r73_$end:
  1688                                  ;========== font_z_getAddrByAscii_if#r73_$end ==========
  1689                                  
  1690                                  ;########## font_z_getAddrByAscii_if#r93_$start ##########
  1691 00003A0E A1[4D360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1692 00003A13 50                      push eax
  1693 00003A14 B853000000              mov eax, 83
  1694 00003A19 50                      push eax
  1695 00003A1A 5B                      pop ebx
  1696 00003A1B 58                      pop eax
  1697 00003A1C 39D8                    cmp eax, ebx
  1698 00003A1E 7407                    je font_z_getAddrByAscii_if#r93_equ#r04$true
  1699 00003A20 B800000000              mov eax, 0
  1700 00003A25 EB05                    jmp font_z_getAddrByAscii_if#r93_equ#r04$false
  1701                                  font_z_getAddrByAscii_if#r93_equ#r04$true:
  1702 00003A27 B801000000              mov eax, 1
  1703                                  font_z_getAddrByAscii_if#r93_equ#r04$false:
  1704 00003A2C 50                      push eax
  1705 00003A2D 58                      pop eax
  1706 00003A2E 83F800                  cmp eax, 0
  1707 00003A31 740D                    je font_z_getAddrByAscii_if#r93_$else
  1708 00003A33 A1[E7190000]            mov eax, [font_z_S]
  1709 00003A38 50                      push eax
  1710 00003A39 58                      pop eax
  1711 00003A3A 5D                      pop ebp
  1712 00003A3B 50                      push eax
  1713 00003A3C 55                      push ebp
  1714 00003A3D C3                      ret
  1715 00003A3E EB00                    jmp font_z_getAddrByAscii_if#r93_$end
  1716                                  font_z_getAddrByAscii_if#r93_$else:
  1717                                  font_z_getAddrByAscii_if#r93_$end:
  1718                                  ;========== font_z_getAddrByAscii_if#r93_$end ==========
  1719                                  
  1720                                  ;########## font_z_getAddrByAscii_if#r14_$start ##########
  1721 00003A40 A1[4D360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1722 00003A45 50                      push eax
  1723 00003A46 B854000000              mov eax, 84
  1724 00003A4B 50                      push eax
  1725 00003A4C 5B                      pop ebx
  1726 00003A4D 58                      pop eax
  1727 00003A4E 39D8                    cmp eax, ebx
  1728 00003A50 7407                    je font_z_getAddrByAscii_if#r14_equ#r24$true
  1729 00003A52 B800000000              mov eax, 0
  1730 00003A57 EB05                    jmp font_z_getAddrByAscii_if#r14_equ#r24$false
  1731                                  font_z_getAddrByAscii_if#r14_equ#r24$true:
  1732 00003A59 B801000000              mov eax, 1
  1733                                  font_z_getAddrByAscii_if#r14_equ#r24$false:
  1734 00003A5E 50                      push eax
  1735 00003A5F 58                      pop eax
  1736 00003A60 83F800                  cmp eax, 0
  1737 00003A63 740D                    je font_z_getAddrByAscii_if#r14_$else
  1738 00003A65 A1[F61A0000]            mov eax, [font_z_T]
  1739 00003A6A 50                      push eax
  1740 00003A6B 58                      pop eax
  1741 00003A6C 5D                      pop ebp
  1742 00003A6D 50                      push eax
  1743 00003A6E 55                      push ebp
  1744 00003A6F C3                      ret
  1745 00003A70 EB00                    jmp font_z_getAddrByAscii_if#r14_$end
  1746                                  font_z_getAddrByAscii_if#r14_$else:
  1747                                  font_z_getAddrByAscii_if#r14_$end:
  1748                                  ;========== font_z_getAddrByAscii_if#r14_$end ==========
  1749                                  
  1750                                  ;########## font_z_getAddrByAscii_if#r34_$start ##########
  1751 00003A72 A1[4D360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1752 00003A77 50                      push eax
  1753 00003A78 B855000000              mov eax, 85
  1754 00003A7D 50                      push eax
  1755 00003A7E 5B                      pop ebx
  1756 00003A7F 58                      pop eax
  1757 00003A80 39D8                    cmp eax, ebx
  1758 00003A82 7407                    je font_z_getAddrByAscii_if#r34_equ#r44$true
  1759 00003A84 B800000000              mov eax, 0
  1760 00003A89 EB05                    jmp font_z_getAddrByAscii_if#r34_equ#r44$false
  1761                                  font_z_getAddrByAscii_if#r34_equ#r44$true:
  1762 00003A8B B801000000              mov eax, 1
  1763                                  font_z_getAddrByAscii_if#r34_equ#r44$false:
  1764 00003A90 50                      push eax
  1765 00003A91 58                      pop eax
  1766 00003A92 83F800                  cmp eax, 0
  1767 00003A95 740D                    je font_z_getAddrByAscii_if#r34_$else
  1768 00003A97 A1[051C0000]            mov eax, [font_z_U]
  1769 00003A9C 50                      push eax
  1770 00003A9D 58                      pop eax
  1771 00003A9E 5D                      pop ebp
  1772 00003A9F 50                      push eax
  1773 00003AA0 55                      push ebp
  1774 00003AA1 C3                      ret
  1775 00003AA2 EB00                    jmp font_z_getAddrByAscii_if#r34_$end
  1776                                  font_z_getAddrByAscii_if#r34_$else:
  1777                                  font_z_getAddrByAscii_if#r34_$end:
  1778                                  ;========== font_z_getAddrByAscii_if#r34_$end ==========
  1779                                  
  1780                                  ;########## font_z_getAddrByAscii_if#r54_$start ##########
  1781 00003AA4 A1[4D360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1782 00003AA9 50                      push eax
  1783 00003AAA B856000000              mov eax, 86
  1784 00003AAF 50                      push eax
  1785 00003AB0 5B                      pop ebx
  1786 00003AB1 58                      pop eax
  1787 00003AB2 39D8                    cmp eax, ebx
  1788 00003AB4 7407                    je font_z_getAddrByAscii_if#r54_equ#r64$true
  1789 00003AB6 B800000000              mov eax, 0
  1790 00003ABB EB05                    jmp font_z_getAddrByAscii_if#r54_equ#r64$false
  1791                                  font_z_getAddrByAscii_if#r54_equ#r64$true:
  1792 00003ABD B801000000              mov eax, 1
  1793                                  font_z_getAddrByAscii_if#r54_equ#r64$false:
  1794 00003AC2 50                      push eax
  1795 00003AC3 58                      pop eax
  1796 00003AC4 83F800                  cmp eax, 0
  1797 00003AC7 740D                    je font_z_getAddrByAscii_if#r54_$else
  1798 00003AC9 A1[141D0000]            mov eax, [font_z_V]
  1799 00003ACE 50                      push eax
  1800 00003ACF 58                      pop eax
  1801 00003AD0 5D                      pop ebp
  1802 00003AD1 50                      push eax
  1803 00003AD2 55                      push ebp
  1804 00003AD3 C3                      ret
  1805 00003AD4 EB00                    jmp font_z_getAddrByAscii_if#r54_$end
  1806                                  font_z_getAddrByAscii_if#r54_$else:
  1807                                  font_z_getAddrByAscii_if#r54_$end:
  1808                                  ;========== font_z_getAddrByAscii_if#r54_$end ==========
  1809                                  
  1810                                  ;########## font_z_getAddrByAscii_if#r74_$start ##########
  1811 00003AD6 A1[4D360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1812 00003ADB 50                      push eax
  1813 00003ADC B857000000              mov eax, 87
  1814 00003AE1 50                      push eax
  1815 00003AE2 5B                      pop ebx
  1816 00003AE3 58                      pop eax
  1817 00003AE4 39D8                    cmp eax, ebx
  1818 00003AE6 7407                    je font_z_getAddrByAscii_if#r74_equ#r84$true
  1819 00003AE8 B800000000              mov eax, 0
  1820 00003AED EB05                    jmp font_z_getAddrByAscii_if#r74_equ#r84$false
  1821                                  font_z_getAddrByAscii_if#r74_equ#r84$true:
  1822 00003AEF B801000000              mov eax, 1
  1823                                  font_z_getAddrByAscii_if#r74_equ#r84$false:
  1824 00003AF4 50                      push eax
  1825 00003AF5 58                      pop eax
  1826 00003AF6 83F800                  cmp eax, 0
  1827 00003AF9 740D                    je font_z_getAddrByAscii_if#r74_$else
  1828 00003AFB A1[231E0000]            mov eax, [font_z_W]
  1829 00003B00 50                      push eax
  1830 00003B01 58                      pop eax
  1831 00003B02 5D                      pop ebp
  1832 00003B03 50                      push eax
  1833 00003B04 55                      push ebp
  1834 00003B05 C3                      ret
  1835 00003B06 EB00                    jmp font_z_getAddrByAscii_if#r74_$end
  1836                                  font_z_getAddrByAscii_if#r74_$else:
  1837                                  font_z_getAddrByAscii_if#r74_$end:
  1838                                  ;========== font_z_getAddrByAscii_if#r74_$end ==========
  1839                                  
  1840                                  ;########## font_z_getAddrByAscii_if#r94_$start ##########
  1841 00003B08 A1[4D360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1842 00003B0D 50                      push eax
  1843 00003B0E B858000000              mov eax, 88
  1844 00003B13 50                      push eax
  1845 00003B14 5B                      pop ebx
  1846 00003B15 58                      pop eax
  1847 00003B16 39D8                    cmp eax, ebx
  1848 00003B18 7407                    je font_z_getAddrByAscii_if#r94_equ#r05$true
  1849 00003B1A B800000000              mov eax, 0
  1850 00003B1F EB05                    jmp font_z_getAddrByAscii_if#r94_equ#r05$false
  1851                                  font_z_getAddrByAscii_if#r94_equ#r05$true:
  1852 00003B21 B801000000              mov eax, 1
  1853                                  font_z_getAddrByAscii_if#r94_equ#r05$false:
  1854 00003B26 50                      push eax
  1855 00003B27 58                      pop eax
  1856 00003B28 83F800                  cmp eax, 0
  1857 00003B2B 740D                    je font_z_getAddrByAscii_if#r94_$else
  1858 00003B2D A1[321F0000]            mov eax, [font_z_X]
  1859 00003B32 50                      push eax
  1860 00003B33 58                      pop eax
  1861 00003B34 5D                      pop ebp
  1862 00003B35 50                      push eax
  1863 00003B36 55                      push ebp
  1864 00003B37 C3                      ret
  1865 00003B38 EB00                    jmp font_z_getAddrByAscii_if#r94_$end
  1866                                  font_z_getAddrByAscii_if#r94_$else:
  1867                                  font_z_getAddrByAscii_if#r94_$end:
  1868                                  ;========== font_z_getAddrByAscii_if#r94_$end ==========
  1869                                  
  1870                                  ;########## font_z_getAddrByAscii_if#r15_$start ##########
  1871 00003B3A A1[4D360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1872 00003B3F 50                      push eax
  1873 00003B40 B859000000              mov eax, 89
  1874 00003B45 50                      push eax
  1875 00003B46 5B                      pop ebx
  1876 00003B47 58                      pop eax
  1877 00003B48 39D8                    cmp eax, ebx
  1878 00003B4A 7407                    je font_z_getAddrByAscii_if#r15_equ#r25$true
  1879 00003B4C B800000000              mov eax, 0
  1880 00003B51 EB05                    jmp font_z_getAddrByAscii_if#r15_equ#r25$false
  1881                                  font_z_getAddrByAscii_if#r15_equ#r25$true:
  1882 00003B53 B801000000              mov eax, 1
  1883                                  font_z_getAddrByAscii_if#r15_equ#r25$false:
  1884 00003B58 50                      push eax
  1885 00003B59 58                      pop eax
  1886 00003B5A 83F800                  cmp eax, 0
  1887 00003B5D 740D                    je font_z_getAddrByAscii_if#r15_$else
  1888 00003B5F A1[41200000]            mov eax, [font_z_Y]
  1889 00003B64 50                      push eax
  1890 00003B65 58                      pop eax
  1891 00003B66 5D                      pop ebp
  1892 00003B67 50                      push eax
  1893 00003B68 55                      push ebp
  1894 00003B69 C3                      ret
  1895 00003B6A EB00                    jmp font_z_getAddrByAscii_if#r15_$end
  1896                                  font_z_getAddrByAscii_if#r15_$else:
  1897                                  font_z_getAddrByAscii_if#r15_$end:
  1898                                  ;========== font_z_getAddrByAscii_if#r15_$end ==========
  1899                                  
  1900                                  ;########## font_z_getAddrByAscii_if#r35_$start ##########
  1901 00003B6C A1[4D360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1902 00003B71 50                      push eax
  1903 00003B72 B85A000000              mov eax, 90
  1904 00003B77 50                      push eax
  1905 00003B78 5B                      pop ebx
  1906 00003B79 58                      pop eax
  1907 00003B7A 39D8                    cmp eax, ebx
  1908 00003B7C 7407                    je font_z_getAddrByAscii_if#r35_equ#r45$true
  1909 00003B7E B800000000              mov eax, 0
  1910 00003B83 EB05                    jmp font_z_getAddrByAscii_if#r35_equ#r45$false
  1911                                  font_z_getAddrByAscii_if#r35_equ#r45$true:
  1912 00003B85 B801000000              mov eax, 1
  1913                                  font_z_getAddrByAscii_if#r35_equ#r45$false:
  1914 00003B8A 50                      push eax
  1915 00003B8B 58                      pop eax
  1916 00003B8C 83F800                  cmp eax, 0
  1917 00003B8F 740D                    je font_z_getAddrByAscii_if#r35_$else
  1918 00003B91 A1[50210000]            mov eax, [font_z_Z]
  1919 00003B96 50                      push eax
  1920 00003B97 58                      pop eax
  1921 00003B98 5D                      pop ebp
  1922 00003B99 50                      push eax
  1923 00003B9A 55                      push ebp
  1924 00003B9B C3                      ret
  1925 00003B9C EB00                    jmp font_z_getAddrByAscii_if#r35_$end
  1926                                  font_z_getAddrByAscii_if#r35_$else:
  1927                                  font_z_getAddrByAscii_if#r35_$end:
  1928                                  ;========== font_z_getAddrByAscii_if#r35_$end ==========
  1929                                  
  1930 00003B9E C3                      ret
  1931                                  font_z_getAddrByAscii$pass:
  1932                                  ;============[fun end]getAddrByAscii=============
  1933                                  
  1934                                  
  1935                                  
  1936                                  ;############[fun begin]rect############
  1937 00003B9F E91C010000              jmp test_z_rect$pass
  1938                                  test_z_rect:
  1939 00003BA4 5D                      pop ebp
  1940                                  ;param: addrVram
  1941 00003BA5 EB04                    jmp test_z_rect_addrVram$pass
  1942 00003BA7 00000000                test_z_rect_addrVram: dd 0
  1943                                  test_z_rect_addrVram$pass:
  1944 00003BAB 58                      pop eax
  1945 00003BAC A3[A73B0000]            mov [test_z_rect_addrVram], eax
  1946                                  ;param: top
  1947 00003BB1 EB04                    jmp test_z_rect_top$pass
  1948 00003BB3 00000000                test_z_rect_top: dd 0
  1949                                  test_z_rect_top$pass:
  1950 00003BB7 58                      pop eax
  1951 00003BB8 A3[B33B0000]            mov [test_z_rect_top], eax
  1952                                  ;param: left
  1953 00003BBD EB04                    jmp test_z_rect_left$pass
  1954 00003BBF 00000000                test_z_rect_left: dd 0
  1955                                  test_z_rect_left$pass:
  1956 00003BC3 58                      pop eax
  1957 00003BC4 A3[BF3B0000]            mov [test_z_rect_left], eax
  1958 00003BC9 55                      push ebp
  1959 00003BCA B800000000              mov eax, 0
  1960 00003BCF 50                      push eax
  1961 00003BD0 EB04                    jmp test_z_rect_y$pass
  1962 00003BD2 00000000                test_z_rect_y: dd 0
  1963                                  test_z_rect_y$pass:
  1964 00003BD6 58                      pop eax
  1965 00003BD7 A3[D23B0000]            mov [test_z_rect_y], eax
  1966                                  
  1967                                  ;########## test_z_rect_while#r1_$start ##########
  1968                                  test_z_rect_while#r1_$start:
  1969 00003BDC A1[D23B0000]            mov eax, [test_z_rect_y]
  1970 00003BE1 50                      push eax
  1971 00003BE2 B808000000              mov eax, 8
  1972 00003BE7 50                      push eax
  1973 00003BE8 5B                      pop ebx
  1974 00003BE9 58                      pop eax
  1975 00003BEA 39D8                    cmp eax, ebx
  1976 00003BEC 7607                    jbe test_z_rect_while#r1_leq#r2$true
  1977 00003BEE B800000000              mov eax, 0
  1978 00003BF3 EB05                    jmp test_z_rect_while#r1_leq#r2$false
  1979                                  test_z_rect_while#r1_leq#r2$true:
  1980 00003BF5 B801000000              mov eax, 1
  1981                                  test_z_rect_while#r1_leq#r2$false:
  1982 00003BFA 50                      push eax
  1983 00003BFB 58                      pop eax
  1984 00003BFC 83F800                  cmp eax, 0
  1985 00003BFF 0F84BA000000            je test_z_rect_while#r1_$end
  1986 00003C05 B800000000              mov eax, 0
  1987 00003C0A 50                      push eax
  1988 00003C0B EB04                    jmp test_z_rect_while#r1_x$pass
  1989 00003C0D 00000000                test_z_rect_while#r1_x: dd 0
  1990                                  test_z_rect_while#r1_x$pass:
  1991 00003C11 58                      pop eax
  1992 00003C12 A3[0D3C0000]            mov [test_z_rect_while#r1_x], eax
  1993                                  
  1994                                  ;########## test_z_rect_while#r1_while#r3_$start ##########
  1995                                  test_z_rect_while#r1_while#r3_$start:
  1996 00003C17 A1[0D3C0000]            mov eax, [test_z_rect_while#r1_x]
  1997 00003C1C 50                      push eax
  1998 00003C1D B808000000              mov eax, 8
  1999 00003C22 50                      push eax
  2000 00003C23 5B                      pop ebx
  2001 00003C24 58                      pop eax
  2002 00003C25 39D8                    cmp eax, ebx
  2003 00003C27 7607                    jbe test_z_rect_while#r1_while#r3_leq#r4$true
  2004 00003C29 B800000000              mov eax, 0
  2005 00003C2E EB05                    jmp test_z_rect_while#r1_while#r3_leq#r4$false
  2006                                  test_z_rect_while#r1_while#r3_leq#r4$true:
  2007 00003C30 B801000000              mov eax, 1
  2008                                  test_z_rect_while#r1_while#r3_leq#r4$false:
  2009 00003C35 50                      push eax
  2010 00003C36 58                      pop eax
  2011 00003C37 83F800                  cmp eax, 0
  2012 00003C3A 7467                    je test_z_rect_while#r1_while#r3_$end
  2013 00003C3C B803000000              mov eax, 3
  2014 00003C41 50                      push eax
  2015 00003C42 EB04                    jmp test_z_rect_while#r1_while#r3_color$pass
  2016 00003C44 00000000                test_z_rect_while#r1_while#r3_color: dd 0
  2017                                  test_z_rect_while#r1_while#r3_color$pass:
  2018 00003C48 58                      pop eax
  2019 00003C49 A3[443C0000]            mov [test_z_rect_while#r1_while#r3_color], eax
  2020                                  
  2021 00003C4E A1[BF3B0000]            mov eax, [test_z_rect_left]
  2022 00003C53 50                      push eax
  2023 00003C54 A1[0D3C0000]            mov eax, [test_z_rect_while#r1_x]
  2024 00003C59 50                      push eax
  2025 00003C5A 58                      pop eax
  2026 00003C5B 5B                      pop ebx
  2027 00003C5C 01D8                    add eax, ebx
  2028 00003C5E 50                      push eax
  2029 00003C5F A1[B33B0000]            mov eax, [test_z_rect_top]
  2030 00003C64 50                      push eax
  2031 00003C65 A1[D23B0000]            mov eax, [test_z_rect_y]
  2032 00003C6A 50                      push eax
  2033 00003C6B 58                      pop eax
  2034 00003C6C 5B                      pop ebx
  2035 00003C6D 01D8                    add eax, ebx
  2036 00003C6F 50                      push eax
  2037 00003C70 A1[443C0000]            mov eax, [test_z_rect_while#r1_while#r3_color]
  2038 00003C75 50                      push eax
  2039 00003C76 B840010000              mov eax, 320
  2040 00003C7B 50                      push eax
  2041 00003C7C A1[A73B0000]            mov eax, [test_z_rect_addrVram]
  2042 00003C81 50                      push eax
  2043 00003C82 E8AAC4FFFF              call draw_z_pixel
  2044                                  
  2045 00003C87 A1[0D3C0000]            mov eax, [test_z_rect_while#r1_x]
  2046 00003C8C 50                      push eax
  2047 00003C8D B801000000              mov eax, 1
  2048 00003C92 50                      push eax
  2049 00003C93 58                      pop eax
  2050 00003C94 5B                      pop ebx
  2051 00003C95 01D8                    add eax, ebx
  2052 00003C97 50                      push eax
  2053 00003C98 58                      pop eax
  2054 00003C99 A3[0D3C0000]            mov [test_z_rect_while#r1_x], eax
  2055 00003C9E E974FFFFFF              jmp test_z_rect_while#r1_while#r3_$start
  2056                                  test_z_rect_while#r1_while#r3_$end:
  2057                                  ;========== test_z_rect_while#r1_while#r3_$end ==========
  2058                                  
  2059 00003CA3 A1[D23B0000]            mov eax, [test_z_rect_y]
  2060 00003CA8 50                      push eax
  2061 00003CA9 B801000000              mov eax, 1
  2062 00003CAE 50                      push eax
  2063 00003CAF 58                      pop eax
  2064 00003CB0 5B                      pop ebx
  2065 00003CB1 01D8                    add eax, ebx
  2066 00003CB3 50                      push eax
  2067 00003CB4 58                      pop eax
  2068 00003CB5 A3[D23B0000]            mov [test_z_rect_y], eax
  2069 00003CBA E91DFFFFFF              jmp test_z_rect_while#r1_$start
  2070                                  test_z_rect_while#r1_$end:
  2071                                  ;========== test_z_rect_while#r1_$end ==========
  2072                                  
  2073 00003CBF C3                      ret
  2074                                  test_z_rect$pass:
  2075                                  ;============[fun end]rect=============
  2076                                  
  2077                                  
  2078                                  ;############[fun begin]block############
  2079 00003CC0 E982000000              jmp test_z_block$pass
  2080                                  test_z_block:
  2081 00003CC5 5D                      pop ebp
  2082                                  ;param: addrVram
  2083 00003CC6 EB04                    jmp test_z_block_addrVram$pass
  2084 00003CC8 00000000                test_z_block_addrVram: dd 0
  2085                                  test_z_block_addrVram$pass:
  2086 00003CCC 58                      pop eax
  2087 00003CCD A3[C83C0000]            mov [test_z_block_addrVram], eax
  2088 00003CD2 55                      push ebp
  2089 00003CD3 B800000000              mov eax, 0
  2090 00003CD8 50                      push eax
  2091 00003CD9 EB04                    jmp test_z_block_i$pass
  2092 00003CDB 00000000                test_z_block_i: dd 0
  2093                                  test_z_block_i$pass:
  2094 00003CDF 58                      pop eax
  2095 00003CE0 A3[DB3C0000]            mov [test_z_block_i], eax
  2096                                  
  2097                                  ;########## test_z_block_while#r5_$start ##########
  2098                                  test_z_block_while#r5_$start:
  2099 00003CE5 A1[DB3C0000]            mov eax, [test_z_block_i]
  2100 00003CEA 50                      push eax
  2101 00003CEB B82C010000              mov eax, 300
  2102 00003CF0 50                      push eax
  2103 00003CF1 5B                      pop ebx
  2104 00003CF2 58                      pop eax
  2105 00003CF3 39D8                    cmp eax, ebx
  2106 00003CF5 7207                    jb test_z_block_while#r5_les#r6$true
  2107 00003CF7 B800000000              mov eax, 0
  2108 00003CFC EB05                    jmp test_z_block_while#r5_les#r6$false
  2109                                  test_z_block_while#r5_les#r6$true:
  2110 00003CFE B801000000              mov eax, 1
  2111                                  test_z_block_while#r5_les#r6$false:
  2112 00003D03 50                      push eax
  2113 00003D04 58                      pop eax
  2114 00003D05 83F800                  cmp eax, 0
  2115 00003D08 743C                    je test_z_block_while#r5_$end
  2116 00003D0A A1[DB3C0000]            mov eax, [test_z_block_i]
  2117 00003D0F 50                      push eax
  2118 00003D10 A1[DB3C0000]            mov eax, [test_z_block_i]
  2119 00003D15 50                      push eax
  2120 00003D16 A1[DB3C0000]            mov eax, [test_z_block_i]
  2121 00003D1B 50                      push eax
  2122 00003D1C B840010000              mov eax, 320
  2123 00003D21 50                      push eax
  2124 00003D22 A1[C83C0000]            mov eax, [test_z_block_addrVram]
  2125 00003D27 50                      push eax
  2126 00003D28 E804C4FFFF              call draw_z_pixel
  2127                                  
  2128 00003D2D A1[DB3C0000]            mov eax, [test_z_block_i]
  2129 00003D32 50                      push eax
  2130 00003D33 B801000000              mov eax, 1
  2131 00003D38 50                      push eax
  2132 00003D39 58                      pop eax
  2133 00003D3A 5B                      pop ebx
  2134 00003D3B 01D8                    add eax, ebx
  2135 00003D3D 50                      push eax
  2136 00003D3E 58                      pop eax
  2137 00003D3F A3[DB3C0000]            mov [test_z_block_i], eax
  2138 00003D44 EB9F                    jmp test_z_block_while#r5_$start
  2139                                  test_z_block_while#r5_$end:
  2140                                  ;========== test_z_block_while#r5_$end ==========
  2141                                  
  2142 00003D46 C3                      ret
  2143                                  test_z_block$pass:
  2144                                  ;============[fun end]block=============
  2145                                  
  2146                                  
  2147                                  ;############[fun begin]draw############
  2148 00003D47 EB74                    jmp test_z_draw$pass
  2149                                  test_z_draw:
  2150 00003D49 5D                      pop ebp
  2151                                  ;param: addrVram
  2152 00003D4A EB04                    jmp test_z_draw_addrVram$pass
  2153 00003D4C 00000000                test_z_draw_addrVram: dd 0
  2154                                  test_z_draw_addrVram$pass:
  2155 00003D50 58                      pop eax
  2156 00003D51 A3[4C3D0000]            mov [test_z_draw_addrVram], eax
  2157 00003D56 55                      push ebp
  2158 00003D57 A1[4C3D0000]            mov eax, [test_z_draw_addrVram]
  2159 00003D5C 50                      push eax
  2160 00003D5D E863FFFFFF              call test_z_block
  2161                                  
  2162 00003D62 EB14                    jmp test_z_draw_tstr$pass
  2163 00003D64 0000000048454C4C4F-     test_z_draw_tstr: dd 0, "HELLO WORLD", 0
  2163 00003D6D 20574F524C44000000-
  2163 00003D76 0000               
  2164                                  test_z_draw_tstr$pass:
  2165 00003D78 B8[683D0000]            mov eax, test_z_draw_tstr+4
  2166 00003D7D A3[643D0000]            mov [test_z_draw_tstr], eax
  2167                                  
  2168 00003D82 B808000000              mov eax, 8
  2169 00003D87 50                      push eax
  2170 00003D88 B808000000              mov eax, 8
  2171 00003D8D 50                      push eax
  2172 00003D8E B8[643D0000]            mov eax, test_z_draw_tstr
  2173 00003D93 50                      push eax
  2174 00003D94 B840010000              mov eax, 320
  2175 00003D99 50                      push eax
  2176 00003D9A A1[4C3D0000]            mov eax, [test_z_draw_addrVram]
  2177 00003D9F 50                      push eax
  2178 00003DA0 E83AC8FFFF              call draw_z_string
  2179                                  
  2180 00003DA5 B864000000              mov eax, 100
  2181 00003DAA 50                      push eax
  2182 00003DAB B864000000              mov eax, 100
  2183 00003DB0 50                      push eax
  2184 00003DB1 A1[4C3D0000]            mov eax, [test_z_draw_addrVram]
  2185 00003DB6 50                      push eax
  2186 00003DB7 E8E8FDFFFF              call test_z_rect
  2187                                  
  2188 00003DBC C3                      ret
  2189                                  test_z_draw$pass:
  2190                                  ;============[fun end]draw=============
  2191                                  
  2192                                  
  2193                                  
  2194                                  ;############[fun begin]init############
  2195 00003DBD E92B010000              jmp GDT_z_init$pass
  2196                                  GDT_z_init:
  2197 00003DC2 5D                      pop ebp
  2198 00003DC3 55                      push ebp
  2199 00003DC4 B800000000              mov eax, 0
  2200 00003DC9 50                      push eax
  2201 00003DCA EB04                    jmp GDT_z_init_i$pass
  2202 00003DCC 00000000                GDT_z_init_i: dd 0
  2203                                  GDT_z_init_i$pass:
  2204 00003DD0 58                      pop eax
  2205 00003DD1 A3[CC3D0000]            mov [GDT_z_init_i], eax
  2206                                  
  2207                                  ;########## GDT_z_init_while#r1_$start ##########
  2208                                  GDT_z_init_while#r1_$start:
  2209 00003DD6 A1[CC3D0000]            mov eax, [GDT_z_init_i]
  2210 00003DDB 50                      push eax
  2211 00003DDC B800200000              mov eax, 8192
  2212 00003DE1 50                      push eax
  2213 00003DE2 5B                      pop ebx
  2214 00003DE3 58                      pop eax
  2215 00003DE4 39D8                    cmp eax, ebx
  2216 00003DE6 7207                    jb GDT_z_init_while#r1_les#r2$true
  2217 00003DE8 B800000000              mov eax, 0
  2218 00003DED EB05                    jmp GDT_z_init_while#r1_les#r2$false
  2219                                  GDT_z_init_while#r1_les#r2$true:
  2220 00003DEF B801000000              mov eax, 1
  2221                                  GDT_z_init_while#r1_les#r2$false:
  2222 00003DF4 50                      push eax
  2223 00003DF5 58                      pop eax
  2224 00003DF6 83F800                  cmp eax, 0
  2225 00003DF9 7465                    je GDT_z_init_while#r1_$end
  2226 00003DFB A1[CC3D0000]            mov eax, [GDT_z_init_i]
  2227 00003E00 50                      push eax
  2228 00003E01 B802000000              mov eax, 2
  2229 00003E06 50                      push eax
  2230 00003E07 58                      pop eax
  2231 00003E08 5B                      pop ebx
  2232 00003E09 F7E3                    mul ebx
  2233 00003E0B 50                      push eax
  2234 00003E0C B800000000              mov eax, 0
  2235 00003E11 50                      push eax
  2236 00003E12 58                      pop eax
  2237 00003E13 5B                      pop ebx
  2238 00003E14 8983[74000000]          mov [main_z_addrGDT+ebx], eax
  2239 00003E1A A1[CC3D0000]            mov eax, [GDT_z_init_i]
  2240 00003E1F 50                      push eax
  2241 00003E20 B802000000              mov eax, 2
  2242 00003E25 50                      push eax
  2243 00003E26 58                      pop eax
  2244 00003E27 5B                      pop ebx
  2245 00003E28 F7E3                    mul ebx
  2246 00003E2A 50                      push eax
  2247 00003E2B B801000000              mov eax, 1
  2248 00003E30 50                      push eax
  2249 00003E31 58                      pop eax
  2250 00003E32 5B                      pop ebx
  2251 00003E33 01D8                    add eax, ebx
  2252 00003E35 50                      push eax
  2253 00003E36 B800000000              mov eax, 0
  2254 00003E3B 50                      push eax
  2255 00003E3C 58                      pop eax
  2256 00003E3D 5B                      pop ebx
  2257 00003E3E 8983[74000000]          mov [main_z_addrGDT+ebx], eax
  2258 00003E44 A1[CC3D0000]            mov eax, [GDT_z_init_i]
  2259 00003E49 50                      push eax
  2260 00003E4A B801000000              mov eax, 1
  2261 00003E4F 50                      push eax
  2262 00003E50 58                      pop eax
  2263 00003E51 5B                      pop ebx
  2264 00003E52 01D8                    add eax, ebx
  2265 00003E54 50                      push eax
  2266 00003E55 58                      pop eax
  2267 00003E56 A3[CC3D0000]            mov [GDT_z_init_i], eax
  2268 00003E5B E976FFFFFF              jmp GDT_z_init_while#r1_$start
  2269                                  GDT_z_init_while#r1_$end:
  2270                                  ;========== GDT_z_init_while#r1_$end ==========
  2271                                  
  2272 00003E60 A1[74000000]            mov eax, [main_z_addrGDT]
  2273 00003E65 50                      push eax
  2274 00003E66 B800000000              mov eax, 0
  2275 00003E6B 50                      push eax
  2276 00003E6C B808000000              mov eax, 8
  2277 00003E71 50                      push eax
  2278 00003E72 58                      pop eax
  2279 00003E73 5B                      pop ebx
  2280 00003E74 F7E3                    mul ebx
  2281 00003E76 50                      push eax
  2282 00003E77 58                      pop eax
  2283 00003E78 5B                      pop ebx
  2284 00003E79 01D8                    add eax, ebx
  2285 00003E7B 50                      push eax
  2286 00003E7C B800000000              mov eax, 0x00000000
  2287 00003E81 50                      push eax
  2288 00003E82 B800000000              mov eax, 0x00000000
  2289 00003E87 50                      push eax
  2290 00003E88 E8E9000000              call kernel_z_setGDT
  2291                                  
  2292 00003E8D A1[74000000]            mov eax, [main_z_addrGDT]
  2293 00003E92 50                      push eax
  2294 00003E93 B801000000              mov eax, 1
  2295 00003E98 50                      push eax
  2296 00003E99 B808000000              mov eax, 8
  2297 00003E9E 50                      push eax
  2298 00003E9F 58                      pop eax
  2299 00003EA0 5B                      pop ebx
  2300 00003EA1 F7E3                    mul ebx
  2301 00003EA3 50                      push eax
  2302 00003EA4 58                      pop eax
  2303 00003EA5 5B                      pop ebx
  2304 00003EA6 01D8                    add eax, ebx
  2305 00003EA8 50                      push eax
  2306 00003EA9 B800000000              mov eax, 0x00000000
  2307 00003EAE 50                      push eax
  2308 00003EAF B892FFFF0F              mov eax, 0x0fffff92
  2309 00003EB4 50                      push eax
  2310 00003EB5 E8BC000000              call kernel_z_setGDT
  2311                                  
  2312 00003EBA A1[74000000]            mov eax, [main_z_addrGDT]
  2313 00003EBF 50                      push eax
  2314 00003EC0 B802000000              mov eax, 2
  2315 00003EC5 50                      push eax
  2316 00003EC6 B808000000              mov eax, 8
  2317 00003ECB 50                      push eax
  2318 00003ECC 58                      pop eax
  2319 00003ECD 5B                      pop ebx
  2320 00003ECE F7E3                    mul ebx
  2321 00003ED0 50                      push eax
  2322 00003ED1 58                      pop eax
  2323 00003ED2 5B                      pop ebx
  2324 00003ED3 01D8                    add eax, ebx
  2325 00003ED5 50                      push eax
  2326 00003ED6 B800000000              mov eax, 0x00000000
  2327 00003EDB 50                      push eax
  2328 00003EDC B89AFFFF07              mov eax, 0x07ffff9a
  2329 00003EE1 50                      push eax
  2330 00003EE2 E88F000000              call kernel_z_setGDT
  2331                                  
  2332 00003EE7 E8B2000000              call kernel_z_loadGDT
  2333                                  
  2334 00003EEC C3                      ret
  2335                                  GDT_z_init$pass:
  2336                                  ;============[fun end]init=============
  2337                                  
  2338                                  
  2339                                  
  2340                                  ;############[fun begin]init############
  2341 00003EED EB6C                    jmp IDT_z_init$pass
  2342                                  IDT_z_init:
  2343 00003EEF 5D                      pop ebp
  2344 00003EF0 55                      push ebp
  2345 00003EF1 B800000000              mov eax, 0
  2346 00003EF6 50                      push eax
  2347 00003EF7 EB04                    jmp IDT_z_init_i$pass
  2348 00003EF9 00000000                IDT_z_init_i: dd 0
  2349                                  IDT_z_init_i$pass:
  2350 00003EFD 58                      pop eax
  2351 00003EFE A3[F93E0000]            mov [IDT_z_init_i], eax
  2352                                  
  2353                                  ;########## IDT_z_init_while#r1_$start ##########
  2354                                  IDT_z_init_while#r1_$start:
  2355 00003F03 A1[F93E0000]            mov eax, [IDT_z_init_i]
  2356 00003F08 50                      push eax
  2357 00003F09 B800010000              mov eax, 256
  2358 00003F0E 50                      push eax
  2359 00003F0F 5B                      pop ebx
  2360 00003F10 58                      pop eax
  2361 00003F11 39D8                    cmp eax, ebx
  2362 00003F13 7207                    jb IDT_z_init_while#r1_les#r2$true
  2363 00003F15 B800000000              mov eax, 0
  2364 00003F1A EB05                    jmp IDT_z_init_while#r1_les#r2$false
  2365                                  IDT_z_init_while#r1_les#r2$true:
  2366 00003F1C B801000000              mov eax, 1
  2367                                  IDT_z_init_while#r1_les#r2$false:
  2368 00003F21 50                      push eax
  2369 00003F22 58                      pop eax
  2370 00003F23 83F800                  cmp eax, 0
  2371 00003F26 742D                    je IDT_z_init_while#r1_$end
  2372 00003F28 A1[F93E0000]            mov eax, [IDT_z_init_i]
  2373 00003F2D 50                      push eax
  2374 00003F2E B800000000              mov eax, 0
  2375 00003F33 50                      push eax
  2376 00003F34 58                      pop eax
  2377 00003F35 5B                      pop ebx
  2378 00003F36 8983[62000000]          mov [main_z_addrIDT+ebx], eax
  2379 00003F3C A1[F93E0000]            mov eax, [IDT_z_init_i]
  2380 00003F41 50                      push eax
  2381 00003F42 B801000000              mov eax, 1
  2382 00003F47 50                      push eax
  2383 00003F48 58                      pop eax
  2384 00003F49 5B                      pop ebx
  2385 00003F4A 01D8                    add eax, ebx
  2386 00003F4C 50                      push eax
  2387 00003F4D 58                      pop eax
  2388 00003F4E A3[F93E0000]            mov [IDT_z_init_i], eax
  2389 00003F53 EBAE                    jmp IDT_z_init_while#r1_$start
  2390                                  IDT_z_init_while#r1_$end:
  2391                                  ;========== IDT_z_init_while#r1_$end ==========
  2392                                  
  2393 00003F55 E84C000000              call kernel_z_loadIDT
  2394                                  
  2395 00003F5A C3                      ret
  2396                                  IDT_z_init$pass:
  2397                                  ;============[fun end]init=============
  2398                                  
  2399                                  
  2400 00003F5B E985000000              jmp main
  2401                                  
  2402                                  limit_low equ 0
  2403                                  base_low equ 2 
  2404                                  base_mid equ 4 
  2405                                  access_right equ 5
  2406                                  limit_high equ 6 
  2407                                  base_high equ 7 
  2408                                  	
  2409                                  ALIGNB	16
  2410                                  GDTR:
  2411 00003F60 FFFF                    		DW 8*8192-1 ; 最后一个字节的偏移
  2412 00003F62 00002700                		DD 0x270000 ; 表的地址
  2413                                  
  2414 00003F66 <res Ah>                ALIGNB	16
  2415                                  IDTR:
  2416 00003F70 FF07                    		DW 8*256-1       ; 后16位是IDT的大小，limit
  2417 00003F72 00F82600                		DD 0x26f800      ; 前32位是IDT在内存中的位置
  2418                                  
  2419                                  ; esi是将要填入的地址，就是GDT表的地址，例如Addr_GDT+1*8, Addr_GDT+2*8
  2420                                  ; eax是基地址，是代码的
  2421                                  ; ebx是控制参数和限制 24+8 4位扩展(自动填上)20位限长8位参数
  2422                                  ;     高4位参数 高4位限制 低16位限制 8位参数 = 32位ebx
  2423                                  ; 实际上高4位参数被自己固定掉了
  2424                                  ; 因此用一个常量代替比较好
  2425                                  ; 设置GDT内容
  2426                                  ; kernel.z\setGDT(addr: dword, param1: dword, param2: dword)
  2427                                  kernel_z_setGDT:
  2428 00003F76 5D                        pop ebp
  2429 00003F77 5B                        pop ebx
  2430 00003F78 58                        pop eax
  2431 00003F79 5E                        pop esi
  2432 00003F7A 55                        push ebp
  2433 00003F7B 66894602                	mov [esi+base_low],  ax ; 基地址的低16位
  2434 00003F7F C1E810                  	shr eax, 16
  2435 00003F82 884604                  	mov [esi+base_mid], al ; 8位，1个字节
  2436 00003F85 886607                  	mov [esi+base_high], ah
  2437                                  	; 下面是限制与权限设置
  2438 00003F88 885E05                  	mov [esi+access_right], bl;8位参数
  2439                                  	; 0x00 未使用的记录表
  2440                                  	; 0x92 系统模式，可读写不可执行
  2441                                  	; 0x9a 系统模式，可执行可读不可写
  2442                                  	; 0xf2 应用模式，可读写不可执行
  2443                                  	; 0xfa 应用模式，可执行可读不可写
  2444 00003F8B C1EB08                  	shr ebx, 8
  2445 00003F8E 66891E                  	mov [esi+limit_low], bx ; 限制的低16位
  2446 00003F91 C1EB10                  	shr ebx, 16
  2447 00003F94 80CBC0                  	or  bl, 0xc0 ; 0xc0=11000000
  2448 00003F97 80E3CF                  	and bl, 0xcf ; 规定好前4位为1100，0x11001111
  2449 00003F9A 885E06                  	mov [esi+limit_high], bl ; 4位参数+4位段限长，高4位被称为扩展访问权，参数固定为
  2450                                  	; G=1(开启4K),D/B=1(32位段),0(固定),AVL=0(也是默认的)这4位在386前是没有的
  2451                                  	; 因此注意limit在这里被规定为24位长，其中高四位是扩展访问权，是固定的
  2452 00003F9D C3                      ret 
  2453                                  
  2454                                  ; 加载GDT
  2455                                  ; kernel.z\loadGDT()
  2456                                  kernel_z_loadGDT:
  2457 00003F9E 0F0115[603F0000]          lgdt [GDTR] ; 不加dword会警告，因为现在的标签的确从0开始的
  2458 00003FA5 C3                      ret
  2459                                  
  2460                                  kernel_z_loadIDT:
  2461 00003FA6 0F011D[703F0000]        	lidt [IDTR];装载IDT
  2462 00003FAD C3                      ret
  2463                                  
  2464                                  offset_low equ 0
  2465                                  selector equ 2
  2466                                  dw_count equ 4
  2467                                  access_right equ 5
  2468                                  offset_high equ 6
  2469                                  	
  2470                                  ; esi是将要填入的地址
  2471                                  ; eax偏移地址4字节,也就是中断函数地址了
  2472                                  kernel_z_setIDT:
  2473 00003FAE 5D                      	pop ebp
  2474 00003FAF 58                      	pop eax 
  2475 00003FB0 5E                      	pop esi 
  2476 00003FB1 55                      	push ebp 
  2477 00003FB2 668906                  	mov [esi+offset_low], ax 
  2478 00003FB5 C1E810                  	shr eax, 16
  2479 00003FB8 66894606                	mov [esi+offset_high], ax
  2480 00003FBC 66C746021000            	mov [esi+selector], word 2<<3 ; 第二段 
  2481 00003FC2 66B8008E                	mov ax, 1000111000000000B ; 参数都在这里，中断门
  2482 00003FC6 66894604                	mov [esi+dw_count], ax 
  2483 00003FCA C3                      ret
  2484                                  
  2485                                  ; 读写内存
  2486                                  ; kernel.z\setMem.1byte(val:dword, addr:dword)
  2487                                  kernel_z_setMem_1byte:
  2488 00003FCB 5D                        pop ebp
  2489 00003FCC 5B                        pop ebx
  2490 00003FCD 58                        pop eax
  2491 00003FCE 55                        push ebp
  2492 00003FCF 8803                      mov [ebx], al
  2493 00003FD1 C3                      ret
  2494                                  
  2495                                  ; kernel.z\setMem.2byte(val:dword, addr:dword)
  2496                                  kernel_z_setMem_2byte:
  2497 00003FD2 5D                        pop ebp
  2498 00003FD3 5B                        pop ebx
  2499 00003FD4 58                        pop eax
  2500 00003FD5 55                        push ebp
  2501 00003FD6 668903                    mov [ebx], ax
  2502 00003FD9 C3                      ret
  2503                                  
  2504                                  ; kernel.z\setMem.4byte(val:dword, addr:dword)
  2505                                  kernel_z_setMem_4byte:
  2506 00003FDA 5D                        pop ebp
  2507 00003FDB 5B                        pop ebx
  2508 00003FDC 58                        pop eax
  2509 00003FDD 55                        push ebp
  2510 00003FDE 8903                      mov [ebx], eax
  2511 00003FE0 C3                      ret
  2512                                  
  2513                                  ; kernel.z\halt()
  2514                                  kernel_z_halt:
  2515 00003FE1 F4                        hlt
  2516 00003FE2 C3                      ret
  2517 00003FE3 3412                    TESTA: DW 0x1234
  2518                                  ; 主进程入口
  2519                                  main:
  2520                                  
  2521                                    ; 测试用
  2522 00003FE5 9BDBE3                    finit
  2523 00003FE8 D905[E33F0000]            fld DWORD [TESTA]
  2524 00003FEE D900                      fld DWORD [eax]
  2525 00003FF0 DCC1                      fadd to st1
  2526                                  
  2527 00003FF2 E889C0FFFF                call main_z_run_once
  2528                                    .loop:
  2529 00003FF7 E89EC0FFFF                  call main_z_run_loop
  2530 00003FFC EBF9                      jmp .loop
  2531                                  
