     1                                  [bits 32]
     2                                  ORG 0x280000
     3 00000000 B840010000              mov eax, 320
     4 00000005 50                      push eax
     5 00000006 EB04                    jmp main_z_screenWidth$pass
     6 00000008 00000000                main_z_screenWidth: dd 0
     7                                  main_z_screenWidth$pass:
     8 0000000C 58                      pop eax
     9 0000000D A3[08000000]            mov [main_z_screenWidth], eax
    10                                  
    11 00000012 B8C8000000              mov eax, 200
    12 00000017 50                      push eax
    13 00000018 EB04                    jmp main_z_screenHeight$pass
    14 0000001A 00000000                main_z_screenHeight: dd 0
    15                                  main_z_screenHeight$pass:
    16 0000001E 58                      pop eax
    17 0000001F A3[1A000000]            mov [main_z_screenHeight], eax
    18                                  
    19 00000024 B800000A00              mov eax, 0x000a0000
    20 00000029 50                      push eax
    21 0000002A EB04                    jmp main_z_addrVram$pass
    22 0000002C 00000000                main_z_addrVram: dd 0
    23                                  main_z_addrVram$pass:
    24 00000030 58                      pop eax
    25 00000031 A3[2C000000]            mov [main_z_addrVram], eax
    26                                  
    27 00000036 B800E02400              mov eax, 0x0024e000
    28 0000003B 50                      push eax
    29 0000003C EB04                    jmp main_z_addrPM$pass
    30 0000003E 00000000                main_z_addrPM: dd 0
    31                                  main_z_addrPM$pass:
    32 00000042 58                      pop eax
    33 00000043 A3[3E000000]            mov [main_z_addrPM], eax
    34                                  
    35 00000048 B800E02600              mov eax, 0x0026e000
    36 0000004D 50                      push eax
    37 0000004E EB04                    jmp main_z_addrPDT$pass
    38 00000050 00000000                main_z_addrPDT: dd 0
    39                                  main_z_addrPDT$pass:
    40 00000054 58                      pop eax
    41 00000055 A3[50000000]            mov [main_z_addrPDT], eax
    42                                  
    43 0000005A B800F82600              mov eax, 0x0026f800
    44 0000005F 50                      push eax
    45 00000060 EB04                    jmp main_z_addrIDT$pass
    46 00000062 00000000                main_z_addrIDT: dd 0
    47                                  main_z_addrIDT$pass:
    48 00000066 58                      pop eax
    49 00000067 A3[62000000]            mov [main_z_addrIDT], eax
    50                                  
    51 0000006C B800002700              mov eax, 0x00270000
    52 00000071 50                      push eax
    53 00000072 EB04                    jmp main_z_addrGDT$pass
    54 00000074 00000000                main_z_addrGDT: dd 0
    55                                  main_z_addrGDT$pass:
    56 00000078 58                      pop eax
    57 00000079 A3[74000000]            mov [main_z_addrGDT], eax
    58                                  
    59                                  
    60                                  ;############[fun begin]run_once############
    61 0000007E EB0E                    jmp main_z_run_once$pass
    62                                  main_z_run_once:
    63 00000080 5D                      pop ebp
    64 00000081 55                      push ebp
    65 00000082 A1[2C000000]            mov eax, [main_z_addrVram]
    66 00000087 50                      push eax
    67 00000088 E8B23C0000              call test_z_draw
    68                                  
    69 0000008D C3                      ret
    70                                  main_z_run_once$pass:
    71                                  ;============[fun end]run_once=============
    72                                  
    73                                  
    74                                  ;############[fun begin]run_loop############
    75 0000008E EB08                    jmp main_z_run_loop$pass
    76                                  main_z_run_loop:
    77 00000090 5D                      pop ebp
    78 00000091 55                      push ebp
    79 00000092 E8153D0000              call kernel_z_halt
    80                                  
    81 00000097 C3                      ret
    82                                  main_z_run_loop$pass:
    83                                  ;============[fun end]run_loop=============
    84                                  
    85                                  
    86                                  
    87                                  ;############[fun begin]set_1byte############
    88 00000098 EB2C                    jmp memory_z_set_1byte$pass
    89                                  memory_z_set_1byte:
    90 0000009A 5D                      pop ebp
    91                                  ;param: addr
    92 0000009B EB04                    jmp memory_z_set_1byte_addr$pass
    93 0000009D 00000000                memory_z_set_1byte_addr: dd 0
    94                                  memory_z_set_1byte_addr$pass:
    95 000000A1 58                      pop eax
    96 000000A2 A3[9D000000]            mov [memory_z_set_1byte_addr], eax
    97                                  ;param: val
    98 000000A7 EB04                    jmp memory_z_set_1byte_val$pass
    99 000000A9 00000000                memory_z_set_1byte_val: dd 0
   100                                  memory_z_set_1byte_val$pass:
   101 000000AD 58                      pop eax
   102 000000AE A3[A9000000]            mov [memory_z_set_1byte_val], eax
   103 000000B3 55                      push ebp
   104 000000B4 A1[A9000000]            mov eax, [memory_z_set_1byte_val]
   105 000000B9 50                      push eax
   106 000000BA A1[9D000000]            mov eax, [memory_z_set_1byte_addr]
   107 000000BF 50                      push eax
   108 000000C0 E8D13C0000              call kernel_z_setMem_1byte
   109                                  
   110 000000C5 C3                      ret
   111                                  memory_z_set_1byte$pass:
   112                                  ;============[fun end]set_1byte=============
   113                                  
   114                                  
   115                                  ;############[fun begin]set_2byte############
   116 000000C6 EB2C                    jmp memory_z_set_2byte$pass
   117                                  memory_z_set_2byte:
   118 000000C8 5D                      pop ebp
   119                                  ;param: addr
   120 000000C9 EB04                    jmp memory_z_set_2byte_addr$pass
   121 000000CB 00000000                memory_z_set_2byte_addr: dd 0
   122                                  memory_z_set_2byte_addr$pass:
   123 000000CF 58                      pop eax
   124 000000D0 A3[CB000000]            mov [memory_z_set_2byte_addr], eax
   125                                  ;param: val
   126 000000D5 EB04                    jmp memory_z_set_2byte_val$pass
   127 000000D7 00000000                memory_z_set_2byte_val: dd 0
   128                                  memory_z_set_2byte_val$pass:
   129 000000DB 58                      pop eax
   130 000000DC A3[D7000000]            mov [memory_z_set_2byte_val], eax
   131 000000E1 55                      push ebp
   132 000000E2 A1[D7000000]            mov eax, [memory_z_set_2byte_val]
   133 000000E7 50                      push eax
   134 000000E8 A1[CB000000]            mov eax, [memory_z_set_2byte_addr]
   135 000000ED 50                      push eax
   136 000000EE E8AA3C0000              call kernel_z_setMem_2byte
   137                                  
   138 000000F3 C3                      ret
   139                                  memory_z_set_2byte$pass:
   140                                  ;============[fun end]set_2byte=============
   141                                  
   142                                  
   143                                  ;############[fun begin]set_4byte############
   144 000000F4 EB2C                    jmp memory_z_set_4byte$pass
   145                                  memory_z_set_4byte:
   146 000000F6 5D                      pop ebp
   147                                  ;param: addr
   148 000000F7 EB04                    jmp memory_z_set_4byte_addr$pass
   149 000000F9 00000000                memory_z_set_4byte_addr: dd 0
   150                                  memory_z_set_4byte_addr$pass:
   151 000000FD 58                      pop eax
   152 000000FE A3[F9000000]            mov [memory_z_set_4byte_addr], eax
   153                                  ;param: val
   154 00000103 EB04                    jmp memory_z_set_4byte_val$pass
   155 00000105 00000000                memory_z_set_4byte_val: dd 0
   156                                  memory_z_set_4byte_val$pass:
   157 00000109 58                      pop eax
   158 0000010A A3[05010000]            mov [memory_z_set_4byte_val], eax
   159 0000010F 55                      push ebp
   160 00000110 A1[05010000]            mov eax, [memory_z_set_4byte_val]
   161 00000115 50                      push eax
   162 00000116 A1[F9000000]            mov eax, [memory_z_set_4byte_addr]
   163 0000011B 50                      push eax
   164 0000011C E8843C0000              call kernel_z_setMem_4byte
   165                                  
   166 00000121 C3                      ret
   167                                  memory_z_set_4byte$pass:
   168                                  ;============[fun end]set_4byte=============
   169                                  
   170                                  
   171                                  
   172                                  ;############[fun begin]pixel############
   173 00000122 E983000000              jmp draw_z_pixel$pass
   174                                  draw_z_pixel:
   175 00000127 5D                      pop ebp
   176                                  ;param: vramAddr
   177 00000128 EB04                    jmp draw_z_pixel_vramAddr$pass
   178 0000012A 00000000                draw_z_pixel_vramAddr: dd 0
   179                                  draw_z_pixel_vramAddr$pass:
   180 0000012E 58                      pop eax
   181 0000012F A3[2A010000]            mov [draw_z_pixel_vramAddr], eax
   182                                  ;param: screenWidth
   183 00000134 EB04                    jmp draw_z_pixel_screenWidth$pass
   184 00000136 00000000                draw_z_pixel_screenWidth: dd 0
   185                                  draw_z_pixel_screenWidth$pass:
   186 0000013A 58                      pop eax
   187 0000013B A3[36010000]            mov [draw_z_pixel_screenWidth], eax
   188                                  ;param: color
   189 00000140 EB04                    jmp draw_z_pixel_color$pass
   190 00000142 00000000                draw_z_pixel_color: dd 0
   191                                  draw_z_pixel_color$pass:
   192 00000146 58                      pop eax
   193 00000147 A3[42010000]            mov [draw_z_pixel_color], eax
   194                                  ;param: y
   195 0000014C EB04                    jmp draw_z_pixel_y$pass
   196 0000014E 00000000                draw_z_pixel_y: dd 0
   197                                  draw_z_pixel_y$pass:
   198 00000152 58                      pop eax
   199 00000153 A3[4E010000]            mov [draw_z_pixel_y], eax
   200                                  ;param: x
   201 00000158 EB04                    jmp draw_z_pixel_x$pass
   202 0000015A 00000000                draw_z_pixel_x: dd 0
   203                                  draw_z_pixel_x$pass:
   204 0000015E 58                      pop eax
   205 0000015F A3[5A010000]            mov [draw_z_pixel_x], eax
   206 00000164 55                      push ebp
   207 00000165 A1[4E010000]            mov eax, [draw_z_pixel_y]
   208 0000016A 50                      push eax
   209 0000016B A1[36010000]            mov eax, [draw_z_pixel_screenWidth]
   210 00000170 50                      push eax
   211 00000171 58                      pop eax
   212 00000172 5B                      pop ebx
   213 00000173 F7E3                    mul ebx
   214 00000175 50                      push eax
   215 00000176 A1[5A010000]            mov eax, [draw_z_pixel_x]
   216 0000017B 50                      push eax
   217 0000017C 58                      pop eax
   218 0000017D 5B                      pop ebx
   219 0000017E 01D8                    add eax, ebx
   220 00000180 50                      push eax
   221 00000181 A1[2A010000]            mov eax, [draw_z_pixel_vramAddr]
   222 00000186 50                      push eax
   223 00000187 58                      pop eax
   224 00000188 5B                      pop ebx
   225 00000189 01D8                    add eax, ebx
   226 0000018B 50                      push eax
   227 0000018C EB04                    jmp draw_z_pixel_addr$pass
   228 0000018E 00000000                draw_z_pixel_addr: dd 0
   229                                  draw_z_pixel_addr$pass:
   230 00000192 58                      pop eax
   231 00000193 A3[8E010000]            mov [draw_z_pixel_addr], eax
   232                                  
   233 00000198 A1[42010000]            mov eax, [draw_z_pixel_color]
   234 0000019D 50                      push eax
   235 0000019E A1[8E010000]            mov eax, [draw_z_pixel_addr]
   236 000001A3 50                      push eax
   237 000001A4 E8F1FEFFFF              call memory_z_set_1byte
   238                                  
   239 000001A9 C3                      ret
   240                                  draw_z_pixel$pass:
   241                                  ;============[fun end]pixel=============
   242                                  
   243                                  
   244                                  ;############[fun begin]hLine############
   245 000001AA E9CA000000              jmp draw_z_hLine$pass
   246                                  draw_z_hLine:
   247 000001AF 5D                      pop ebp
   248                                  ;param: vramAddr
   249 000001B0 EB04                    jmp draw_z_hLine_vramAddr$pass
   250 000001B2 00000000                draw_z_hLine_vramAddr: dd 0
   251                                  draw_z_hLine_vramAddr$pass:
   252 000001B6 58                      pop eax
   253 000001B7 A3[B2010000]            mov [draw_z_hLine_vramAddr], eax
   254                                  ;param: screenWidth
   255 000001BC EB04                    jmp draw_z_hLine_screenWidth$pass
   256 000001BE 00000000                draw_z_hLine_screenWidth: dd 0
   257                                  draw_z_hLine_screenWidth$pass:
   258 000001C2 58                      pop eax
   259 000001C3 A3[BE010000]            mov [draw_z_hLine_screenWidth], eax
   260                                  ;param: color
   261 000001C8 EB04                    jmp draw_z_hLine_color$pass
   262 000001CA 00000000                draw_z_hLine_color: dd 0
   263                                  draw_z_hLine_color$pass:
   264 000001CE 58                      pop eax
   265 000001CF A3[CA010000]            mov [draw_z_hLine_color], eax
   266                                  ;param: ey
   267 000001D4 EB04                    jmp draw_z_hLine_ey$pass
   268 000001D6 00000000                draw_z_hLine_ey: dd 0
   269                                  draw_z_hLine_ey$pass:
   270 000001DA 58                      pop eax
   271 000001DB A3[D6010000]            mov [draw_z_hLine_ey], eax
   272                                  ;param: ex
   273 000001E0 EB04                    jmp draw_z_hLine_ex$pass
   274 000001E2 00000000                draw_z_hLine_ex: dd 0
   275                                  draw_z_hLine_ex$pass:
   276 000001E6 58                      pop eax
   277 000001E7 A3[E2010000]            mov [draw_z_hLine_ex], eax
   278                                  ;param: by
   279 000001EC EB04                    jmp draw_z_hLine_by$pass
   280 000001EE 00000000                draw_z_hLine_by: dd 0
   281                                  draw_z_hLine_by$pass:
   282 000001F2 58                      pop eax
   283 000001F3 A3[EE010000]            mov [draw_z_hLine_by], eax
   284                                  ;param: bx
   285 000001F8 EB04                    jmp draw_z_hLine_bx$pass
   286 000001FA 00000000                draw_z_hLine_bx: dd 0
   287                                  draw_z_hLine_bx$pass:
   288 000001FE 58                      pop eax
   289 000001FF A3[FA010000]            mov [draw_z_hLine_bx], eax
   290 00000204 55                      push ebp
   291 00000205 A1[FA010000]            mov eax, [draw_z_hLine_bx]
   292 0000020A 50                      push eax
   293 0000020B EB04                    jmp draw_z_hLine_i$pass
   294 0000020D 00000000                draw_z_hLine_i: dd 0
   295                                  draw_z_hLine_i$pass:
   296 00000211 58                      pop eax
   297 00000212 A3[0D020000]            mov [draw_z_hLine_i], eax
   298                                  
   299                                  ;########## draw_z_hLine_while#r1_$start ##########
   300                                  draw_z_hLine_while#r1_$start:
   301 00000217 A1[0D020000]            mov eax, [draw_z_hLine_i]
   302 0000021C 50                      push eax
   303 0000021D A1[E2010000]            mov eax, [draw_z_hLine_ex]
   304 00000222 50                      push eax
   305 00000223 5B                      pop ebx
   306 00000224 58                      pop eax
   307 00000225 39D8                    cmp eax, ebx
   308 00000227 7607                    jbe draw_z_hLine_while#r1_leq#r2$true
   309 00000229 B800000000              mov eax, 0
   310 0000022E EB05                    jmp draw_z_hLine_while#r1_leq#r2$false
   311                                  draw_z_hLine_while#r1_leq#r2$true:
   312 00000230 B801000000              mov eax, 1
   313                                  draw_z_hLine_while#r1_leq#r2$false:
   314 00000235 50                      push eax
   315 00000236 58                      pop eax
   316 00000237 83F800                  cmp eax, 0
   317 0000023A 743C                    je draw_z_hLine_while#r1_$end
   318 0000023C A1[0D020000]            mov eax, [draw_z_hLine_i]
   319 00000241 50                      push eax
   320 00000242 A1[EE010000]            mov eax, [draw_z_hLine_by]
   321 00000247 50                      push eax
   322 00000248 A1[CA010000]            mov eax, [draw_z_hLine_color]
   323 0000024D 50                      push eax
   324 0000024E A1[BE010000]            mov eax, [draw_z_hLine_screenWidth]
   325 00000253 50                      push eax
   326 00000254 A1[B2010000]            mov eax, [draw_z_hLine_vramAddr]
   327 00000259 50                      push eax
   328 0000025A E8C8FEFFFF              call draw_z_pixel
   329                                  
   330 0000025F A1[0D020000]            mov eax, [draw_z_hLine_i]
   331 00000264 50                      push eax
   332 00000265 B801000000              mov eax, 1
   333 0000026A 50                      push eax
   334 0000026B 58                      pop eax
   335 0000026C 5B                      pop ebx
   336 0000026D 01D8                    add eax, ebx
   337 0000026F 50                      push eax
   338 00000270 58                      pop eax
   339 00000271 A3[0D020000]            mov [draw_z_hLine_i], eax
   340 00000276 EB9F                    jmp draw_z_hLine_while#r1_$start
   341                                  draw_z_hLine_while#r1_$end:
   342                                  ;========== draw_z_hLine_while#r1_$end ==========
   343                                  
   344 00000278 C3                      ret
   345                                  draw_z_hLine$pass:
   346                                  ;============[fun end]hLine=============
   347                                  
   348                                  
   349                                  ;############[fun begin]font############
   350 00000279 EB3F                    jmp draw_z_font$pass
   351                                  draw_z_font:
   352 0000027B 5D                      pop ebp
   353                                  ;param: backColor
   354 0000027C EB04                    jmp draw_z_font_backColor$pass
   355 0000027E 00000000                draw_z_font_backColor: dd 0
   356                                  draw_z_font_backColor$pass:
   357 00000282 58                      pop eax
   358 00000283 A3[7E020000]            mov [draw_z_font_backColor], eax
   359                                  ;param: foreColor
   360 00000288 EB04                    jmp draw_z_font_foreColor$pass
   361 0000028A 00000000                draw_z_font_foreColor: dd 0
   362                                  draw_z_font_foreColor$pass:
   363 0000028E 58                      pop eax
   364 0000028F A3[8A020000]            mov [draw_z_font_foreColor], eax
   365                                  ;param: top
   366 00000294 EB04                    jmp draw_z_font_top$pass
   367 00000296 00000000                draw_z_font_top: dd 0
   368                                  draw_z_font_top$pass:
   369 0000029A 58                      pop eax
   370 0000029B A3[96020000]            mov [draw_z_font_top], eax
   371                                  ;param: left
   372 000002A0 EB04                    jmp draw_z_font_left$pass
   373 000002A2 00000000                draw_z_font_left: dd 0
   374                                  draw_z_font_left$pass:
   375 000002A6 58                      pop eax
   376 000002A7 A3[A2020000]            mov [draw_z_font_left], eax
   377                                  ;param: charAddr
   378 000002AC EB04                    jmp draw_z_font_charAddr$pass
   379 000002AE 00000000                draw_z_font_charAddr: dd 0
   380                                  draw_z_font_charAddr$pass:
   381 000002B2 58                      pop eax
   382 000002B3 A3[AE020000]            mov [draw_z_font_charAddr], eax
   383 000002B8 55                      push ebp
   384 000002B9 C3                      ret
   385                                  draw_z_font$pass:
   386                                  ;============[fun end]font=============
   387                                  
   388                                  
   389                                  ;############[fun begin]flush############
   390 000002BA E910010000              jmp draw_z_flush$pass
   391                                  draw_z_flush:
   392 000002BF 5D                      pop ebp
   393                                  ;param: addrVram
   394 000002C0 EB04                    jmp draw_z_flush_addrVram$pass
   395 000002C2 00000000                draw_z_flush_addrVram: dd 0
   396                                  draw_z_flush_addrVram$pass:
   397 000002C6 58                      pop eax
   398 000002C7 A3[C2020000]            mov [draw_z_flush_addrVram], eax
   399 000002CC 55                      push ebp
   400 000002CD B800000000              mov eax, 0
   401 000002D2 50                      push eax
   402 000002D3 EB04                    jmp draw_z_flush_left$pass
   403 000002D5 00000000                draw_z_flush_left: dd 0
   404                                  draw_z_flush_left$pass:
   405 000002D9 58                      pop eax
   406 000002DA A3[D5020000]            mov [draw_z_flush_left], eax
   407                                  
   408 000002DF B800000000              mov eax, 0
   409 000002E4 50                      push eax
   410 000002E5 EB04                    jmp draw_z_flush_top$pass
   411 000002E7 00000000                draw_z_flush_top: dd 0
   412                                  draw_z_flush_top$pass:
   413 000002EB 58                      pop eax
   414 000002EC A3[E7020000]            mov [draw_z_flush_top], eax
   415                                  
   416                                  ;########## draw_z_flush_while#r3_$start ##########
   417                                  draw_z_flush_while#r3_$start:
   418 000002F1 A1[E7020000]            mov eax, [draw_z_flush_top]
   419 000002F6 50                      push eax
   420 000002F7 B819000000              mov eax, 25
   421 000002FC 50                      push eax
   422 000002FD 5B                      pop ebx
   423 000002FE 58                      pop eax
   424 000002FF 39D8                    cmp eax, ebx
   425 00000301 7207                    jb draw_z_flush_while#r3_les#r4$true
   426 00000303 B800000000              mov eax, 0
   427 00000308 EB05                    jmp draw_z_flush_while#r3_les#r4$false
   428                                  draw_z_flush_while#r3_les#r4$true:
   429 0000030A B801000000              mov eax, 1
   430                                  draw_z_flush_while#r3_les#r4$false:
   431 0000030F 50                      push eax
   432 00000310 58                      pop eax
   433 00000311 83F800                  cmp eax, 0
   434 00000314 0F84B4000000            je draw_z_flush_while#r3_$end
   435 0000031A B800000000              mov eax, 0
   436 0000031F 50                      push eax
   437 00000320 58                      pop eax
   438 00000321 A3[D5020000]            mov [draw_z_flush_left], eax
   439                                  ;########## draw_z_flush_while#r3_while#r5_$start ##########
   440                                  draw_z_flush_while#r3_while#r5_$start:
   441 00000326 A1[D5020000]            mov eax, [draw_z_flush_left]
   442 0000032B 50                      push eax
   443 0000032C B828000000              mov eax, 40
   444 00000331 50                      push eax
   445 00000332 5B                      pop ebx
   446 00000333 58                      pop eax
   447 00000334 39D8                    cmp eax, ebx
   448 00000336 7207                    jb draw_z_flush_while#r3_while#r5_les#r6$true
   449 00000338 B800000000              mov eax, 0
   450 0000033D EB05                    jmp draw_z_flush_while#r3_while#r5_les#r6$false
   451                                  draw_z_flush_while#r3_while#r5_les#r6$true:
   452 0000033F B801000000              mov eax, 1
   453                                  draw_z_flush_while#r3_while#r5_les#r6$false:
   454 00000344 50                      push eax
   455 00000345 58                      pop eax
   456 00000346 83F800                  cmp eax, 0
   457 00000349 7467                    je draw_z_flush_while#r3_while#r5_$end
   458 0000034B B80F000000              mov eax, 15
   459 00000350 50                      push eax
   460 00000351 EB04                    jmp draw_z_flush_while#r3_while#r5_color$pass
   461 00000353 00000000                draw_z_flush_while#r3_while#r5_color: dd 0
   462                                  draw_z_flush_while#r3_while#r5_color$pass:
   463 00000357 58                      pop eax
   464 00000358 A3[53030000]            mov [draw_z_flush_while#r3_while#r5_color], eax
   465                                  
   466 0000035D A1[D5020000]            mov eax, [draw_z_flush_left]
   467 00000362 50                      push eax
   468 00000363 B808000000              mov eax, 8
   469 00000368 50                      push eax
   470 00000369 58                      pop eax
   471 0000036A 5B                      pop ebx
   472 0000036B F7E3                    mul ebx
   473 0000036D 50                      push eax
   474 0000036E A1[E7020000]            mov eax, [draw_z_flush_top]
   475 00000373 50                      push eax
   476 00000374 B808000000              mov eax, 8
   477 00000379 50                      push eax
   478 0000037A 58                      pop eax
   479 0000037B 5B                      pop ebx
   480 0000037C F7E3                    mul ebx
   481 0000037E 50                      push eax
   482 0000037F A1[53030000]            mov eax, [draw_z_flush_while#r3_while#r5_color]
   483 00000384 50                      push eax
   484 00000385 B840010000              mov eax, 320
   485 0000038A 50                      push eax
   486 0000038B A1[C2020000]            mov eax, [draw_z_flush_addrVram]
   487 00000390 50                      push eax
   488 00000391 E891FDFFFF              call draw_z_pixel
   489                                  
   490 00000396 A1[D5020000]            mov eax, [draw_z_flush_left]
   491 0000039B 50                      push eax
   492 0000039C B801000000              mov eax, 1
   493 000003A1 50                      push eax
   494 000003A2 58                      pop eax
   495 000003A3 5B                      pop ebx
   496 000003A4 01D8                    add eax, ebx
   497 000003A6 50                      push eax
   498 000003A7 58                      pop eax
   499 000003A8 A3[D5020000]            mov [draw_z_flush_left], eax
   500 000003AD E974FFFFFF              jmp draw_z_flush_while#r3_while#r5_$start
   501                                  draw_z_flush_while#r3_while#r5_$end:
   502                                  ;========== draw_z_flush_while#r3_while#r5_$end ==========
   503                                  
   504 000003B2 A1[E7020000]            mov eax, [draw_z_flush_top]
   505 000003B7 50                      push eax
   506 000003B8 B801000000              mov eax, 1
   507 000003BD 50                      push eax
   508 000003BE 58                      pop eax
   509 000003BF 5B                      pop ebx
   510 000003C0 01D8                    add eax, ebx
   511 000003C2 50                      push eax
   512 000003C3 58                      pop eax
   513 000003C4 A3[E7020000]            mov [draw_z_flush_top], eax
   514 000003C9 E923FFFFFF              jmp draw_z_flush_while#r3_$start
   515                                  draw_z_flush_while#r3_$end:
   516                                  ;========== draw_z_flush_while#r3_$end ==========
   517                                  
   518 000003CE C3                      ret
   519                                  draw_z_flush$pass:
   520                                  ;============[fun end]flush=============
   521                                  
   522                                  
   523                                  ;############[fun begin]char############
   524 000003CF E9FC010000              jmp draw_z_char$pass
   525                                  draw_z_char:
   526 000003D4 5D                      pop ebp
   527                                  ;param: addrVram
   528 000003D5 EB04                    jmp draw_z_char_addrVram$pass
   529 000003D7 00000000                draw_z_char_addrVram: dd 0
   530                                  draw_z_char_addrVram$pass:
   531 000003DB 58                      pop eax
   532 000003DC A3[D7030000]            mov [draw_z_char_addrVram], eax
   533                                  ;param: screenWidth
   534 000003E1 EB04                    jmp draw_z_char_screenWidth$pass
   535 000003E3 00000000                draw_z_char_screenWidth: dd 0
   536                                  draw_z_char_screenWidth$pass:
   537 000003E7 58                      pop eax
   538 000003E8 A3[E3030000]            mov [draw_z_char_screenWidth], eax
   539                                  ;param: ascii
   540 000003ED EB04                    jmp draw_z_char_ascii$pass
   541 000003EF 00000000                draw_z_char_ascii: dd 0
   542                                  draw_z_char_ascii$pass:
   543 000003F3 58                      pop eax
   544 000003F4 A3[EF030000]            mov [draw_z_char_ascii], eax
   545                                  ;param: backColor
   546 000003F9 EB04                    jmp draw_z_char_backColor$pass
   547 000003FB 00000000                draw_z_char_backColor: dd 0
   548                                  draw_z_char_backColor$pass:
   549 000003FF 58                      pop eax
   550 00000400 A3[FB030000]            mov [draw_z_char_backColor], eax
   551                                  ;param: foreColor
   552 00000405 EB04                    jmp draw_z_char_foreColor$pass
   553 00000407 00000000                draw_z_char_foreColor: dd 0
   554                                  draw_z_char_foreColor$pass:
   555 0000040B 58                      pop eax
   556 0000040C A3[07040000]            mov [draw_z_char_foreColor], eax
   557                                  ;param: top
   558 00000411 EB04                    jmp draw_z_char_top$pass
   559 00000413 00000000                draw_z_char_top: dd 0
   560                                  draw_z_char_top$pass:
   561 00000417 58                      pop eax
   562 00000418 A3[13040000]            mov [draw_z_char_top], eax
   563                                  ;param: left
   564 0000041D EB04                    jmp draw_z_char_left$pass
   565 0000041F 00000000                draw_z_char_left: dd 0
   566                                  draw_z_char_left$pass:
   567 00000423 58                      pop eax
   568 00000424 A3[1F040000]            mov [draw_z_char_left], eax
   569 00000429 55                      push ebp
   570 0000042A A1[EF030000]            mov eax, [draw_z_char_ascii]
   571 0000042F 50                      push eax
   572 00000430 E80B320000              call font_z_getAddrByAscii
   573                                  
   574 00000435 EB04                    jmp draw_z_char_fontAddr$pass
   575 00000437 00000000                draw_z_char_fontAddr: dd 0
   576                                  draw_z_char_fontAddr$pass:
   577 0000043B 58                      pop eax
   578 0000043C A3[37040000]            mov [draw_z_char_fontAddr], eax
   579                                  
   580 00000441 B800000000              mov eax, 0
   581 00000446 50                      push eax
   582 00000447 EB04                    jmp draw_z_char_x$pass
   583 00000449 00000000                draw_z_char_x: dd 0
   584                                  draw_z_char_x$pass:
   585 0000044D 58                      pop eax
   586 0000044E A3[49040000]            mov [draw_z_char_x], eax
   587                                  
   588 00000453 B800000000              mov eax, 0
   589 00000458 50                      push eax
   590 00000459 EB04                    jmp draw_z_char_y$pass
   591 0000045B 00000000                draw_z_char_y: dd 0
   592                                  draw_z_char_y$pass:
   593 0000045F 58                      pop eax
   594 00000460 A3[5B040000]            mov [draw_z_char_y], eax
   595                                  
   596                                  ;########## draw_z_char_while#r7_$start ##########
   597                                  draw_z_char_while#r7_$start:
   598 00000465 A1[5B040000]            mov eax, [draw_z_char_y]
   599 0000046A 50                      push eax
   600 0000046B B808000000              mov eax, 8
   601 00000470 50                      push eax
   602 00000471 5B                      pop ebx
   603 00000472 58                      pop eax
   604 00000473 39D8                    cmp eax, ebx
   605 00000475 7207                    jb draw_z_char_while#r7_les#r8$true
   606 00000477 B800000000              mov eax, 0
   607 0000047C EB05                    jmp draw_z_char_while#r7_les#r8$false
   608                                  draw_z_char_while#r7_les#r8$true:
   609 0000047E B801000000              mov eax, 1
   610                                  draw_z_char_while#r7_les#r8$false:
   611 00000483 50                      push eax
   612 00000484 58                      pop eax
   613 00000485 83F800                  cmp eax, 0
   614 00000488 0F8441010000            je draw_z_char_while#r7_$end
   615 0000048E B800000000              mov eax, 0
   616 00000493 50                      push eax
   617 00000494 58                      pop eax
   618 00000495 A3[49040000]            mov [draw_z_char_x], eax
   619                                  ;########## draw_z_char_while#r7_while#r9_$start ##########
   620                                  draw_z_char_while#r7_while#r9_$start:
   621 0000049A A1[49040000]            mov eax, [draw_z_char_x]
   622 0000049F 50                      push eax
   623 000004A0 B808000000              mov eax, 8
   624 000004A5 50                      push eax
   625 000004A6 5B                      pop ebx
   626 000004A7 58                      pop eax
   627 000004A8 39D8                    cmp eax, ebx
   628 000004AA 7207                    jb draw_z_char_while#r7_while#r9_les#r01$true
   629 000004AC B800000000              mov eax, 0
   630 000004B1 EB05                    jmp draw_z_char_while#r7_while#r9_les#r01$false
   631                                  draw_z_char_while#r7_while#r9_les#r01$true:
   632 000004B3 B801000000              mov eax, 1
   633                                  draw_z_char_while#r7_while#r9_les#r01$false:
   634 000004B8 50                      push eax
   635 000004B9 58                      pop eax
   636 000004BA 83F800                  cmp eax, 0
   637 000004BD 0F84F0000000            je draw_z_char_while#r7_while#r9_$end
   638 000004C3 A1[5B040000]            mov eax, [draw_z_char_y]
   639 000004C8 50                      push eax
   640 000004C9 B808000000              mov eax, 8
   641 000004CE 50                      push eax
   642 000004CF 58                      pop eax
   643 000004D0 5B                      pop ebx
   644 000004D1 F7E3                    mul ebx
   645 000004D3 50                      push eax
   646 000004D4 A1[49040000]            mov eax, [draw_z_char_x]
   647 000004D9 50                      push eax
   648 000004DA 58                      pop eax
   649 000004DB 5B                      pop ebx
   650 000004DC 01D8                    add eax, ebx
   651 000004DE 50                      push eax
   652 000004DF 58                      pop eax
   653 000004E0 BB04000000              mov ebx, 4
   654 000004E5 F7E3                    mul ebx
   655 000004E7 8B98[37040000]          mov ebx, [draw_z_char_fontAddr+eax]
   656 000004ED 53                      push ebx
   657 000004EE EB04                    jmp draw_z_char_while#r7_while#r9_color$pass
   658 000004F0 00000000                draw_z_char_while#r7_while#r9_color: dd 0
   659                                  draw_z_char_while#r7_while#r9_color$pass:
   660 000004F4 58                      pop eax
   661 000004F5 A3[F0040000]            mov [draw_z_char_while#r7_while#r9_color], eax
   662                                  
   663                                  ;########## draw_z_char_while#r7_while#r9_if#r11_$start ##########
   664 000004FA A1[5B040000]            mov eax, [draw_z_char_y]
   665 000004FF 50                      push eax
   666 00000500 B808000000              mov eax, 8
   667 00000505 50                      push eax
   668 00000506 58                      pop eax
   669 00000507 5B                      pop ebx
   670 00000508 F7E3                    mul ebx
   671 0000050A 50                      push eax
   672 0000050B A1[49040000]            mov eax, [draw_z_char_x]
   673 00000510 50                      push eax
   674 00000511 58                      pop eax
   675 00000512 5B                      pop ebx
   676 00000513 01D8                    add eax, ebx
   677 00000515 50                      push eax
   678 00000516 58                      pop eax
   679 00000517 BB04000000              mov ebx, 4
   680 0000051C F7E3                    mul ebx
   681 0000051E 8B98[37040000]          mov ebx, [draw_z_char_fontAddr+eax]
   682 00000524 53                      push ebx
   683 00000525 B800000000              mov eax, 0
   684 0000052A 50                      push eax
   685 0000052B 5B                      pop ebx
   686 0000052C 58                      pop eax
   687 0000052D 39D8                    cmp eax, ebx
   688 0000052F 7507                    jne draw_z_char_while#r7_while#r9_if#r11_neq#r21$true
   689 00000531 B800000000              mov eax, 0
   690 00000536 EB05                    jmp draw_z_char_while#r7_while#r9_if#r11_neq#r21$false
   691                                  draw_z_char_while#r7_while#r9_if#r11_neq#r21$true:
   692 00000538 B801000000              mov eax, 1
   693                                  draw_z_char_while#r7_while#r9_if#r11_neq#r21$false:
   694 0000053D 50                      push eax
   695 0000053E 58                      pop eax
   696 0000053F 83F800                  cmp eax, 0
   697 00000542 740E                    je draw_z_char_while#r7_while#r9_if#r11_$else
   698 00000544 B80F000000              mov eax, 15
   699 00000549 50                      push eax
   700 0000054A 58                      pop eax
   701 0000054B A3[F0040000]            mov [draw_z_char_while#r7_while#r9_color], eax
   702 00000550 EB0C                    jmp draw_z_char_while#r7_while#r9_if#r11_$end
   703                                  draw_z_char_while#r7_while#r9_if#r11_$else:
   704 00000552 B800000000              mov eax, 0
   705 00000557 50                      push eax
   706 00000558 58                      pop eax
   707 00000559 A3[F0040000]            mov [draw_z_char_while#r7_while#r9_color], eax
   708                                  draw_z_char_while#r7_while#r9_if#r11_$end:
   709                                  ;========== draw_z_char_while#r7_while#r9_if#r11_$end ==========
   710                                  
   711 0000055E A1[1F040000]            mov eax, [draw_z_char_left]
   712 00000563 50                      push eax
   713 00000564 A1[49040000]            mov eax, [draw_z_char_x]
   714 00000569 50                      push eax
   715 0000056A 58                      pop eax
   716 0000056B 5B                      pop ebx
   717 0000056C 01D8                    add eax, ebx
   718 0000056E 50                      push eax
   719 0000056F A1[13040000]            mov eax, [draw_z_char_top]
   720 00000574 50                      push eax
   721 00000575 A1[5B040000]            mov eax, [draw_z_char_y]
   722 0000057A 50                      push eax
   723 0000057B 58                      pop eax
   724 0000057C 5B                      pop ebx
   725 0000057D 01D8                    add eax, ebx
   726 0000057F 50                      push eax
   727 00000580 A1[F0040000]            mov eax, [draw_z_char_while#r7_while#r9_color]
   728 00000585 50                      push eax
   729 00000586 B840010000              mov eax, 320
   730 0000058B 50                      push eax
   731 0000058C A1[D7030000]            mov eax, [draw_z_char_addrVram]
   732 00000591 50                      push eax
   733 00000592 E890FBFFFF              call draw_z_pixel
   734                                  
   735 00000597 A1[49040000]            mov eax, [draw_z_char_x]
   736 0000059C 50                      push eax
   737 0000059D B801000000              mov eax, 1
   738 000005A2 50                      push eax
   739 000005A3 58                      pop eax
   740 000005A4 5B                      pop ebx
   741 000005A5 01D8                    add eax, ebx
   742 000005A7 50                      push eax
   743 000005A8 58                      pop eax
   744 000005A9 A3[49040000]            mov [draw_z_char_x], eax
   745 000005AE E9E7FEFFFF              jmp draw_z_char_while#r7_while#r9_$start
   746                                  draw_z_char_while#r7_while#r9_$end:
   747                                  ;========== draw_z_char_while#r7_while#r9_$end ==========
   748                                  
   749 000005B3 A1[5B040000]            mov eax, [draw_z_char_y]
   750 000005B8 50                      push eax
   751 000005B9 B801000000              mov eax, 1
   752 000005BE 50                      push eax
   753 000005BF 58                      pop eax
   754 000005C0 5B                      pop ebx
   755 000005C1 01D8                    add eax, ebx
   756 000005C3 50                      push eax
   757 000005C4 58                      pop eax
   758 000005C5 A3[5B040000]            mov [draw_z_char_y], eax
   759 000005CA E996FEFFFF              jmp draw_z_char_while#r7_$start
   760                                  draw_z_char_while#r7_$end:
   761                                  ;========== draw_z_char_while#r7_$end ==========
   762                                  
   763 000005CF C3                      ret
   764                                  draw_z_char$pass:
   765                                  ;============[fun end]char=============
   766                                  
   767                                  
   768                                  ;############[fun begin]string############
   769 000005D0 E9F5000000              jmp draw_z_string$pass
   770                                  draw_z_string:
   771 000005D5 5D                      pop ebp
   772                                  ;param: addrVram
   773 000005D6 EB04                    jmp draw_z_string_addrVram$pass
   774 000005D8 00000000                draw_z_string_addrVram: dd 0
   775                                  draw_z_string_addrVram$pass:
   776 000005DC 58                      pop eax
   777 000005DD A3[D8050000]            mov [draw_z_string_addrVram], eax
   778                                  ;param: screenWidth
   779 000005E2 EB04                    jmp draw_z_string_screenWidth$pass
   780 000005E4 00000000                draw_z_string_screenWidth: dd 0
   781                                  draw_z_string_screenWidth$pass:
   782 000005E8 58                      pop eax
   783 000005E9 A3[E4050000]            mov [draw_z_string_screenWidth], eax
   784                                  ;param: strAddr
   785 000005EE EB04                    jmp draw_z_string_strAddr$pass
   786 000005F0 00000000                draw_z_string_strAddr: dd 0
   787                                  draw_z_string_strAddr$pass:
   788 000005F4 58                      pop eax
   789 000005F5 A3[F0050000]            mov [draw_z_string_strAddr], eax
   790                                  ;param: top
   791 000005FA EB04                    jmp draw_z_string_top$pass
   792 000005FC 00000000                draw_z_string_top: dd 0
   793                                  draw_z_string_top$pass:
   794 00000600 58                      pop eax
   795 00000601 A3[FC050000]            mov [draw_z_string_top], eax
   796                                  ;param: left
   797 00000606 EB04                    jmp draw_z_string_left$pass
   798 00000608 00000000                draw_z_string_left: dd 0
   799                                  draw_z_string_left$pass:
   800 0000060C 58                      pop eax
   801 0000060D A3[08060000]            mov [draw_z_string_left], eax
   802 00000612 55                      push ebp
   803 00000613 B800000000              mov eax, 0
   804 00000618 50                      push eax
   805 00000619 EB04                    jmp draw_z_string_i$pass
   806 0000061B 00000000                draw_z_string_i: dd 0
   807                                  draw_z_string_i$pass:
   808 0000061F 58                      pop eax
   809 00000620 A3[1B060000]            mov [draw_z_string_i], eax
   810                                  
   811                                  ;########## draw_z_string_while#r31_$start ##########
   812                                  draw_z_string_while#r31_$start:
   813 00000625 A1[1B060000]            mov eax, [draw_z_string_i]
   814 0000062A 50                      push eax
   815 0000062B 58                      pop eax
   816 0000062C BB04000000              mov ebx, 4
   817 00000631 F7E3                    mul ebx
   818 00000633 8B98[F0050000]          mov ebx, [draw_z_string_strAddr+eax]
   819 00000639 53                      push ebx
   820 0000063A B800000000              mov eax, 0
   821 0000063F 50                      push eax
   822 00000640 5B                      pop ebx
   823 00000641 58                      pop eax
   824 00000642 39D8                    cmp eax, ebx
   825 00000644 7507                    jne draw_z_string_while#r31_neq#r41$true
   826 00000646 B800000000              mov eax, 0
   827 0000064B EB05                    jmp draw_z_string_while#r31_neq#r41$false
   828                                  draw_z_string_while#r31_neq#r41$true:
   829 0000064D B801000000              mov eax, 1
   830                                  draw_z_string_while#r31_neq#r41$false:
   831 00000652 50                      push eax
   832 00000653 58                      pop eax
   833 00000654 83F800                  cmp eax, 0
   834 00000657 7470                    je draw_z_string_while#r31_$end
   835 00000659 A1[08060000]            mov eax, [draw_z_string_left]
   836 0000065E 50                      push eax
   837 0000065F A1[1B060000]            mov eax, [draw_z_string_i]
   838 00000664 50                      push eax
   839 00000665 B808000000              mov eax, 8
   840 0000066A 50                      push eax
   841 0000066B 58                      pop eax
   842 0000066C 5B                      pop ebx
   843 0000066D F7E3                    mul ebx
   844 0000066F 50                      push eax
   845 00000670 58                      pop eax
   846 00000671 5B                      pop ebx
   847 00000672 01D8                    add eax, ebx
   848 00000674 50                      push eax
   849 00000675 A1[FC050000]            mov eax, [draw_z_string_top]
   850 0000067A 50                      push eax
   851 0000067B B801000000              mov eax, 1
   852 00000680 50                      push eax
   853 00000681 B802000000              mov eax, 2
   854 00000686 50                      push eax
   855 00000687 A1[1B060000]            mov eax, [draw_z_string_i]
   856 0000068C 50                      push eax
   857 0000068D 58                      pop eax
   858 0000068E BB04000000              mov ebx, 4
   859 00000693 F7E3                    mul ebx
   860 00000695 8B98[F0050000]          mov ebx, [draw_z_string_strAddr+eax]
   861 0000069B 53                      push ebx
   862 0000069C A1[E4050000]            mov eax, [draw_z_string_screenWidth]
   863 000006A1 50                      push eax
   864 000006A2 A1[D8050000]            mov eax, [draw_z_string_addrVram]
   865 000006A7 50                      push eax
   866 000006A8 E827FDFFFF              call draw_z_char
   867                                  
   868 000006AD A1[1B060000]            mov eax, [draw_z_string_i]
   869 000006B2 50                      push eax
   870 000006B3 B801000000              mov eax, 1
   871 000006B8 50                      push eax
   872 000006B9 58                      pop eax
   873 000006BA 5B                      pop ebx
   874 000006BB 01D8                    add eax, ebx
   875 000006BD 50                      push eax
   876 000006BE 58                      pop eax
   877 000006BF A3[1B060000]            mov [draw_z_string_i], eax
   878 000006C4 E95CFFFFFF              jmp draw_z_string_while#r31_$start
   879                                  draw_z_string_while#r31_$end:
   880                                  ;========== draw_z_string_while#r31_$end ==========
   881                                  
   882 000006C9 C3                      ret
   883                                  draw_z_string$pass:
   884                                  ;============[fun end]string=============
   885                                  
   886                                  
   887 000006CA E900010000              jmp font_z_A$pass
   888 000006CF 000000000000000000-     font_z_A: dd 00, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   888 000006D8 000000000000000000-
   888 000006E1 000000000000000000-
   888 000006EA 000000000000000000-
   888 000006F3 000000000000000001-
   888 000006FC 000000010000000000-
   888 00000705 000000000000000000-
   888 0000070E 000000000000000000-
   888 00000717 010000000000000000-
   888 00000720 000000010000000000-
   888 00000729 000000000000000000-
   888 00000732 000100000000000000-
   888 0000073B 000000000000000000-
   888 00000744 000000010000000000-
   888 0000074D 000000000000010000-
   888 00000756 000100000001000000-
   888 0000075F 010000000100000001-
   888 00000768 000000000000000000-
   888 00000771 000001000000000000-
   888 0000077A 000000000000000000-
   888 00000783 000000000100000000-
   888 0000078C 000000000000000100-
   888 00000795 000000000000000000-
   888 0000079E 000000000000000000-
   888 000007A7 010000000000000000-
   888 000007B0 000000000000000000-
   888 000007B9 000000000000000000-
   888 000007C2 000000000000000000-
   888 000007CB 00000000           
   890                                  font_z_A$pass:
   891 000007CF B8[CF060000]            mov eax, font_z_A
   892 000007D4 A1[D3060000]            mov eax, [font_z_A+4]
   893                                  
   894 000007D9 E900010000              jmp font_z_B$pass
   895 000007DE 000000000000000000-     font_z_B: dd 00, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   895 000007E7 000000000000000000-
   895 000007F0 000000000000000000-
   895 000007F9 000000000000000000-
   895 00000802 010000000100000001-
   895 0000080B 000000010000000100-
   895 00000814 000000000000000000-
   895 0000081D 000000000001000000-
   895 00000826 000000000000000000-
   895 0000082F 000000000000000100-
   895 00000838 000000000000000000-
   895 00000841 000100000001000000-
   895 0000084A 010000000100000001-
   895 00000853 000000000000000000-
   895 0000085C 000000000000010000-
   895 00000865 000000000000000000-
   895 0000086E 000000000000000001-
   895 00000877 000000000000000000-
   895 00000880 000001000000000000-
   895 00000889 000000000000000000-
   895 00000892 000000000100000000-
   895 0000089B 000000000000000100-
   895 000008A4 000001000000010000-
   895 000008AD 000100000001000000-
   895 000008B6 000000000000000000-
   895 000008BF 000000000000000000-
   895 000008C8 000000000000000000-
   895 000008D1 000000000000000000-
   895 000008DA 00000000           
   897                                  font_z_B$pass:
   898 000008DE B8[DE070000]            mov eax, font_z_B
   899 000008E3 A1[E2070000]            mov eax, [font_z_B+4]
   900                                  
   901 000008E8 E900010000              jmp font_z_C$pass
   902 000008ED 000000000000000000-     font_z_C: dd 00, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   902 000008F6 000000000000000000-
   902 000008FF 000000000000000000-
   902 00000908 000000000000000000-
   902 00000911 000000000100000001-
   902 0000091A 000000010000000100-
   902 00000923 000000000000000000-
   902 0000092C 000000000001000000-
   902 00000935 000000000000000000-
   902 0000093E 000000000000000100-
   902 00000947 000000000000000000-
   902 00000950 000100000000000000-
   902 00000959 000000000000000000-
   902 00000962 000000000000000000-
   902 0000096B 000000000000010000-
   902 00000974 000000000000000000-
   902 0000097D 000000000000000000-
   902 00000986 000000000000000000-
   902 0000098F 000001000000000000-
   902 00000998 000000000000000000-
   902 000009A1 000000000100000000-
   902 000009AA 000000000000000000-
   902 000009B3 000001000000010000-
   902 000009BC 000100000001000000-
   902 000009C5 000000000000000000-
   902 000009CE 000000000000000000-
   902 000009D7 000000000000000000-
   902 000009E0 000000000000000000-
   902 000009E9 00000000           
   904                                  font_z_C$pass:
   905 000009ED B8[ED080000]            mov eax, font_z_C
   906 000009F2 A1[F1080000]            mov eax, [font_z_C+4]
   907                                  
   908 000009F7 E900010000              jmp font_z_D$pass
   909 000009FC 000000000000000000-     font_z_D: dd 00, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   909 00000A05 000000000000000000-
   909 00000A0E 000000000000000000-
   909 00000A17 000000000000000000-
   909 00000A20 010000000100000001-
   909 00000A29 000000010000000100-
   909 00000A32 000000000000000000-
   909 00000A3B 000000000001000000-
   909 00000A44 000000000000000000-
   909 00000A4D 000000000000000100-
   909 00000A56 000000000000000000-
   909 00000A5F 000100000000000000-
   909 00000A68 000000000000000000-
   909 00000A71 000000010000000000-
   909 00000A7A 000000000000010000-
   909 00000A83 000000000000000000-
   909 00000A8C 000000000000000001-
   909 00000A95 000000000000000000-
   909 00000A9E 000001000000000000-
   909 00000AA7 000000000000000000-
   909 00000AB0 000000000100000000-
   909 00000AB9 000000000000000100-
   909 00000AC2 000001000000010000-
   909 00000ACB 000100000001000000-
   909 00000AD4 000000000000000000-
   909 00000ADD 000000000000000000-
   909 00000AE6 000000000000000000-
   909 00000AEF 000000000000000000-
   909 00000AF8 00000000           
   911                                  font_z_D$pass:
   912 00000AFC B8[FC090000]            mov eax, font_z_D
   913 00000B01 A1[000A0000]            mov eax, [font_z_D+4]
   914                                  
   915 00000B06 E900010000              jmp font_z_E$pass
   916 00000B0B 000000000000000000-     font_z_E: dd 00, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   916 00000B14 000000000000000000-
   916 00000B1D 000000000000000000-
   916 00000B26 000000000000000000-
   916 00000B2F 010000000100000001-
   916 00000B38 000000010000000100-
   916 00000B41 000001000000000000-
   916 00000B4A 000000000001000000-
   916 00000B53 000000000000000000-
   916 00000B5C 000000000000000000-
   916 00000B65 000000000000000000-
   916 00000B6E 000100000001000000-
   916 00000B77 010000000100000001-
   916 00000B80 000000010000000000-
   916 00000B89 000000000000010000-
   916 00000B92 000000000000000000-
   916 00000B9B 000000000000000000-
   916 00000BA4 000000000000000000-
   916 00000BAD 000001000000000000-
   916 00000BB6 000000000000000000-
   916 00000BBF 000000000000000000-
   916 00000BC8 000000000000000100-
   916 00000BD1 000001000000010000-
   916 00000BDA 000100000001000000-
   916 00000BE3 010000000000000000-
   916 00000BEC 000000000000000000-
   916 00000BF5 000000000000000000-
   916 00000BFE 000000000000000000-
   916 00000C07 00000000           
   918                                  font_z_E$pass:
   919 00000C0B B8[0B0B0000]            mov eax, font_z_E
   920 00000C10 A1[0F0B0000]            mov eax, [font_z_E+4]
   921                                  
   922 00000C15 E900010000              jmp font_z_F$pass
   923 00000C1A 000000000000000000-     font_z_F: dd 00, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   923 00000C23 000000000000000000-
   923 00000C2C 000000000000000000-
   923 00000C35 000000000000000000-
   923 00000C3E 010000000100000001-
   923 00000C47 000000010000000100-
   923 00000C50 000001000000000000-
   923 00000C59 000000000001000000-
   923 00000C62 000000000000000000-
   923 00000C6B 000000000000000000-
   923 00000C74 000000000000000000-
   923 00000C7D 000100000001000000-
   923 00000C86 010000000100000001-
   923 00000C8F 000000000000000000-
   923 00000C98 000000000000010000-
   923 00000CA1 000000000000000000-
   923 00000CAA 000000000000000000-
   923 00000CB3 000000000000000000-
   923 00000CBC 000001000000000000-
   923 00000CC5 000000000000000000-
   923 00000CCE 000000000000000000-
   923 00000CD7 000000000000000100-
   923 00000CE0 000000000000000000-
   923 00000CE9 000000000000000000-
   923 00000CF2 000000000000000000-
   923 00000CFB 000000000000000000-
   923 00000D04 000000000000000000-
   923 00000D0D 000000000000000000-
   923 00000D16 00000000           
   925                                  font_z_F$pass:
   926 00000D1A B8[1A0C0000]            mov eax, font_z_F
   927 00000D1F A1[1E0C0000]            mov eax, [font_z_F+4]
   928                                  
   929 00000D24 E900010000              jmp font_z_G$pass
   930 00000D29 000000000000000000-     font_z_G: dd 00, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   930 00000D32 000000000000000000-
   930 00000D3B 000000000000000000-
   930 00000D44 000000000000000000-
   930 00000D4D 000000000100000001-
   930 00000D56 000000010000000100-
   930 00000D5F 000000000000000000-
   930 00000D68 000000000001000000-
   930 00000D71 000000000000000000-
   930 00000D7A 000000000000000100-
   930 00000D83 000000000000000000-
   930 00000D8C 000100000000000000-
   930 00000D95 000000000000000000-
   930 00000D9E 000000000000000000-
   930 00000DA7 000000000000010000-
   930 00000DB0 000000000000000000-
   930 00000DB9 000000000100000001-
   930 00000DC2 000000000000000000-
   930 00000DCB 000001000000000000-
   930 00000DD4 000000000000000000-
   930 00000DDD 000000000100000000-
   930 00000DE6 000000000000000000-
   930 00000DEF 000001000000010000-
   930 00000DF8 000100000001000000-
   930 00000E01 010000000000000000-
   930 00000E0A 000000000000000000-
   930 00000E13 000000000000000000-
   930 00000E1C 000000000000000000-
   930 00000E25 00000000           
   932                                  font_z_G$pass:
   933 00000E29 B8[290D0000]            mov eax, font_z_G
   934 00000E2E A1[2D0D0000]            mov eax, [font_z_G+4]
   935                                  
   936 00000E33 E900010000              jmp font_z_H$pass
   937 00000E38 000000000000000000-     font_z_H: dd 00, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   937 00000E41 000000000000000000-
   937 00000E4A 000000000000000000-
   937 00000E53 000000000000000000-
   937 00000E5C 010000000000000000-
   937 00000E65 000000000000000000-
   937 00000E6E 000001000000000000-
   937 00000E77 000000000001000000-
   937 00000E80 000000000000000000-
   937 00000E89 000000000000000100-
   937 00000E92 000000000000000000-
   937 00000E9B 000100000001000000-
   937 00000EA4 010000000100000001-
   937 00000EAD 000000010000000000-
   937 00000EB6 000000000000010000-
   937 00000EBF 000000000000000000-
   937 00000EC8 000000000000000001-
   937 00000ED1 000000000000000000-
   937 00000EDA 000001000000000000-
   937 00000EE3 000000000000000000-
   937 00000EEC 000000000100000000-
   937 00000EF5 000000000000000100-
   937 00000EFE 000000000000000000-
   937 00000F07 000000000000000000-
   937 00000F10 010000000000000000-
   937 00000F19 000000000000000000-
   937 00000F22 000000000000000000-
   937 00000F2B 000000000000000000-
   937 00000F34 00000000           
   939                                  font_z_H$pass:
   940 00000F38 B8[380E0000]            mov eax, font_z_H
   941 00000F3D A1[3C0E0000]            mov eax, [font_z_H+4]
   942                                  
   943 00000F42 E900010000              jmp font_z_I$pass
   944 00000F47 000000000000000000-     font_z_I: dd 00, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   944 00000F50 000000000000000000-
   944 00000F59 000000000000000000-
   944 00000F62 000000000000000000-
   944 00000F6B 000000000100000001-
   944 00000F74 000000010000000000-
   944 00000F7D 000000000000000000-
   944 00000F86 000000000000000000-
   944 00000F8F 000000000100000000-
   944 00000F98 000000000000000000-
   944 00000FA1 000000000000000000-
   944 00000FAA 000000000000000000-
   944 00000FB3 010000000000000000-
   944 00000FBC 000000000000000000-
   944 00000FC5 000000000000000000-
   944 00000FCE 000000000001000000-
   944 00000FD7 000000000000000000-
   944 00000FE0 000000000000000000-
   944 00000FE9 000000000000000000-
   944 00000FF2 000100000000000000-
   944 00000FFB 000000000000000000-
   944 00001004 000000000000000000-
   944 0000100D 000001000000010000-
   944 00001016 000100000000000000-
   944 0000101F 000000000000000000-
   944 00001028 000000000000000000-
   944 00001031 000000000000000000-
   944 0000103A 000000000000000000-
   944 00001043 00000000           
   946                                  font_z_I$pass:
   947 00001047 B8[470F0000]            mov eax, font_z_I
   948 0000104C A1[4B0F0000]            mov eax, [font_z_I+4]
   949                                  
   950 00001051 E900010000              jmp font_z_J$pass
   951 00001056 000000000000000000-     font_z_J: dd 00, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   951 0000105F 000000000000000000-
   951 00001068 000000000000000000-
   951 00001071 000000000000000000-
   951 0000107A 000000000100000001-
   951 00001083 000000010000000100-
   951 0000108C 000000000000000000-
   951 00001095 000000000000000000-
   951 0000109E 000000000000000000-
   951 000010A7 000000010000000000-
   951 000010B0 000000000000000000-
   951 000010B9 000000000000000000-
   951 000010C2 000000000000000001-
   951 000010CB 000000000000000000-
   951 000010D4 000000000000000000-
   951 000010DD 000000000000000000-
   951 000010E6 000000000100000000-
   951 000010EF 000000000000000000-
   951 000010F8 000000000000000000-
   951 00001101 000100000000000000-
   951 0000110A 010000000000000000-
   951 00001113 000000000000000000-
   951 0000111C 000000000000000000-
   951 00001125 000100000000000000-
   951 0000112E 000000000000000000-
   951 00001137 000000000000000000-
   951 00001140 000000000000000000-
   951 00001149 000000000000000000-
   951 00001152 00000000           
   953                                  font_z_J$pass:
   954 00001156 B8[56100000]            mov eax, font_z_J
   955 0000115B A1[5A100000]            mov eax, [font_z_J+4]
   956                                  
   957 00001160 E900010000              jmp font_z_K$pass
   958 00001165 000000000000000000-     font_z_K: dd 00, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   958 0000116E 000000000000000000-
   958 00001177 000000000000000000-
   958 00001180 000000000000000000-
   958 00001189 010000000000000000-
   958 00001192 000000010000000100-
   958 0000119B 000000000000000000-
   958 000011A4 000000000001000000-
   958 000011AD 000000000100000001-
   958 000011B6 000000000000000000-
   958 000011BF 000000000000000000-
   958 000011C8 000100000001000000-
   958 000011D1 010000000000000000-
   958 000011DA 000000000000000000-
   958 000011E3 000000000000010000-
   958 000011EC 000000000001000000-
   958 000011F5 010000000000000000-
   958 000011FE 000000000000000000-
   958 00001207 000001000000000000-
   958 00001210 000000000001000000-
   958 00001219 010000000000000000-
   958 00001222 000000000000000100-
   958 0000122B 000000000000000000-
   958 00001234 000000000001000000-
   958 0000123D 010000000000000000-
   958 00001246 000000000000000000-
   958 0000124F 000000000000000000-
   958 00001258 000000000000000000-
   958 00001261 00000000           
   960                                  font_z_K$pass:
   961 00001265 B8[65110000]            mov eax, font_z_K
   962 0000126A A1[69110000]            mov eax, [font_z_K+4]
   963                                  
   964 0000126F E900010000              jmp font_z_L$pass
   965 00001274 000000000000000000-     font_z_L: dd 00, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   965 0000127D 000000000000000000-
   965 00001286 000000000000000000-
   965 0000128F 000000000000000000-
   965 00001298 000000000100000000-
   965 000012A1 000000000000000000-
   965 000012AA 000000000000000000-
   965 000012B3 000000000000000000-
   965 000012BC 010000000000000000-
   965 000012C5 000000000000000000-
   965 000012CE 000000000000000000-
   965 000012D7 000000000001000000-
   965 000012E0 000000000000000000-
   965 000012E9 000000000000000000-
   965 000012F2 000000000000000000-
   965 000012FB 000100000000000000-
   965 00001304 000000000000000000-
   965 0000130D 000000000000000000-
   965 00001316 000000000000010000-
   965 0000131F 000000000000000000-
   965 00001328 000000000000000000-
   965 00001331 000000000000000000-
   965 0000133A 000001000000010000-
   965 00001343 000100000001000000-
   965 0000134C 000000000000000000-
   965 00001355 000000000000000000-
   965 0000135E 000000000000000000-
   965 00001367 000000000000000000-
   965 00001370 00000000           
   967                                  font_z_L$pass:
   968 00001374 B8[74120000]            mov eax, font_z_L
   969 00001379 A1[78120000]            mov eax, [font_z_L+4]
   970                                  
   971 0000137E E900010000              jmp font_z_M$pass
   972 00001383 000000000000000000-     font_z_M: dd 00, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   972 0000138C 000000000000000000-
   972 00001395 000000000000000000-
   972 0000139E 000000000000000000-
   972 000013A7 010000000000000000-
   972 000013B0 000000000000000000-
   972 000013B9 000001000000000000-
   972 000013C2 000000000001000000-
   972 000013CB 010000000000000000-
   972 000013D4 000000010000000100-
   972 000013DD 000000000000000000-
   972 000013E6 000100000000000000-
   972 000013EF 010000000100000000-
   972 000013F8 000000010000000000-
   972 00001401 000000000000010000-
   972 0000140A 000000000000000000-
   972 00001413 000000000000000001-
   972 0000141C 000000000000000000-
   972 00001425 000001000000000000-
   972 0000142E 000000000000000000-
   972 00001437 000000000100000000-
   972 00001440 000000000000000100-
   972 00001449 000000000000000000-
   972 00001452 000000000000000000-
   972 0000145B 010000000000000000-
   972 00001464 000000000000000000-
   972 0000146D 000000000000000000-
   972 00001476 000000000000000000-
   972 0000147F 00000000           
   974                                  font_z_M$pass:
   975 00001483 B8[83130000]            mov eax, font_z_M
   976 00001488 A1[87130000]            mov eax, [font_z_M+4]
   977                                  
   978 0000148D E900010000              jmp font_z_N$pass
   979 00001492 000000000000000000-     font_z_N: dd 00, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   979 0000149B 000000000000000000-
   979 000014A4 000000000000000000-
   979 000014AD 000000000000000000-
   979 000014B6 010000000000000000-
   979 000014BF 000000000000000000-
   979 000014C8 000001000000000000-
   979 000014D1 000000000001000000-
   979 000014DA 010000000000000000-
   979 000014E3 000000000000000100-
   979 000014EC 000000000000000000-
   979 000014F5 000100000000000000-
   979 000014FE 010000000000000000-
   979 00001507 000000010000000000-
   979 00001510 000000000000010000-
   979 00001519 000000000000000000-
   979 00001522 010000000000000001-
   979 0000152B 000000000000000000-
   979 00001534 000001000000000000-
   979 0000153D 000000000000000000-
   979 00001546 010000000100000000-
   979 0000154F 000000000000000100-
   979 00001558 000000000000000000-
   979 00001561 000000000000000000-
   979 0000156A 010000000000000000-
   979 00001573 000000000000000000-
   979 0000157C 000000000000000000-
   979 00001585 000000000000000000-
   979 0000158E 00000000           
   981                                  font_z_N$pass:
   982 00001592 B8[92140000]            mov eax, font_z_N
   983 00001597 A1[96140000]            mov eax, [font_z_N+4]
   984                                  
   985 0000159C E900010000              jmp font_z_O$pass
   986 000015A1 000000000000000000-     font_z_O: dd 00, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   986 000015AA 000000000000000000-
   986 000015B3 000000000000000000-
   986 000015BC 000000000000000000-
   986 000015C5 010000000100000001-
   986 000015CE 000000010000000100-
   986 000015D7 000001000000000000-
   986 000015E0 000000000001000000-
   986 000015E9 000000000000000000-
   986 000015F2 000000000000000100-
   986 000015FB 000000000000000000-
   986 00001604 000100000000000000-
   986 0000160D 000000000000000000-
   986 00001616 000000010000000000-
   986 0000161F 000000000000010000-
   986 00001628 000000000000000000-
   986 00001631 000000000000000001-
   986 0000163A 000000000000000000-
   986 00001643 000001000000000000-
   986 0000164C 000000000000000000-
   986 00001655 000000000100000000-
   986 0000165E 000000000000000100-
   986 00001667 000001000000010000-
   986 00001670 000100000001000000-
   986 00001679 010000000000000000-
   986 00001682 000000000000000000-
   986 0000168B 000000000000000000-
   986 00001694 000000000000000000-
   986 0000169D 00000000           
   988                                  font_z_O$pass:
   989 000016A1 B8[A1150000]            mov eax, font_z_O
   990 000016A6 A1[A5150000]            mov eax, [font_z_O+4]
   991                                  
   992 000016AB E900010000              jmp font_z_P$pass
   993 000016B0 000000000000000000-     font_z_P: dd 00, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   993 000016B9 000000000000000000-
   993 000016C2 000000000000000000-
   993 000016CB 000000000000000000-
   993 000016D4 000000000100000001-
   993 000016DD 000000010000000000-
   993 000016E6 000000000000000000-
   993 000016EF 000000000000000000-
   993 000016F8 010000000000000000-
   993 00001701 000000010000000000-
   993 0000170A 000000000000000000-
   993 00001713 000000000001000000-
   993 0000171C 000000000000000001-
   993 00001725 000000000000000000-
   993 0000172E 000000000000000000-
   993 00001737 000100000001000000-
   993 00001740 010000000000000000-
   993 00001749 000000000000000000-
   993 00001752 000000000000010000-
   993 0000175B 000000000000000000-
   993 00001764 000000000000000000-
   993 0000176D 000000000000000000-
   993 00001776 000001000000000000-
   993 0000177F 000000000000000000-
   993 00001788 000000000000000000-
   993 00001791 000000000000000000-
   993 0000179A 000000000000000000-
   993 000017A3 000000000000000000-
   993 000017AC 00000000           
   995                                  font_z_P$pass:
   996 000017B0 B8[B0160000]            mov eax, font_z_P
   997 000017B5 A1[B4160000]            mov eax, [font_z_P+4]
   998                                  
   999 000017BA E900010000              jmp font_z_Q$pass
  1000 000017BF 000000000000000000-     font_z_Q: dd 00, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  1000 000017C8 000000000000000000-
  1000 000017D1 000000000000000000-
  1000 000017DA 000000000000000000-
  1000 000017E3 000000000000000001-
  1000 000017EC 000000010000000000-
  1000 000017F5 000000000000000000-
  1000 000017FE 000000000000000000-
  1000 00001807 010000000000000000-
  1000 00001810 000000010000000000-
  1000 00001819 000000000000000000-
  1000 00001822 000100000000000000-
  1000 0000182B 000000000000000000-
  1000 00001834 000000010000000000-
  1000 0000183D 000000000000010000-
  1000 00001846 000000000000000000-
  1000 0000184F 010000000000000001-
  1000 00001858 000000000000000000-
  1000 00001861 000000000000010000-
  1000 0000186A 000000000000000000-
  1000 00001873 010000000000000000-
  1000 0000187C 000000000000000000-
  1000 00001885 000000000000010000-
  1000 0000188E 000100000000000000-
  1000 00001897 010000000000000000-
  1000 000018A0 000000000000000000-
  1000 000018A9 000000000000000000-
  1000 000018B2 000000000000000000-
  1000 000018BB 00000000           
  1002                                  font_z_Q$pass:
  1003 000018BF B8[BF170000]            mov eax, font_z_Q
  1004 000018C4 A1[C3170000]            mov eax, [font_z_Q+4]
  1005                                  
  1006 000018C9 E900010000              jmp font_z_R$pass
  1007 000018CE 000000000000000000-     font_z_R: dd 00, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  1007 000018D7 000000000000000000-
  1007 000018E0 000000000000000000-
  1007 000018E9 000000000000000000-
  1007 000018F2 000000000100000001-
  1007 000018FB 000000010000000000-
  1007 00001904 000000000000000000-
  1007 0000190D 000000000000000000-
  1007 00001916 010000000000000000-
  1007 0000191F 000000010000000000-
  1007 00001928 000000000000000000-
  1007 00001931 000000000001000000-
  1007 0000193A 000000000000000001-
  1007 00001943 000000000000000000-
  1007 0000194C 000000000000000000-
  1007 00001955 000100000001000000-
  1007 0000195E 010000000000000000-
  1007 00001967 000000000000000000-
  1007 00001970 000000000000010000-
  1007 00001979 000000000000000000-
  1007 00001982 010000000000000000-
  1007 0000198B 000000000000000000-
  1007 00001994 000001000000000000-
  1007 0000199D 000000000000000000-
  1007 000019A6 010000000000000000-
  1007 000019AF 000000000000000000-
  1007 000019B8 000000000000000000-
  1007 000019C1 000000000000000000-
  1007 000019CA 00000000           
  1009                                  font_z_R$pass:
  1010 000019CE B8[CE180000]            mov eax, font_z_R
  1011 000019D3 A1[D2180000]            mov eax, [font_z_R+4]
  1012                                  
  1013 000019D8 E900010000              jmp font_z_S$pass
  1014 000019DD 000000000000000000-     font_z_S: dd 00, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  1014 000019E6 000000000000000000-
  1014 000019EF 000000000000000000-
  1014 000019F8 000000000000000000-
  1014 00001A01 000000000100000001-
  1014 00001A0A 000000010000000100-
  1014 00001A13 000000000000000000-
  1014 00001A1C 000000000001000000-
  1014 00001A25 000000000000000000-
  1014 00001A2E 000000000000000100-
  1014 00001A37 000000000000000000-
  1014 00001A40 000000000001000000-
  1014 00001A49 010000000000000000-
  1014 00001A52 000000000000000000-
  1014 00001A5B 000000000000000000-
  1014 00001A64 000000000000000000-
  1014 00001A6D 010000000100000000-
  1014 00001A76 000000000000000000-
  1014 00001A7F 000001000000000000-
  1014 00001A88 000000000000000000-
  1014 00001A91 000000000100000000-
  1014 00001A9A 000000000000000000-
  1014 00001AA3 000001000000010000-
  1014 00001AAC 000100000001000000-
  1014 00001AB5 000000000000000000-
  1014 00001ABE 000000000000000000-
  1014 00001AC7 000000000000000000-
  1014 00001AD0 000000000000000000-
  1014 00001AD9 00000000           
  1016                                  font_z_S$pass:
  1017 00001ADD B8[DD190000]            mov eax, font_z_S
  1018 00001AE2 A1[E1190000]            mov eax, [font_z_S+4]
  1019                                  
  1020 00001AE7 E900010000              jmp font_z_T$pass
  1021 00001AEC 000000000000000000-     font_z_T: dd 00, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  1021 00001AF5 000000000000000000-
  1021 00001AFE 000000000000000000-
  1021 00001B07 000000000000000000-
  1021 00001B10 010000000100000001-
  1021 00001B19 000000010000000100-
  1021 00001B22 000000000000000000-
  1021 00001B2B 000000000000000000-
  1021 00001B34 000000000100000000-
  1021 00001B3D 000000000000000000-
  1021 00001B46 000000000000000000-
  1021 00001B4F 000000000000000000-
  1021 00001B58 010000000000000000-
  1021 00001B61 000000000000000000-
  1021 00001B6A 000000000000000000-
  1021 00001B73 000000000001000000-
  1021 00001B7C 000000000000000000-
  1021 00001B85 000000000000000000-
  1021 00001B8E 000000000000000000-
  1021 00001B97 000100000000000000-
  1021 00001BA0 000000000000000000-
  1021 00001BA9 000000000000000000-
  1021 00001BB2 000000000000010000-
  1021 00001BBB 000000000000000000-
  1021 00001BC4 000000000000000000-
  1021 00001BCD 000000000000000000-
  1021 00001BD6 000000000000000000-
  1021 00001BDF 000000000000000000-
  1021 00001BE8 00000000           
  1023                                  font_z_T$pass:
  1024 00001BEC B8[EC1A0000]            mov eax, font_z_T
  1025 00001BF1 A1[F01A0000]            mov eax, [font_z_T+4]
  1026                                  
  1027 00001BF6 E900010000              jmp font_z_U$pass
  1028 00001BFB 000000000000000000-     font_z_U: dd 00, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  1028 00001C04 000000000000000000-
  1028 00001C0D 000000000000000000-
  1028 00001C16 000000000000000000-
  1028 00001C1F 010000000000000000-
  1028 00001C28 000000000000000000-
  1028 00001C31 000001000000000000-
  1028 00001C3A 000000000001000000-
  1028 00001C43 000000000000000000-
  1028 00001C4C 000000000000000100-
  1028 00001C55 000000000000000000-
  1028 00001C5E 000100000000000000-
  1028 00001C67 000000000000000000-
  1028 00001C70 000000010000000000-
  1028 00001C79 000000000000010000-
  1028 00001C82 000000000000000000-
  1028 00001C8B 000000000000000001-
  1028 00001C94 000000000000000000-
  1028 00001C9D 000000000000010000-
  1028 00001CA6 000000000000000000-
  1028 00001CAF 010000000000000000-
  1028 00001CB8 000000000000000000-
  1028 00001CC1 000000000000010000-
  1028 00001CCA 000100000000000000-
  1028 00001CD3 000000000000000000-
  1028 00001CDC 000000000000000000-
  1028 00001CE5 000000000000000000-
  1028 00001CEE 000000000000000000-
  1028 00001CF7 00000000           
  1030                                  font_z_U$pass:
  1031 00001CFB B8[FB1B0000]            mov eax, font_z_U
  1032 00001D00 A1[FF1B0000]            mov eax, [font_z_U+4]
  1033                                  
  1034 00001D05 E900010000              jmp font_z_V$pass
  1035 00001D0A 000000000000000000-     font_z_V: dd 00, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  1035 00001D13 000000000000000000-
  1035 00001D1C 000000000000000000-
  1035 00001D25 000000000000000000-
  1035 00001D2E 010000000000000000-
  1035 00001D37 000000000000000000-
  1035 00001D40 000001000000000000-
  1035 00001D49 000000000001000000-
  1035 00001D52 000000000000000000-
  1035 00001D5B 000000000000000100-
  1035 00001D64 000000000000000000-
  1035 00001D6D 000000000001000000-
  1035 00001D76 000000000000000001-
  1035 00001D7F 000000000000000000-
  1035 00001D88 000000000000000000-
  1035 00001D91 000100000000000000-
  1035 00001D9A 000000000100000000-
  1035 00001DA3 000000000000000000-
  1035 00001DAC 000000000000000000-
  1035 00001DB5 000100000001000000-
  1035 00001DBE 000000000000000000-
  1035 00001DC7 000000000000000000-
  1035 00001DD0 000000000000010000-
  1035 00001DD9 000100000000000000-
  1035 00001DE2 000000000000000000-
  1035 00001DEB 000000000000000000-
  1035 00001DF4 000000000000000000-
  1035 00001DFD 000000000000000000-
  1035 00001E06 00000000           
  1037                                  font_z_V$pass:
  1038 00001E0A B8[0A1D0000]            mov eax, font_z_V
  1039 00001E0F A1[0E1D0000]            mov eax, [font_z_V+4]
  1040                                  
  1041 00001E14 E900010000              jmp font_z_W$pass
  1042 00001E19 000000000000000000-     font_z_W: dd 00, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  1042 00001E22 000000000000000000-
  1042 00001E2B 000000000000000000-
  1042 00001E34 000000000000000000-
  1042 00001E3D 010000000000000000-
  1042 00001E46 000000000000000000-
  1042 00001E4F 000001000000000000-
  1042 00001E58 000000000001000000-
  1042 00001E61 000000000000000000-
  1042 00001E6A 000000000000000100-
  1042 00001E73 000000000000000000-
  1042 00001E7C 000100000000000000-
  1042 00001E85 000000000000000000-
  1042 00001E8E 000000010000000000-
  1042 00001E97 000000000000010000-
  1042 00001EA0 000000000001000000-
  1042 00001EA9 010000000000000001-
  1042 00001EB2 000000000000000000-
  1042 00001EBB 000001000000010000-
  1042 00001EC4 000000000000000000-
  1042 00001ECD 010000000100000000-
  1042 00001ED6 000000000000000100-
  1042 00001EDF 000000000000000000-
  1042 00001EE8 000000000000000000-
  1042 00001EF1 010000000000000000-
  1042 00001EFA 000000000000000000-
  1042 00001F03 000000000000000000-
  1042 00001F0C 000000000000000000-
  1042 00001F15 00000000           
  1044                                  font_z_W$pass:
  1045 00001F19 B8[191E0000]            mov eax, font_z_W
  1046 00001F1E A1[1D1E0000]            mov eax, [font_z_W+4]
  1047                                  
  1048 00001F23 E900010000              jmp font_z_X$pass
  1049 00001F28 000000000000000000-     font_z_X: dd 00, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  1049 00001F31 000000000000000000-
  1049 00001F3A 000000000000000000-
  1049 00001F43 000000000000000000-
  1049 00001F4C 010000000000000000-
  1049 00001F55 000000000000000000-
  1049 00001F5E 000001000000000000-
  1049 00001F67 000000000000000000-
  1049 00001F70 010000000000000000-
  1049 00001F79 000000010000000000-
  1049 00001F82 000000000000000000-
  1049 00001F8B 000000000000000000-
  1049 00001F94 010000000100000000-
  1049 00001F9D 000000000000000000-
  1049 00001FA6 000000000000000000-
  1049 00001FAF 000000000001000000-
  1049 00001FB8 010000000000000000-
  1049 00001FC1 000000000000000000-
  1049 00001FCA 000000000000010000-
  1049 00001FD3 000000000000000000-
  1049 00001FDC 010000000000000000-
  1049 00001FE5 000000000000000100-
  1049 00001FEE 000000000000000000-
  1049 00001FF7 000000000000000000-
  1049 00002000 010000000000000000-
  1049 00002009 000000000000000000-
  1049 00002012 000000000000000000-
  1049 0000201B 000000000000000000-
  1049 00002024 00000000           
  1051                                  font_z_X$pass:
  1052 00002028 B8[281F0000]            mov eax, font_z_X
  1053 0000202D A1[2C1F0000]            mov eax, [font_z_X+4]
  1054                                  
  1055 00002032 E900010000              jmp font_z_Y$pass
  1056 00002037 000000000000000000-     font_z_Y: dd 00, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  1056 00002040 000000000000000000-
  1056 00002049 000000000000000000-
  1056 00002052 000000000000000000-
  1056 0000205B 010000000000000000-
  1056 00002064 000000000000000100-
  1056 0000206D 000000000000000000-
  1056 00002076 000000000000000000-
  1056 0000207F 010000000000000001-
  1056 00002088 000000000000000000-
  1056 00002091 000000000000000000-
  1056 0000209A 000000000000000000-
  1056 000020A3 010000000000000000-
  1056 000020AC 000000000000000000-
  1056 000020B5 000000000000000000-
  1056 000020BE 000000000001000000-
  1056 000020C7 000000000000000000-
  1056 000020D0 000000000000000000-
  1056 000020D9 000000000000000000-
  1056 000020E2 000100000000000000-
  1056 000020EB 000000000000000000-
  1056 000020F4 000000000000000000-
  1056 000020FD 000000000000010000-
  1056 00002106 000000000000000000-
  1056 0000210F 000000000000000000-
  1056 00002118 000000000000000000-
  1056 00002121 000000000000000000-
  1056 0000212A 000000000000000000-
  1056 00002133 00000000           
  1058                                  font_z_Y$pass:
  1059 00002137 B8[37200000]            mov eax, font_z_Y
  1060 0000213C A1[3B200000]            mov eax, [font_z_Y+4]
  1061                                  
  1062 00002141 E900010000              jmp font_z_Z$pass
  1063 00002146 000000000000000000-     font_z_Z: dd 00, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  1063 0000214F 000000000000000000-
  1063 00002158 000000000000000000-
  1063 00002161 000000000000000000-
  1063 0000216A 010000000100000001-
  1063 00002173 000000010000000100-
  1063 0000217C 000001000000000000-
  1063 00002185 000000000000000000-
  1063 0000218E 000000000000000000-
  1063 00002197 000000010000000000-
  1063 000021A0 000000000000000000-
  1063 000021A9 000000000000000000-
  1063 000021B2 000000000100000000-
  1063 000021BB 000000000000000000-
  1063 000021C4 000000000000000000-
  1063 000021CD 000000000001000000-
  1063 000021D6 000000000000000000-
  1063 000021DF 000000000000000000-
  1063 000021E8 000000000000010000-
  1063 000021F1 000000000000000000-
  1063 000021FA 000000000000000000-
  1063 00002203 000000000000000100-
  1063 0000220C 000001000000010000-
  1063 00002215 000100000001000000-
  1063 0000221E 010000000000000000-
  1063 00002227 000000000000000000-
  1063 00002230 000000000000000000-
  1063 00002239 000000000000000000-
  1063 00002242 00000000           
  1065                                  font_z_Z$pass:
  1066 00002246 B8[46210000]            mov eax, font_z_Z
  1067 0000224B A1[4A210000]            mov eax, [font_z_Z+4]
  1068                                  
  1069 00002250 E900010000              jmp font_z_question$pass
  1070 00002255 000000000000000000-     font_z_question: dd 00, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 
  1070 0000225E 000000000000000000-
  1070 00002267 000000000000000000-
  1070 00002270 000000000000000000-
  1070 00002279 000000000100000001-
  1070 00002282 000000010000000100-
  1070 0000228B 000000000000000000-
  1070 00002294 000000000001000000-
  1070 0000229D 000000000000000000-
  1070 000022A6 000000000000000100-
  1070 000022AF 000000000000000000-
  1070 000022B8 000000000000000000-
  1070 000022C1 000000000000000001-
  1070 000022CA 000000000000000000-
  1070 000022D3 000000000000000000-
  1070 000022DC 000000000000000000-
  1070 000022E5 010000000000000000-
  1070 000022EE 000000000000000000-
  1070 000022F7 000000000000000000-
  1070 00002300 000000000001000000-
  1070 00002309 000000000000000000-
  1070 00002312 000000000000000000-
  1070 0000231B 000000000000000000-
  1070 00002324 000000000000000000-
  1070 0000232D 000000000000000000-
  1070 00002336 000000000000000000-
  1070 0000233F 000000000000010000-
  1070 00002348 000000000000000000-
  1070 00002351 00000000           
  1072                                  font_z_question$pass:
  1073 00002355 B8[55220000]            mov eax, font_z_question
  1074 0000235A A1[59220000]            mov eax, [font_z_question+4]
  1075                                  
  1076 0000235F E900010000              jmp font_z_space$pass
  1077 00002364 000000000000000000-     font_z_space: dd 00, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  1077 0000236D 000000000000000000-
  1077 00002376 000000000000000000-
  1077 0000237F 000000000000000000-
  1077 00002388 000000000000000000-
  1077 00002391 000000000000000000-
  1077 0000239A 000000000000000000-
  1077 000023A3 000000000000000000-
  1077 000023AC 000000000000000000-
  1077 000023B5 000000000000000000-
  1077 000023BE 000000000000000000-
  1077 000023C7 000000000000000000-
  1077 000023D0 000000000000000000-
  1077 000023D9 000000000000000000-
  1077 000023E2 000000000000000000-
  1077 000023EB 000000000000000000-
  1077 000023F4 000000000000000000-
  1077 000023FD 000000000000000000-
  1077 00002406 000000000000000000-
  1077 0000240F 000000000000000000-
  1077 00002418 000000000000000000-
  1077 00002421 000000000000000000-
  1077 0000242A 000000000000000000-
  1077 00002433 000000000000000000-
  1077 0000243C 000000000000000000-
  1077 00002445 000000000000000000-
  1077 0000244E 000000000000000000-
  1077 00002457 000000000000000000-
  1077 00002460 00000000           
  1079                                  font_z_space$pass:
  1080 00002464 B8[64230000]            mov eax, font_z_space
  1081 00002469 A1[68230000]            mov eax, [font_z_space+4]
  1082                                  
  1083 0000246E E900010000              jmp font_z_add$pass
  1084 00002473 000000000000000000-     font_z_add: dd 00, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  1084 0000247C 000000000000000000-
  1084 00002485 000000000000000000-
  1084 0000248E 000000000000000000-
  1084 00002497 000000000000000001-
  1084 000024A0 000000010000000000-
  1084 000024A9 000000000000000000-
  1084 000024B2 000000000000000000-
  1084 000024BB 000000000100000001-
  1084 000024C4 000000000000000000-
  1084 000024CD 000000000000000000-
  1084 000024D6 000100000001000000-
  1084 000024DF 010000000100000001-
  1084 000024E8 000000010000000000-
  1084 000024F1 000000000000010000-
  1084 000024FA 000100000001000000-
  1084 00002503 010000000100000001-
  1084 0000250C 000000000000000000-
  1084 00002515 000000000000000000-
  1084 0000251E 000100000001000000-
  1084 00002527 000000000000000000-
  1084 00002530 000000000000000000-
  1084 00002539 000000000000010000-
  1084 00002542 000100000000000000-
  1084 0000254B 000000000000000000-
  1084 00002554 000000000000000000-
  1084 0000255D 000000000000000000-
  1084 00002566 000000000000000000-
  1084 0000256F 00000000           
  1086                                  font_z_add$pass:
  1087 00002573 B8[73240000]            mov eax, font_z_add
  1088 00002578 A1[77240000]            mov eax, [font_z_add+4]
  1089                                  
  1090 0000257D E900010000              jmp font_z_sub$pass
  1091 00002582 000000000000000000-     font_z_sub: dd 00, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  1091 0000258B 000000000000000000-
  1091 00002594 000000000000000000-
  1091 0000259D 000000000000000000-
  1091 000025A6 000000000000000000-
  1091 000025AF 000000000000000000-
  1091 000025B8 000000000000000000-
  1091 000025C1 000000000000000000-
  1091 000025CA 000000000000000000-
  1091 000025D3 000000000000000000-
  1091 000025DC 000000000000000000-
  1091 000025E5 000100000001000000-
  1091 000025EE 010000000100000001-
  1091 000025F7 000000010000000000-
  1091 00002600 000000000000010000-
  1091 00002609 000100000001000000-
  1091 00002612 010000000100000001-
  1091 0000261B 000000000000000000-
  1091 00002624 000000000000000000-
  1091 0000262D 000000000000000000-
  1091 00002636 000000000000000000-
  1091 0000263F 000000000000000000-
  1091 00002648 000000000000000000-
  1091 00002651 000000000000000000-
  1091 0000265A 000000000000000000-
  1091 00002663 000000000000000000-
  1091 0000266C 000000000000000000-
  1091 00002675 000000000000000000-
  1091 0000267E 00000000           
  1093                                  font_z_sub$pass:
  1094 00002682 B8[82250000]            mov eax, font_z_sub
  1095 00002687 A1[86250000]            mov eax, [font_z_sub+4]
  1096                                  
  1097 0000268C E9A00F0000              jmp font_z_screen_buf$pass
  1098 00002691 200000002000000020-     font_z_screen_buf: dd 032, 32, 32, 32, 33, 34, 35, 36, 37, 38, 39, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 3...
  1098 0000269A 000000200000002100-
  1098 000026A3 000022000000230000-
  1098 000026AC 002400000025000000-
  1098 000026B5 260000002700000020-
  1098 000026BE 000000200000002000-
  1098 000026C7 000020000000200000-
  1098 000026D0 002000000020000000-
  1098 000026D9 200000002000000020-
  1098 000026E2 000000200000002000-
  1098 000026EB 000020000000200000-
  1098 000026F4 002000000020000000-
  1098 000026FD 200000002000000020-
  1098 00002706 000000200000002000-
  1098 0000270F 000020000000200000-
  1098 00002718 002000000020000000-
  1098 00002721 200000002000000020-
  1098 0000272A 000000200000002000-
  1098 00002733 000020000000200000-
  1098 0000273C 002000000020000000-
  1098 00002745 200000002000000020-
  1098 0000274E 000000200000002000-
  1098 00002757 000020000000200000-
  1098 00002760 002000000020000000-
  1098 00002769 200000002000000020-
  1098 00002772 000000200000002000-
  1098 0000277B 000020000000200000-
  1098 00002784 002000000020000000-
  1098 0000278D 200000002000000020-
  1098 00002796 000000200000002000-
  1098 0000279F 000020000000200000-
  1098 000027A8 002000000020000000-
  1098 000027B1 200000002000000020-
  1098 000027BA 000000200000002000-
  1098 000027C3 000020000000200000-
  1098 000027CC 002000000020000000-
  1098 000027D5 200000002000000020-
  1098 000027DE 000000200000002000-
  1098 000027E7 000020000000200000-
  1098 000027F0 002000000020000000-
  1098 000027F9 200000002000000020-
  1098 00002802 000000200000002000-
  1098 0000280B 000020000000200000-
  1098 00002814 002000000020000000-
  1098 0000281D 200000002000000020-
  1098 00002826 000000200000002000-
  1098 0000282F 000020000000200000-
  1098 00002838 002000000020000000-
  1098 00002841 200000002000000020-
  1098 0000284A 000000200000002000-
  1098 00002853 000020000000200000-
  1098 0000285C 002000000020000000-
  1098 00002865 200000002000000020-
  1098 0000286E 000000200000002000-
  1098 00002877 000020000000200000-
  1098 00002880 002000000020000000-
  1098 00002889 200000002000000020-
  1098 00002892 000000200000002000-
  1098 0000289B 000020000000200000-
  1098 000028A4 002000000020000000-
  1098 000028AD 200000002000000020-
  1098 000028B6 000000200000002000-
  1098 000028BF 000020000000200000-
  1098 000028C8 002000000020000000-
  1098 000028D1 200000002000000020-
  1098 000028DA 000000200000002000-
  1098 000028E3 000020000000200000-
  1098 000028EC 002000000020000000-
  1098 000028F5 200000002000000020-
  1098 000028FE 000000200000002000-
  1098 00002907 000020000000200000-
  1098 00002910 002000000020000000-
  1098 00002919 200000002000000020-
  1098 00002922 000000200000002000-
  1098 0000292B 000020000000200000-
  1098 00002934 002000000020000000-
  1098 0000293D 200000002000000020-
  1098 00002946 000000200000002000-
  1098 0000294F 000020000000200000-
  1098 00002958 002000000020000000-
  1098 00002961 200000002000000020-
  1098 0000296A 000000200000002000-
  1098 00002973 000020000000200000-
  1098 0000297C 002000000020000000-
  1098 00002985 200000002000000020-
  1098 0000298E 000000200000002000-
  1098 00002997 000020000000200000-
  1098 000029A0 002000000020000000-
  1098 000029A9 200000002000000020-
  1098 000029B2 000000200000002000-
  1098 000029BB 000020000000200000-
  1098 000029C4 002000000020000000-
  1098 000029CD 200000002000000020-
  1098 000029D6 000000200000002000-
  1098 000029DF 000020000000200000-
  1098 000029E8 002000000020000000-
  1098 000029F1 200000002000000020-
  1098 000029FA 000000200000002000-
  1098 00002A03 000020000000200000-
  1098 00002A0C 002000000020000000-
  1098 00002A15 200000002000000020-
  1098 00002A1E 000000200000002000-
  1098 00002A27 000020000000200000-
  1098 00002A30 002000000020000000-
  1098 00002A39 200000002000000020-
  1098 00002A42 000000200000002000-
  1098 00002A4B 000020000000200000-
  1098 00002A54 002000000020000000-
  1098 00002A5D 200000002000000020-
  1098 00002A66 000000200000002000-
  1098 00002A6F 000020000000200000-
  1098 00002A78 002000000020000000-
  1098 00002A81 200000002000000020-
  1098 00002A8A 000000200000002000-
  1098 00002A93 000020000000200000-
  1098 00002A9C 002000000020000000-
  1098 00002AA5 200000002000000020-
  1098 00002AAE 000000200000002000-
  1098 00002AB7 000020000000200000-
  1098 00002AC0 002000000020000000-
  1098 00002AC9 200000002000000020-
  1098 00002AD2 000000200000002000-
  1098 00002ADB 000020000000200000-
  1098 00002AE4 002000000020000000-
  1098 00002AED 200000002000000020-
  1098 00002AF6 000000200000002000-
  1098 00002AFF 000020000000200000-
  1098 00002B08 002000000020000000-
  1098 00002B11 200000002000000020-
  1098 00002B1A 000000200000002000-
  1098 00002B23 000020000000200000-
  1098 00002B2C 002000000020000000-
  1098 00002B35 200000002000000020-
  1098 00002B3E 000000200000002000-
  1098 00002B47 000020000000200000-
  1098 00002B50 002000000020000000-
  1098 00002B59 200000002000000020-
  1098 00002B62 000000200000002000-
  1098 00002B6B 000020000000200000-
  1098 00002B74 002000000020000000-
  1098 00002B7D 200000002000000020-
  1098 00002B86 000000200000002000-
  1098 00002B8F 000020000000200000-
  1098 00002B98 002000000020000000-
  1098 00002BA1 200000002000000020-
  1098 00002BAA 000000200000002000-
  1098 00002BB3 000020000000200000-
  1098 00002BBC 002000000020000000-
  1098 00002BC5 200000002000000020-
  1098 00002BCE 000000200000002000-
  1098 00002BD7 000020000000200000-
  1098 00002BE0 002000000020000000-
  1098 00002BE9 200000002000000020-
  1098 00002BF2 000000200000002000-
  1098 00002BFB 000020000000200000-
  1098 00002C04 002000000020000000-
  1098 00002C0D 200000002000000020-
  1098 00002C16 000000200000002000-
  1098 00002C1F 000020000000200000-
  1098 00002C28 002000000020000000-
  1098 00002C31 200000002000000020-
  1098 00002C3A 000000200000002000-
  1098 00002C43 000020000000200000-
  1098 00002C4C 002000000020000000-
  1098 00002C55 200000002000000020-
  1098 00002C5E 000000200000002000-
  1098 00002C67 000020000000200000-
  1098 00002C70 002000000020000000-
  1098 00002C79 200000002000000020-
  1098 00002C82 000000200000002000-
  1098 00002C8B 000020000000200000-
  1098 00002C94 002000000020000000-
  1098 00002C9D 200000002000000020-
  1098 00002CA6 000000200000002000-
  1098 00002CAF 000020000000200000-
  1098 00002CB8 002000000020000000-
  1098 00002CC1 200000002000000020-
  1098 00002CCA 000000200000002000-
  1098 00002CD3 000020000000200000-
  1098 00002CDC 002000000020000000-
  1098 00002CE5 200000002000000020-
  1098 00002CEE 000000200000002000-
  1098 00002CF7 000020000000200000-
  1098 00002D00 002000000020000000-
  1098 00002D09 200000002000000020-
  1098 00002D12 000000200000002000-
  1098 00002D1B 000020000000200000-
  1098 00002D24 002000000020000000-
  1098 00002D2D 200000002000000020-
  1098 00002D36 000000200000002000-
  1098 00002D3F 000020000000200000-
  1098 00002D48 002000000020000000-
  1098 00002D51 200000002000000020-
  1098 00002D5A 000000200000002000-
  1098 00002D63 000020000000200000-
  1098 00002D6C 002000000020000000-
  1098 00002D75 200000002000000020-
  1098 00002D7E 000000200000002000-
  1098 00002D87 000020000000200000-
  1098 00002D90 002000000020000000-
  1098 00002D99 200000002000000020-
  1098 00002DA2 000000200000002000-
  1098 00002DAB 000020000000200000-
  1098 00002DB4 002000000020000000-
  1098 00002DBD 200000002000000020-
  1098 00002DC6 000000200000002000-
  1098 00002DCF 000020000000200000-
  1098 00002DD8 002000000020000000-
  1098 00002DE1 200000002000000020-
  1098 00002DEA 000000200000002000-
  1098 00002DF3 000020000000200000-
  1098 00002DFC 002000000020000000-
  1098 00002E05 200000002000000020-
  1098 00002E0E 000000200000002000-
  1098 00002E17 000020000000200000-
  1098 00002E20 002000000020000000-
  1098 00002E29 200000002000000020-
  1098 00002E32 000000200000002000-
  1098 00002E3B 000020000000200000-
  1098 00002E44 002000000020000000-
  1098 00002E4D 200000002000000020-
  1098 00002E56 000000200000002000-
  1098 00002E5F 000020000000200000-
  1098 00002E68 002000000020000000-
  1098 00002E71 200000002000000020-
  1098 00002E7A 000000200000002000-
  1098 00002E83 000020000000200000-
  1098 00002E8C 002000000020000000-
  1098 00002E95 200000002000000020-
  1098 00002E9E 000000200000002000-
  1098 00002EA7 000020000000200000-
  1098 00002EB0 002000000020000000-
  1098 00002EB9 200000002000000020-
  1098 00002EC2 000000200000002000-
  1098 00002ECB 000020000000200000-
  1098 00002ED4 002000000020000000-
  1098 00002EDD 200000002000000020-
  1098 00002EE6 000000200000002000-
  1098 00002EEF 000020000000200000-
  1098 00002EF8 002000000020000000-
  1098 00002F01 200000002000000020-
  1098 00002F0A 000000200000002000-
  1098 00002F13 000020000000200000-
  1098 00002F1C 002000000020000000-
  1098 00002F25 200000002000000020-
  1098 00002F2E 000000200000002000-
  1098 00002F37 000020000000200000-
  1098 00002F40 002000000020000000-
  1098 00002F49 200000002000000020-
  1098 00002F52 000000200000002000-
  1098 00002F5B 000020000000200000-
  1098 00002F64 002000000020000000-
  1098 00002F6D 200000002000000020-
  1098 00002F76 000000200000002000-
  1098 00002F7F 000020000000200000-
  1098 00002F88 002000000020000000-
  1098 00002F91 200000002000000020-
  1098 00002F9A 000000200000002000-
  1098 00002FA3 000020000000200000-
  1098 00002FAC 002000000020000000-
  1098 00002FB5 200000002000000020-
  1098 00002FBE 000000200000002000-
  1098 00002FC7 000020000000200000-
  1098 00002FD0 002000000020000000-
  1098 00002FD9 200000002000000020-
  1098 00002FE2 000000200000002000-
  1098 00002FEB 000020000000200000-
  1098 00002FF4 002000000020000000-
  1098 00002FFD 200000002000000020-
  1098 00003006 000000200000002000-
  1098 0000300F 000020000000200000-
  1098 00003018 002000000020000000-
  1098 00003021 200000002000000020-
  1098 0000302A 000000200000002000-
  1098 00003033 000020000000200000-
  1098 0000303C 002000000020000000-
  1098 00003045 200000002000000020-
  1098 0000304E 000000200000002000-
  1098 00003057 000020000000200000-
  1098 00003060 002000000020000000-
  1098 00003069 200000002000000020-
  1098 00003072 000000200000002000-
  1098 0000307B 000020000000200000-
  1098 00003084 002000000020000000-
  1098 0000308D 200000002000000020-
  1098 00003096 000000200000002000-
  1098 0000309F 000020000000200000-
  1098 000030A8 002000000020000000-
  1098 000030B1 200000002000000020-
  1098 000030BA 000000200000002000-
  1098 000030C3 000020000000200000-
  1098 000030CC 002000000020000000-
  1098 000030D5 200000002000000020-
  1098 000030DE 000000200000002000-
  1098 000030E7 000020000000200000-
  1098 000030F0 002000000020000000-
  1098 000030F9 200000002000000020-
  1098 00003102 000000200000002000-
  1098 0000310B 000020000000200000-
  1098 00003114 002000000020000000-
  1098 0000311D 200000002000000020-
  1098 00003126 000000200000002000-
  1098 0000312F 000020000000200000-
  1098 00003138 002000000020000000-
  1098 00003141 200000002000000020-
  1098 0000314A 000000200000002000-
  1098 00003153 000020000000200000-
  1098 0000315C 002000000020000000-
  1098 00003165 200000002000000020-
  1098 0000316E 000000200000002000-
  1098 00003177 000020000000200000-
  1098 00003180 002000000020000000-
  1098 00003189 200000002000000020-
  1098 00003192 000000200000002000-
  1098 0000319B 000020000000200000-
  1098 000031A4 002000000020000000-
  1098 000031AD 200000002000000020-
  1098 000031B6 000000200000002000-
  1098 000031BF 000020000000200000-
  1098 000031C8 002000000020000000-
  1098 000031D1 200000002000000020-
  1098 000031DA 000000200000002000-
  1098 000031E3 000020000000200000-
  1098 000031EC 002000000020000000-
  1098 000031F5 200000002000000020-
  1098 000031FE 000000200000002000-
  1098 00003207 000020000000200000-
  1098 00003210 002000000020000000-
  1098 00003219 200000002000000020-
  1098 00003222 000000200000002000-
  1098 0000322B 000020000000200000-
  1098 00003234 002000000020000000-
  1098 0000323D 200000002000000020-
  1098 00003246 000000200000002000-
  1098 0000324F 000020000000200000-
  1098 00003258 002000000020000000-
  1098 00003261 200000002000000020-
  1098 0000326A 000000200000002000-
  1098 00003273 000020000000200000-
  1098 0000327C 002000000020000000-
  1098 00003285 200000002000000020-
  1098 0000328E 000000200000002000-
  1098 00003297 000020000000200000-
  1098 000032A0 002000000020000000-
  1098 000032A9 200000002000000020-
  1098 000032B2 000000200000002000-
  1098 000032BB 000020000000200000-
  1098 000032C4 002000000020000000-
  1098 000032CD 200000002000000020-
  1098 000032D6 000000200000002000-
  1098 000032DF 000020000000200000-
  1098 000032E8 002000000020000000-
  1098 000032F1 200000002000000020-
  1098 000032FA 000000200000002000-
  1098 00003303 000020000000200000-
  1098 0000330C 002000000020000000-
  1098 00003315 200000002000000020-
  1098 0000331E 000000200000002000-
  1098 00003327 000020000000200000-
  1098 00003330 002000000020000000-
  1098 00003339 200000002000000020-
  1098 00003342 000000200000002000-
  1098 0000334B 000020000000200000-
  1098 00003354 002000000020000000-
  1098 0000335D 200000002000000020-
  1098 00003366 000000200000002000-
  1098 0000336F 000020000000200000-
  1098 00003378 002000000020000000-
  1098 00003381 200000002000000020-
  1098 0000338A 000000200000002000-
  1098 00003393 000020000000200000-
  1098 0000339C 002000000020000000-
  1098 000033A5 200000002000000020-
  1098 000033AE 000000200000002000-
  1098 000033B7 000020000000200000-
  1098 000033C0 002000000020000000-
  1098 000033C9 200000002000000020-
  1098 000033D2 000000200000002000-
  1098 000033DB 000020000000200000-
  1098 000033E4 002000000020000000-
  1098 000033ED 200000002000000020-
  1098 000033F6 000000200000002000-
  1098 000033FF 000020000000200000-
  1098 00003408 002000000020000000-
  1098 00003411 200000002000000020-
  1098 0000341A 000000200000002000-
  1098 00003423 000020000000200000-
  1098 0000342C 002000000020000000-
  1098 00003435 200000002000000020-
  1098 0000343E 000000200000002000-
  1098 00003447 000020000000200000-
  1098 00003450 002000000020000000-
  1098 00003459 200000002000000020-
  1098 00003462 000000200000002000-
  1098 0000346B 000020000000200000-
  1098 00003474 002000000020000000-
  1098 0000347D 200000002000000020-
  1098 00003486 000000200000002000-
  1098 0000348F 000020000000200000-
  1098 00003498 002000000020000000-
  1098 000034A1 200000002000000020-
  1098 000034AA 000000200000002000-
  1098 000034B3 000020000000200000-
  1098 000034BC 002000000020000000-
  1098 000034C5 200000002000000020-
  1098 000034CE 000000200000002000-
  1098 000034D7 000020000000200000-
  1098 000034E0 002000000020000000-
  1098 000034E9 200000002000000020-
  1098 000034F2 000000200000002000-
  1098 000034FB 000020000000200000-
  1098 00003504 002000000020000000-
  1098 0000350D 200000002000000020-
  1098 00003516 000000200000002000-
  1098 0000351F 000020000000200000-
  1098 00003528 002000000020000000-
  1098 00003531 200000002000000020-
  1098 0000353A 000000200000002000-
  1098 00003543 000020000000200000-
  1098 0000354C 002000000020000000-
  1098 00003555 200000002000000020-
  1098 0000355E 000000200000002000-
  1098 00003567 000020000000200000-
  1098 00003570 002000000020000000-
  1098 00003579 200000002000000020-
  1098 00003582 000000200000002000-
  1098 0000358B 000020000000200000-
  1098 00003594 002000000020000000-
  1098 0000359D 200000002000000020-
  1098 000035A6 000000200000002000-
  1098 000035AF 000020000000200000-
  1098 000035B8 002000000020000000-
  1098 000035C1 200000002000000020-
  1098 000035CA 000000200000002000-
  1098 000035D3 000020000000200000-
  1098 000035DC 002000000020000000-
  1098 000035E5 200000002000000020-
  1098 000035EE 000000200000002000-
  1098 000035F7 000020000000200000-
  1098 00003600 002000000020000000-
  1098 00003609 200000002000000020-
  1098 00003612 000000200000002000-
  1098 0000361B 000020000000200000-
  1098 00003624 002000000020000000-
  1098 0000362D 20000000           
  1100                                  font_z_screen_buf$pass:
  1101 00003631 B8[91260000]            mov eax, font_z_screen_buf
  1102 00003636 A1[95260000]            mov eax, [font_z_screen_buf+4]
  1103                                  
  1104                                  
  1105                                  ;############[fun begin]getAddrByAscii############
  1106 0000363B E955050000              jmp font_z_getAddrByAscii$pass
  1107                                  font_z_getAddrByAscii:
  1108 00003640 5D                      pop ebp
  1109                                  ;param: ascii
  1110 00003641 EB04                    jmp font_z_getAddrByAscii_ascii$pass
  1111 00003643 00000000                font_z_getAddrByAscii_ascii: dd 0
  1112                                  font_z_getAddrByAscii_ascii$pass:
  1113 00003647 58                      pop eax
  1114 00003648 A3[43360000]            mov [font_z_getAddrByAscii_ascii], eax
  1115 0000364D 55                      push ebp
  1116                                  ;########## font_z_getAddrByAscii_if#r1_$start ##########
  1117 0000364E A1[43360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1118 00003653 50                      push eax
  1119 00003654 B820000000              mov eax, 32
  1120 00003659 50                      push eax
  1121 0000365A 5B                      pop ebx
  1122 0000365B 58                      pop eax
  1123 0000365C 39D8                    cmp eax, ebx
  1124 0000365E 7407                    je font_z_getAddrByAscii_if#r1_equ#r2$true
  1125 00003660 B800000000              mov eax, 0
  1126 00003665 EB05                    jmp font_z_getAddrByAscii_if#r1_equ#r2$false
  1127                                  font_z_getAddrByAscii_if#r1_equ#r2$true:
  1128 00003667 B801000000              mov eax, 1
  1129                                  font_z_getAddrByAscii_if#r1_equ#r2$false:
  1130 0000366C 50                      push eax
  1131 0000366D 58                      pop eax
  1132 0000366E 83F800                  cmp eax, 0
  1133 00003671 740D                    je font_z_getAddrByAscii_if#r1_$else
  1134 00003673 A1[64230000]            mov eax, [font_z_space]
  1135 00003678 50                      push eax
  1136 00003679 58                      pop eax
  1137 0000367A 5D                      pop ebp
  1138 0000367B 50                      push eax
  1139 0000367C 55                      push ebp
  1140 0000367D C3                      ret
  1141 0000367E EB00                    jmp font_z_getAddrByAscii_if#r1_$end
  1142                                  font_z_getAddrByAscii_if#r1_$else:
  1143                                  font_z_getAddrByAscii_if#r1_$end:
  1144                                  ;========== font_z_getAddrByAscii_if#r1_$end ==========
  1145                                  
  1146                                  ;########## font_z_getAddrByAscii_if#r3_$start ##########
  1147 00003680 A1[43360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1148 00003685 50                      push eax
  1149 00003686 B841000000              mov eax, 65
  1150 0000368B 50                      push eax
  1151 0000368C 5B                      pop ebx
  1152 0000368D 58                      pop eax
  1153 0000368E 39D8                    cmp eax, ebx
  1154 00003690 7407                    je font_z_getAddrByAscii_if#r3_equ#r4$true
  1155 00003692 B800000000              mov eax, 0
  1156 00003697 EB05                    jmp font_z_getAddrByAscii_if#r3_equ#r4$false
  1157                                  font_z_getAddrByAscii_if#r3_equ#r4$true:
  1158 00003699 B801000000              mov eax, 1
  1159                                  font_z_getAddrByAscii_if#r3_equ#r4$false:
  1160 0000369E 50                      push eax
  1161 0000369F 58                      pop eax
  1162 000036A0 83F800                  cmp eax, 0
  1163 000036A3 740D                    je font_z_getAddrByAscii_if#r3_$else
  1164 000036A5 A1[CF060000]            mov eax, [font_z_A]
  1165 000036AA 50                      push eax
  1166 000036AB 58                      pop eax
  1167 000036AC 5D                      pop ebp
  1168 000036AD 50                      push eax
  1169 000036AE 55                      push ebp
  1170 000036AF C3                      ret
  1171 000036B0 EB00                    jmp font_z_getAddrByAscii_if#r3_$end
  1172                                  font_z_getAddrByAscii_if#r3_$else:
  1173                                  font_z_getAddrByAscii_if#r3_$end:
  1174                                  ;========== font_z_getAddrByAscii_if#r3_$end ==========
  1175                                  
  1176                                  ;########## font_z_getAddrByAscii_if#r5_$start ##########
  1177 000036B2 A1[43360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1178 000036B7 50                      push eax
  1179 000036B8 B842000000              mov eax, 66
  1180 000036BD 50                      push eax
  1181 000036BE 5B                      pop ebx
  1182 000036BF 58                      pop eax
  1183 000036C0 39D8                    cmp eax, ebx
  1184 000036C2 7407                    je font_z_getAddrByAscii_if#r5_equ#r6$true
  1185 000036C4 B800000000              mov eax, 0
  1186 000036C9 EB05                    jmp font_z_getAddrByAscii_if#r5_equ#r6$false
  1187                                  font_z_getAddrByAscii_if#r5_equ#r6$true:
  1188 000036CB B801000000              mov eax, 1
  1189                                  font_z_getAddrByAscii_if#r5_equ#r6$false:
  1190 000036D0 50                      push eax
  1191 000036D1 58                      pop eax
  1192 000036D2 83F800                  cmp eax, 0
  1193 000036D5 740D                    je font_z_getAddrByAscii_if#r5_$else
  1194 000036D7 A1[DE070000]            mov eax, [font_z_B]
  1195 000036DC 50                      push eax
  1196 000036DD 58                      pop eax
  1197 000036DE 5D                      pop ebp
  1198 000036DF 50                      push eax
  1199 000036E0 55                      push ebp
  1200 000036E1 C3                      ret
  1201 000036E2 EB00                    jmp font_z_getAddrByAscii_if#r5_$end
  1202                                  font_z_getAddrByAscii_if#r5_$else:
  1203                                  font_z_getAddrByAscii_if#r5_$end:
  1204                                  ;========== font_z_getAddrByAscii_if#r5_$end ==========
  1205                                  
  1206                                  ;########## font_z_getAddrByAscii_if#r7_$start ##########
  1207 000036E4 A1[43360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1208 000036E9 50                      push eax
  1209 000036EA B843000000              mov eax, 67
  1210 000036EF 50                      push eax
  1211 000036F0 5B                      pop ebx
  1212 000036F1 58                      pop eax
  1213 000036F2 39D8                    cmp eax, ebx
  1214 000036F4 7407                    je font_z_getAddrByAscii_if#r7_equ#r8$true
  1215 000036F6 B800000000              mov eax, 0
  1216 000036FB EB05                    jmp font_z_getAddrByAscii_if#r7_equ#r8$false
  1217                                  font_z_getAddrByAscii_if#r7_equ#r8$true:
  1218 000036FD B801000000              mov eax, 1
  1219                                  font_z_getAddrByAscii_if#r7_equ#r8$false:
  1220 00003702 50                      push eax
  1221 00003703 58                      pop eax
  1222 00003704 83F800                  cmp eax, 0
  1223 00003707 740D                    je font_z_getAddrByAscii_if#r7_$else
  1224 00003709 A1[ED080000]            mov eax, [font_z_C]
  1225 0000370E 50                      push eax
  1226 0000370F 58                      pop eax
  1227 00003710 5D                      pop ebp
  1228 00003711 50                      push eax
  1229 00003712 55                      push ebp
  1230 00003713 C3                      ret
  1231 00003714 EB00                    jmp font_z_getAddrByAscii_if#r7_$end
  1232                                  font_z_getAddrByAscii_if#r7_$else:
  1233                                  font_z_getAddrByAscii_if#r7_$end:
  1234                                  ;========== font_z_getAddrByAscii_if#r7_$end ==========
  1235                                  
  1236                                  ;########## font_z_getAddrByAscii_if#r9_$start ##########
  1237 00003716 A1[43360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1238 0000371B 50                      push eax
  1239 0000371C B844000000              mov eax, 68
  1240 00003721 50                      push eax
  1241 00003722 5B                      pop ebx
  1242 00003723 58                      pop eax
  1243 00003724 39D8                    cmp eax, ebx
  1244 00003726 7407                    je font_z_getAddrByAscii_if#r9_equ#r01$true
  1245 00003728 B800000000              mov eax, 0
  1246 0000372D EB05                    jmp font_z_getAddrByAscii_if#r9_equ#r01$false
  1247                                  font_z_getAddrByAscii_if#r9_equ#r01$true:
  1248 0000372F B801000000              mov eax, 1
  1249                                  font_z_getAddrByAscii_if#r9_equ#r01$false:
  1250 00003734 50                      push eax
  1251 00003735 58                      pop eax
  1252 00003736 83F800                  cmp eax, 0
  1253 00003739 740D                    je font_z_getAddrByAscii_if#r9_$else
  1254 0000373B A1[FC090000]            mov eax, [font_z_D]
  1255 00003740 50                      push eax
  1256 00003741 58                      pop eax
  1257 00003742 5D                      pop ebp
  1258 00003743 50                      push eax
  1259 00003744 55                      push ebp
  1260 00003745 C3                      ret
  1261 00003746 EB00                    jmp font_z_getAddrByAscii_if#r9_$end
  1262                                  font_z_getAddrByAscii_if#r9_$else:
  1263                                  font_z_getAddrByAscii_if#r9_$end:
  1264                                  ;========== font_z_getAddrByAscii_if#r9_$end ==========
  1265                                  
  1266                                  ;########## font_z_getAddrByAscii_if#r11_$start ##########
  1267 00003748 A1[43360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1268 0000374D 50                      push eax
  1269 0000374E B845000000              mov eax, 69
  1270 00003753 50                      push eax
  1271 00003754 5B                      pop ebx
  1272 00003755 58                      pop eax
  1273 00003756 39D8                    cmp eax, ebx
  1274 00003758 7407                    je font_z_getAddrByAscii_if#r11_equ#r21$true
  1275 0000375A B800000000              mov eax, 0
  1276 0000375F EB05                    jmp font_z_getAddrByAscii_if#r11_equ#r21$false
  1277                                  font_z_getAddrByAscii_if#r11_equ#r21$true:
  1278 00003761 B801000000              mov eax, 1
  1279                                  font_z_getAddrByAscii_if#r11_equ#r21$false:
  1280 00003766 50                      push eax
  1281 00003767 58                      pop eax
  1282 00003768 83F800                  cmp eax, 0
  1283 0000376B 740D                    je font_z_getAddrByAscii_if#r11_$else
  1284 0000376D A1[0B0B0000]            mov eax, [font_z_E]
  1285 00003772 50                      push eax
  1286 00003773 58                      pop eax
  1287 00003774 5D                      pop ebp
  1288 00003775 50                      push eax
  1289 00003776 55                      push ebp
  1290 00003777 C3                      ret
  1291 00003778 EB00                    jmp font_z_getAddrByAscii_if#r11_$end
  1292                                  font_z_getAddrByAscii_if#r11_$else:
  1293                                  font_z_getAddrByAscii_if#r11_$end:
  1294                                  ;========== font_z_getAddrByAscii_if#r11_$end ==========
  1295                                  
  1296                                  ;########## font_z_getAddrByAscii_if#r31_$start ##########
  1297 0000377A A1[43360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1298 0000377F 50                      push eax
  1299 00003780 B846000000              mov eax, 70
  1300 00003785 50                      push eax
  1301 00003786 5B                      pop ebx
  1302 00003787 58                      pop eax
  1303 00003788 39D8                    cmp eax, ebx
  1304 0000378A 7407                    je font_z_getAddrByAscii_if#r31_equ#r41$true
  1305 0000378C B800000000              mov eax, 0
  1306 00003791 EB05                    jmp font_z_getAddrByAscii_if#r31_equ#r41$false
  1307                                  font_z_getAddrByAscii_if#r31_equ#r41$true:
  1308 00003793 B801000000              mov eax, 1
  1309                                  font_z_getAddrByAscii_if#r31_equ#r41$false:
  1310 00003798 50                      push eax
  1311 00003799 58                      pop eax
  1312 0000379A 83F800                  cmp eax, 0
  1313 0000379D 740D                    je font_z_getAddrByAscii_if#r31_$else
  1314 0000379F A1[1A0C0000]            mov eax, [font_z_F]
  1315 000037A4 50                      push eax
  1316 000037A5 58                      pop eax
  1317 000037A6 5D                      pop ebp
  1318 000037A7 50                      push eax
  1319 000037A8 55                      push ebp
  1320 000037A9 C3                      ret
  1321 000037AA EB00                    jmp font_z_getAddrByAscii_if#r31_$end
  1322                                  font_z_getAddrByAscii_if#r31_$else:
  1323                                  font_z_getAddrByAscii_if#r31_$end:
  1324                                  ;========== font_z_getAddrByAscii_if#r31_$end ==========
  1325                                  
  1326                                  ;########## font_z_getAddrByAscii_if#r51_$start ##########
  1327 000037AC A1[43360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1328 000037B1 50                      push eax
  1329 000037B2 B847000000              mov eax, 71
  1330 000037B7 50                      push eax
  1331 000037B8 5B                      pop ebx
  1332 000037B9 58                      pop eax
  1333 000037BA 39D8                    cmp eax, ebx
  1334 000037BC 7407                    je font_z_getAddrByAscii_if#r51_equ#r61$true
  1335 000037BE B800000000              mov eax, 0
  1336 000037C3 EB05                    jmp font_z_getAddrByAscii_if#r51_equ#r61$false
  1337                                  font_z_getAddrByAscii_if#r51_equ#r61$true:
  1338 000037C5 B801000000              mov eax, 1
  1339                                  font_z_getAddrByAscii_if#r51_equ#r61$false:
  1340 000037CA 50                      push eax
  1341 000037CB 58                      pop eax
  1342 000037CC 83F800                  cmp eax, 0
  1343 000037CF 740D                    je font_z_getAddrByAscii_if#r51_$else
  1344 000037D1 A1[290D0000]            mov eax, [font_z_G]
  1345 000037D6 50                      push eax
  1346 000037D7 58                      pop eax
  1347 000037D8 5D                      pop ebp
  1348 000037D9 50                      push eax
  1349 000037DA 55                      push ebp
  1350 000037DB C3                      ret
  1351 000037DC EB00                    jmp font_z_getAddrByAscii_if#r51_$end
  1352                                  font_z_getAddrByAscii_if#r51_$else:
  1353                                  font_z_getAddrByAscii_if#r51_$end:
  1354                                  ;========== font_z_getAddrByAscii_if#r51_$end ==========
  1355                                  
  1356                                  ;########## font_z_getAddrByAscii_if#r71_$start ##########
  1357 000037DE A1[43360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1358 000037E3 50                      push eax
  1359 000037E4 B848000000              mov eax, 72
  1360 000037E9 50                      push eax
  1361 000037EA 5B                      pop ebx
  1362 000037EB 58                      pop eax
  1363 000037EC 39D8                    cmp eax, ebx
  1364 000037EE 7407                    je font_z_getAddrByAscii_if#r71_equ#r81$true
  1365 000037F0 B800000000              mov eax, 0
  1366 000037F5 EB05                    jmp font_z_getAddrByAscii_if#r71_equ#r81$false
  1367                                  font_z_getAddrByAscii_if#r71_equ#r81$true:
  1368 000037F7 B801000000              mov eax, 1
  1369                                  font_z_getAddrByAscii_if#r71_equ#r81$false:
  1370 000037FC 50                      push eax
  1371 000037FD 58                      pop eax
  1372 000037FE 83F800                  cmp eax, 0
  1373 00003801 740D                    je font_z_getAddrByAscii_if#r71_$else
  1374 00003803 A1[380E0000]            mov eax, [font_z_H]
  1375 00003808 50                      push eax
  1376 00003809 58                      pop eax
  1377 0000380A 5D                      pop ebp
  1378 0000380B 50                      push eax
  1379 0000380C 55                      push ebp
  1380 0000380D C3                      ret
  1381 0000380E EB00                    jmp font_z_getAddrByAscii_if#r71_$end
  1382                                  font_z_getAddrByAscii_if#r71_$else:
  1383                                  font_z_getAddrByAscii_if#r71_$end:
  1384                                  ;========== font_z_getAddrByAscii_if#r71_$end ==========
  1385                                  
  1386                                  ;########## font_z_getAddrByAscii_if#r91_$start ##########
  1387 00003810 A1[43360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1388 00003815 50                      push eax
  1389 00003816 B849000000              mov eax, 73
  1390 0000381B 50                      push eax
  1391 0000381C 5B                      pop ebx
  1392 0000381D 58                      pop eax
  1393 0000381E 39D8                    cmp eax, ebx
  1394 00003820 7407                    je font_z_getAddrByAscii_if#r91_equ#r02$true
  1395 00003822 B800000000              mov eax, 0
  1396 00003827 EB05                    jmp font_z_getAddrByAscii_if#r91_equ#r02$false
  1397                                  font_z_getAddrByAscii_if#r91_equ#r02$true:
  1398 00003829 B801000000              mov eax, 1
  1399                                  font_z_getAddrByAscii_if#r91_equ#r02$false:
  1400 0000382E 50                      push eax
  1401 0000382F 58                      pop eax
  1402 00003830 83F800                  cmp eax, 0
  1403 00003833 740D                    je font_z_getAddrByAscii_if#r91_$else
  1404 00003835 A1[470F0000]            mov eax, [font_z_I]
  1405 0000383A 50                      push eax
  1406 0000383B 58                      pop eax
  1407 0000383C 5D                      pop ebp
  1408 0000383D 50                      push eax
  1409 0000383E 55                      push ebp
  1410 0000383F C3                      ret
  1411 00003840 EB00                    jmp font_z_getAddrByAscii_if#r91_$end
  1412                                  font_z_getAddrByAscii_if#r91_$else:
  1413                                  font_z_getAddrByAscii_if#r91_$end:
  1414                                  ;========== font_z_getAddrByAscii_if#r91_$end ==========
  1415                                  
  1416                                  ;########## font_z_getAddrByAscii_if#r12_$start ##########
  1417 00003842 A1[43360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1418 00003847 50                      push eax
  1419 00003848 B84A000000              mov eax, 74
  1420 0000384D 50                      push eax
  1421 0000384E 5B                      pop ebx
  1422 0000384F 58                      pop eax
  1423 00003850 39D8                    cmp eax, ebx
  1424 00003852 7407                    je font_z_getAddrByAscii_if#r12_equ#r22$true
  1425 00003854 B800000000              mov eax, 0
  1426 00003859 EB05                    jmp font_z_getAddrByAscii_if#r12_equ#r22$false
  1427                                  font_z_getAddrByAscii_if#r12_equ#r22$true:
  1428 0000385B B801000000              mov eax, 1
  1429                                  font_z_getAddrByAscii_if#r12_equ#r22$false:
  1430 00003860 50                      push eax
  1431 00003861 58                      pop eax
  1432 00003862 83F800                  cmp eax, 0
  1433 00003865 740D                    je font_z_getAddrByAscii_if#r12_$else
  1434 00003867 A1[290D0000]            mov eax, [font_z_G]
  1435 0000386C 50                      push eax
  1436 0000386D 58                      pop eax
  1437 0000386E 5D                      pop ebp
  1438 0000386F 50                      push eax
  1439 00003870 55                      push ebp
  1440 00003871 C3                      ret
  1441 00003872 EB00                    jmp font_z_getAddrByAscii_if#r12_$end
  1442                                  font_z_getAddrByAscii_if#r12_$else:
  1443                                  font_z_getAddrByAscii_if#r12_$end:
  1444                                  ;========== font_z_getAddrByAscii_if#r12_$end ==========
  1445                                  
  1446                                  ;########## font_z_getAddrByAscii_if#r32_$start ##########
  1447 00003874 A1[43360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1448 00003879 50                      push eax
  1449 0000387A B84B000000              mov eax, 75
  1450 0000387F 50                      push eax
  1451 00003880 5B                      pop ebx
  1452 00003881 58                      pop eax
  1453 00003882 39D8                    cmp eax, ebx
  1454 00003884 7407                    je font_z_getAddrByAscii_if#r32_equ#r42$true
  1455 00003886 B800000000              mov eax, 0
  1456 0000388B EB05                    jmp font_z_getAddrByAscii_if#r32_equ#r42$false
  1457                                  font_z_getAddrByAscii_if#r32_equ#r42$true:
  1458 0000388D B801000000              mov eax, 1
  1459                                  font_z_getAddrByAscii_if#r32_equ#r42$false:
  1460 00003892 50                      push eax
  1461 00003893 58                      pop eax
  1462 00003894 83F800                  cmp eax, 0
  1463 00003897 740D                    je font_z_getAddrByAscii_if#r32_$else
  1464 00003899 A1[65110000]            mov eax, [font_z_K]
  1465 0000389E 50                      push eax
  1466 0000389F 58                      pop eax
  1467 000038A0 5D                      pop ebp
  1468 000038A1 50                      push eax
  1469 000038A2 55                      push ebp
  1470 000038A3 C3                      ret
  1471 000038A4 EB00                    jmp font_z_getAddrByAscii_if#r32_$end
  1472                                  font_z_getAddrByAscii_if#r32_$else:
  1473                                  font_z_getAddrByAscii_if#r32_$end:
  1474                                  ;========== font_z_getAddrByAscii_if#r32_$end ==========
  1475                                  
  1476                                  ;########## font_z_getAddrByAscii_if#r52_$start ##########
  1477 000038A6 A1[43360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1478 000038AB 50                      push eax
  1479 000038AC B84C000000              mov eax, 76
  1480 000038B1 50                      push eax
  1481 000038B2 5B                      pop ebx
  1482 000038B3 58                      pop eax
  1483 000038B4 39D8                    cmp eax, ebx
  1484 000038B6 7407                    je font_z_getAddrByAscii_if#r52_equ#r62$true
  1485 000038B8 B800000000              mov eax, 0
  1486 000038BD EB05                    jmp font_z_getAddrByAscii_if#r52_equ#r62$false
  1487                                  font_z_getAddrByAscii_if#r52_equ#r62$true:
  1488 000038BF B801000000              mov eax, 1
  1489                                  font_z_getAddrByAscii_if#r52_equ#r62$false:
  1490 000038C4 50                      push eax
  1491 000038C5 58                      pop eax
  1492 000038C6 83F800                  cmp eax, 0
  1493 000038C9 740D                    je font_z_getAddrByAscii_if#r52_$else
  1494 000038CB A1[74120000]            mov eax, [font_z_L]
  1495 000038D0 50                      push eax
  1496 000038D1 58                      pop eax
  1497 000038D2 5D                      pop ebp
  1498 000038D3 50                      push eax
  1499 000038D4 55                      push ebp
  1500 000038D5 C3                      ret
  1501 000038D6 EB00                    jmp font_z_getAddrByAscii_if#r52_$end
  1502                                  font_z_getAddrByAscii_if#r52_$else:
  1503                                  font_z_getAddrByAscii_if#r52_$end:
  1504                                  ;========== font_z_getAddrByAscii_if#r52_$end ==========
  1505                                  
  1506                                  ;########## font_z_getAddrByAscii_if#r72_$start ##########
  1507 000038D8 A1[43360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1508 000038DD 50                      push eax
  1509 000038DE B84D000000              mov eax, 77
  1510 000038E3 50                      push eax
  1511 000038E4 5B                      pop ebx
  1512 000038E5 58                      pop eax
  1513 000038E6 39D8                    cmp eax, ebx
  1514 000038E8 7407                    je font_z_getAddrByAscii_if#r72_equ#r82$true
  1515 000038EA B800000000              mov eax, 0
  1516 000038EF EB05                    jmp font_z_getAddrByAscii_if#r72_equ#r82$false
  1517                                  font_z_getAddrByAscii_if#r72_equ#r82$true:
  1518 000038F1 B801000000              mov eax, 1
  1519                                  font_z_getAddrByAscii_if#r72_equ#r82$false:
  1520 000038F6 50                      push eax
  1521 000038F7 58                      pop eax
  1522 000038F8 83F800                  cmp eax, 0
  1523 000038FB 740D                    je font_z_getAddrByAscii_if#r72_$else
  1524 000038FD A1[83130000]            mov eax, [font_z_M]
  1525 00003902 50                      push eax
  1526 00003903 58                      pop eax
  1527 00003904 5D                      pop ebp
  1528 00003905 50                      push eax
  1529 00003906 55                      push ebp
  1530 00003907 C3                      ret
  1531 00003908 EB00                    jmp font_z_getAddrByAscii_if#r72_$end
  1532                                  font_z_getAddrByAscii_if#r72_$else:
  1533                                  font_z_getAddrByAscii_if#r72_$end:
  1534                                  ;========== font_z_getAddrByAscii_if#r72_$end ==========
  1535                                  
  1536                                  ;########## font_z_getAddrByAscii_if#r92_$start ##########
  1537 0000390A A1[43360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1538 0000390F 50                      push eax
  1539 00003910 B84E000000              mov eax, 78
  1540 00003915 50                      push eax
  1541 00003916 5B                      pop ebx
  1542 00003917 58                      pop eax
  1543 00003918 39D8                    cmp eax, ebx
  1544 0000391A 7407                    je font_z_getAddrByAscii_if#r92_equ#r03$true
  1545 0000391C B800000000              mov eax, 0
  1546 00003921 EB05                    jmp font_z_getAddrByAscii_if#r92_equ#r03$false
  1547                                  font_z_getAddrByAscii_if#r92_equ#r03$true:
  1548 00003923 B801000000              mov eax, 1
  1549                                  font_z_getAddrByAscii_if#r92_equ#r03$false:
  1550 00003928 50                      push eax
  1551 00003929 58                      pop eax
  1552 0000392A 83F800                  cmp eax, 0
  1553 0000392D 740D                    je font_z_getAddrByAscii_if#r92_$else
  1554 0000392F A1[92140000]            mov eax, [font_z_N]
  1555 00003934 50                      push eax
  1556 00003935 58                      pop eax
  1557 00003936 5D                      pop ebp
  1558 00003937 50                      push eax
  1559 00003938 55                      push ebp
  1560 00003939 C3                      ret
  1561 0000393A EB00                    jmp font_z_getAddrByAscii_if#r92_$end
  1562                                  font_z_getAddrByAscii_if#r92_$else:
  1563                                  font_z_getAddrByAscii_if#r92_$end:
  1564                                  ;========== font_z_getAddrByAscii_if#r92_$end ==========
  1565                                  
  1566                                  ;########## font_z_getAddrByAscii_if#r13_$start ##########
  1567 0000393C A1[43360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1568 00003941 50                      push eax
  1569 00003942 B84F000000              mov eax, 79
  1570 00003947 50                      push eax
  1571 00003948 5B                      pop ebx
  1572 00003949 58                      pop eax
  1573 0000394A 39D8                    cmp eax, ebx
  1574 0000394C 7407                    je font_z_getAddrByAscii_if#r13_equ#r23$true
  1575 0000394E B800000000              mov eax, 0
  1576 00003953 EB05                    jmp font_z_getAddrByAscii_if#r13_equ#r23$false
  1577                                  font_z_getAddrByAscii_if#r13_equ#r23$true:
  1578 00003955 B801000000              mov eax, 1
  1579                                  font_z_getAddrByAscii_if#r13_equ#r23$false:
  1580 0000395A 50                      push eax
  1581 0000395B 58                      pop eax
  1582 0000395C 83F800                  cmp eax, 0
  1583 0000395F 740D                    je font_z_getAddrByAscii_if#r13_$else
  1584 00003961 A1[A1150000]            mov eax, [font_z_O]
  1585 00003966 50                      push eax
  1586 00003967 58                      pop eax
  1587 00003968 5D                      pop ebp
  1588 00003969 50                      push eax
  1589 0000396A 55                      push ebp
  1590 0000396B C3                      ret
  1591 0000396C EB00                    jmp font_z_getAddrByAscii_if#r13_$end
  1592                                  font_z_getAddrByAscii_if#r13_$else:
  1593                                  font_z_getAddrByAscii_if#r13_$end:
  1594                                  ;========== font_z_getAddrByAscii_if#r13_$end ==========
  1595                                  
  1596                                  ;########## font_z_getAddrByAscii_if#r33_$start ##########
  1597 0000396E A1[43360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1598 00003973 50                      push eax
  1599 00003974 B850000000              mov eax, 80
  1600 00003979 50                      push eax
  1601 0000397A 5B                      pop ebx
  1602 0000397B 58                      pop eax
  1603 0000397C 39D8                    cmp eax, ebx
  1604 0000397E 7407                    je font_z_getAddrByAscii_if#r33_equ#r43$true
  1605 00003980 B800000000              mov eax, 0
  1606 00003985 EB05                    jmp font_z_getAddrByAscii_if#r33_equ#r43$false
  1607                                  font_z_getAddrByAscii_if#r33_equ#r43$true:
  1608 00003987 B801000000              mov eax, 1
  1609                                  font_z_getAddrByAscii_if#r33_equ#r43$false:
  1610 0000398C 50                      push eax
  1611 0000398D 58                      pop eax
  1612 0000398E 83F800                  cmp eax, 0
  1613 00003991 740D                    je font_z_getAddrByAscii_if#r33_$else
  1614 00003993 A1[B0160000]            mov eax, [font_z_P]
  1615 00003998 50                      push eax
  1616 00003999 58                      pop eax
  1617 0000399A 5D                      pop ebp
  1618 0000399B 50                      push eax
  1619 0000399C 55                      push ebp
  1620 0000399D C3                      ret
  1621 0000399E EB00                    jmp font_z_getAddrByAscii_if#r33_$end
  1622                                  font_z_getAddrByAscii_if#r33_$else:
  1623                                  font_z_getAddrByAscii_if#r33_$end:
  1624                                  ;========== font_z_getAddrByAscii_if#r33_$end ==========
  1625                                  
  1626                                  ;########## font_z_getAddrByAscii_if#r53_$start ##########
  1627 000039A0 A1[43360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1628 000039A5 50                      push eax
  1629 000039A6 B851000000              mov eax, 81
  1630 000039AB 50                      push eax
  1631 000039AC 5B                      pop ebx
  1632 000039AD 58                      pop eax
  1633 000039AE 39D8                    cmp eax, ebx
  1634 000039B0 7407                    je font_z_getAddrByAscii_if#r53_equ#r63$true
  1635 000039B2 B800000000              mov eax, 0
  1636 000039B7 EB05                    jmp font_z_getAddrByAscii_if#r53_equ#r63$false
  1637                                  font_z_getAddrByAscii_if#r53_equ#r63$true:
  1638 000039B9 B801000000              mov eax, 1
  1639                                  font_z_getAddrByAscii_if#r53_equ#r63$false:
  1640 000039BE 50                      push eax
  1641 000039BF 58                      pop eax
  1642 000039C0 83F800                  cmp eax, 0
  1643 000039C3 740D                    je font_z_getAddrByAscii_if#r53_$else
  1644 000039C5 A1[BF170000]            mov eax, [font_z_Q]
  1645 000039CA 50                      push eax
  1646 000039CB 58                      pop eax
  1647 000039CC 5D                      pop ebp
  1648 000039CD 50                      push eax
  1649 000039CE 55                      push ebp
  1650 000039CF C3                      ret
  1651 000039D0 EB00                    jmp font_z_getAddrByAscii_if#r53_$end
  1652                                  font_z_getAddrByAscii_if#r53_$else:
  1653                                  font_z_getAddrByAscii_if#r53_$end:
  1654                                  ;========== font_z_getAddrByAscii_if#r53_$end ==========
  1655                                  
  1656                                  ;########## font_z_getAddrByAscii_if#r73_$start ##########
  1657 000039D2 A1[43360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1658 000039D7 50                      push eax
  1659 000039D8 B852000000              mov eax, 82
  1660 000039DD 50                      push eax
  1661 000039DE 5B                      pop ebx
  1662 000039DF 58                      pop eax
  1663 000039E0 39D8                    cmp eax, ebx
  1664 000039E2 7407                    je font_z_getAddrByAscii_if#r73_equ#r83$true
  1665 000039E4 B800000000              mov eax, 0
  1666 000039E9 EB05                    jmp font_z_getAddrByAscii_if#r73_equ#r83$false
  1667                                  font_z_getAddrByAscii_if#r73_equ#r83$true:
  1668 000039EB B801000000              mov eax, 1
  1669                                  font_z_getAddrByAscii_if#r73_equ#r83$false:
  1670 000039F0 50                      push eax
  1671 000039F1 58                      pop eax
  1672 000039F2 83F800                  cmp eax, 0
  1673 000039F5 740D                    je font_z_getAddrByAscii_if#r73_$else
  1674 000039F7 A1[CE180000]            mov eax, [font_z_R]
  1675 000039FC 50                      push eax
  1676 000039FD 58                      pop eax
  1677 000039FE 5D                      pop ebp
  1678 000039FF 50                      push eax
  1679 00003A00 55                      push ebp
  1680 00003A01 C3                      ret
  1681 00003A02 EB00                    jmp font_z_getAddrByAscii_if#r73_$end
  1682                                  font_z_getAddrByAscii_if#r73_$else:
  1683                                  font_z_getAddrByAscii_if#r73_$end:
  1684                                  ;========== font_z_getAddrByAscii_if#r73_$end ==========
  1685                                  
  1686                                  ;########## font_z_getAddrByAscii_if#r93_$start ##########
  1687 00003A04 A1[43360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1688 00003A09 50                      push eax
  1689 00003A0A B853000000              mov eax, 83
  1690 00003A0F 50                      push eax
  1691 00003A10 5B                      pop ebx
  1692 00003A11 58                      pop eax
  1693 00003A12 39D8                    cmp eax, ebx
  1694 00003A14 7407                    je font_z_getAddrByAscii_if#r93_equ#r04$true
  1695 00003A16 B800000000              mov eax, 0
  1696 00003A1B EB05                    jmp font_z_getAddrByAscii_if#r93_equ#r04$false
  1697                                  font_z_getAddrByAscii_if#r93_equ#r04$true:
  1698 00003A1D B801000000              mov eax, 1
  1699                                  font_z_getAddrByAscii_if#r93_equ#r04$false:
  1700 00003A22 50                      push eax
  1701 00003A23 58                      pop eax
  1702 00003A24 83F800                  cmp eax, 0
  1703 00003A27 740D                    je font_z_getAddrByAscii_if#r93_$else
  1704 00003A29 A1[DD190000]            mov eax, [font_z_S]
  1705 00003A2E 50                      push eax
  1706 00003A2F 58                      pop eax
  1707 00003A30 5D                      pop ebp
  1708 00003A31 50                      push eax
  1709 00003A32 55                      push ebp
  1710 00003A33 C3                      ret
  1711 00003A34 EB00                    jmp font_z_getAddrByAscii_if#r93_$end
  1712                                  font_z_getAddrByAscii_if#r93_$else:
  1713                                  font_z_getAddrByAscii_if#r93_$end:
  1714                                  ;========== font_z_getAddrByAscii_if#r93_$end ==========
  1715                                  
  1716                                  ;########## font_z_getAddrByAscii_if#r14_$start ##########
  1717 00003A36 A1[43360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1718 00003A3B 50                      push eax
  1719 00003A3C B854000000              mov eax, 84
  1720 00003A41 50                      push eax
  1721 00003A42 5B                      pop ebx
  1722 00003A43 58                      pop eax
  1723 00003A44 39D8                    cmp eax, ebx
  1724 00003A46 7407                    je font_z_getAddrByAscii_if#r14_equ#r24$true
  1725 00003A48 B800000000              mov eax, 0
  1726 00003A4D EB05                    jmp font_z_getAddrByAscii_if#r14_equ#r24$false
  1727                                  font_z_getAddrByAscii_if#r14_equ#r24$true:
  1728 00003A4F B801000000              mov eax, 1
  1729                                  font_z_getAddrByAscii_if#r14_equ#r24$false:
  1730 00003A54 50                      push eax
  1731 00003A55 58                      pop eax
  1732 00003A56 83F800                  cmp eax, 0
  1733 00003A59 740D                    je font_z_getAddrByAscii_if#r14_$else
  1734 00003A5B A1[EC1A0000]            mov eax, [font_z_T]
  1735 00003A60 50                      push eax
  1736 00003A61 58                      pop eax
  1737 00003A62 5D                      pop ebp
  1738 00003A63 50                      push eax
  1739 00003A64 55                      push ebp
  1740 00003A65 C3                      ret
  1741 00003A66 EB00                    jmp font_z_getAddrByAscii_if#r14_$end
  1742                                  font_z_getAddrByAscii_if#r14_$else:
  1743                                  font_z_getAddrByAscii_if#r14_$end:
  1744                                  ;========== font_z_getAddrByAscii_if#r14_$end ==========
  1745                                  
  1746                                  ;########## font_z_getAddrByAscii_if#r34_$start ##########
  1747 00003A68 A1[43360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1748 00003A6D 50                      push eax
  1749 00003A6E B855000000              mov eax, 85
  1750 00003A73 50                      push eax
  1751 00003A74 5B                      pop ebx
  1752 00003A75 58                      pop eax
  1753 00003A76 39D8                    cmp eax, ebx
  1754 00003A78 7407                    je font_z_getAddrByAscii_if#r34_equ#r44$true
  1755 00003A7A B800000000              mov eax, 0
  1756 00003A7F EB05                    jmp font_z_getAddrByAscii_if#r34_equ#r44$false
  1757                                  font_z_getAddrByAscii_if#r34_equ#r44$true:
  1758 00003A81 B801000000              mov eax, 1
  1759                                  font_z_getAddrByAscii_if#r34_equ#r44$false:
  1760 00003A86 50                      push eax
  1761 00003A87 58                      pop eax
  1762 00003A88 83F800                  cmp eax, 0
  1763 00003A8B 740D                    je font_z_getAddrByAscii_if#r34_$else
  1764 00003A8D A1[FB1B0000]            mov eax, [font_z_U]
  1765 00003A92 50                      push eax
  1766 00003A93 58                      pop eax
  1767 00003A94 5D                      pop ebp
  1768 00003A95 50                      push eax
  1769 00003A96 55                      push ebp
  1770 00003A97 C3                      ret
  1771 00003A98 EB00                    jmp font_z_getAddrByAscii_if#r34_$end
  1772                                  font_z_getAddrByAscii_if#r34_$else:
  1773                                  font_z_getAddrByAscii_if#r34_$end:
  1774                                  ;========== font_z_getAddrByAscii_if#r34_$end ==========
  1775                                  
  1776                                  ;########## font_z_getAddrByAscii_if#r54_$start ##########
  1777 00003A9A A1[43360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1778 00003A9F 50                      push eax
  1779 00003AA0 B856000000              mov eax, 86
  1780 00003AA5 50                      push eax
  1781 00003AA6 5B                      pop ebx
  1782 00003AA7 58                      pop eax
  1783 00003AA8 39D8                    cmp eax, ebx
  1784 00003AAA 7407                    je font_z_getAddrByAscii_if#r54_equ#r64$true
  1785 00003AAC B800000000              mov eax, 0
  1786 00003AB1 EB05                    jmp font_z_getAddrByAscii_if#r54_equ#r64$false
  1787                                  font_z_getAddrByAscii_if#r54_equ#r64$true:
  1788 00003AB3 B801000000              mov eax, 1
  1789                                  font_z_getAddrByAscii_if#r54_equ#r64$false:
  1790 00003AB8 50                      push eax
  1791 00003AB9 58                      pop eax
  1792 00003ABA 83F800                  cmp eax, 0
  1793 00003ABD 740D                    je font_z_getAddrByAscii_if#r54_$else
  1794 00003ABF A1[0A1D0000]            mov eax, [font_z_V]
  1795 00003AC4 50                      push eax
  1796 00003AC5 58                      pop eax
  1797 00003AC6 5D                      pop ebp
  1798 00003AC7 50                      push eax
  1799 00003AC8 55                      push ebp
  1800 00003AC9 C3                      ret
  1801 00003ACA EB00                    jmp font_z_getAddrByAscii_if#r54_$end
  1802                                  font_z_getAddrByAscii_if#r54_$else:
  1803                                  font_z_getAddrByAscii_if#r54_$end:
  1804                                  ;========== font_z_getAddrByAscii_if#r54_$end ==========
  1805                                  
  1806                                  ;########## font_z_getAddrByAscii_if#r74_$start ##########
  1807 00003ACC A1[43360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1808 00003AD1 50                      push eax
  1809 00003AD2 B857000000              mov eax, 87
  1810 00003AD7 50                      push eax
  1811 00003AD8 5B                      pop ebx
  1812 00003AD9 58                      pop eax
  1813 00003ADA 39D8                    cmp eax, ebx
  1814 00003ADC 7407                    je font_z_getAddrByAscii_if#r74_equ#r84$true
  1815 00003ADE B800000000              mov eax, 0
  1816 00003AE3 EB05                    jmp font_z_getAddrByAscii_if#r74_equ#r84$false
  1817                                  font_z_getAddrByAscii_if#r74_equ#r84$true:
  1818 00003AE5 B801000000              mov eax, 1
  1819                                  font_z_getAddrByAscii_if#r74_equ#r84$false:
  1820 00003AEA 50                      push eax
  1821 00003AEB 58                      pop eax
  1822 00003AEC 83F800                  cmp eax, 0
  1823 00003AEF 740D                    je font_z_getAddrByAscii_if#r74_$else
  1824 00003AF1 A1[191E0000]            mov eax, [font_z_W]
  1825 00003AF6 50                      push eax
  1826 00003AF7 58                      pop eax
  1827 00003AF8 5D                      pop ebp
  1828 00003AF9 50                      push eax
  1829 00003AFA 55                      push ebp
  1830 00003AFB C3                      ret
  1831 00003AFC EB00                    jmp font_z_getAddrByAscii_if#r74_$end
  1832                                  font_z_getAddrByAscii_if#r74_$else:
  1833                                  font_z_getAddrByAscii_if#r74_$end:
  1834                                  ;========== font_z_getAddrByAscii_if#r74_$end ==========
  1835                                  
  1836                                  ;########## font_z_getAddrByAscii_if#r94_$start ##########
  1837 00003AFE A1[43360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1838 00003B03 50                      push eax
  1839 00003B04 B858000000              mov eax, 88
  1840 00003B09 50                      push eax
  1841 00003B0A 5B                      pop ebx
  1842 00003B0B 58                      pop eax
  1843 00003B0C 39D8                    cmp eax, ebx
  1844 00003B0E 7407                    je font_z_getAddrByAscii_if#r94_equ#r05$true
  1845 00003B10 B800000000              mov eax, 0
  1846 00003B15 EB05                    jmp font_z_getAddrByAscii_if#r94_equ#r05$false
  1847                                  font_z_getAddrByAscii_if#r94_equ#r05$true:
  1848 00003B17 B801000000              mov eax, 1
  1849                                  font_z_getAddrByAscii_if#r94_equ#r05$false:
  1850 00003B1C 50                      push eax
  1851 00003B1D 58                      pop eax
  1852 00003B1E 83F800                  cmp eax, 0
  1853 00003B21 740D                    je font_z_getAddrByAscii_if#r94_$else
  1854 00003B23 A1[281F0000]            mov eax, [font_z_X]
  1855 00003B28 50                      push eax
  1856 00003B29 58                      pop eax
  1857 00003B2A 5D                      pop ebp
  1858 00003B2B 50                      push eax
  1859 00003B2C 55                      push ebp
  1860 00003B2D C3                      ret
  1861 00003B2E EB00                    jmp font_z_getAddrByAscii_if#r94_$end
  1862                                  font_z_getAddrByAscii_if#r94_$else:
  1863                                  font_z_getAddrByAscii_if#r94_$end:
  1864                                  ;========== font_z_getAddrByAscii_if#r94_$end ==========
  1865                                  
  1866                                  ;########## font_z_getAddrByAscii_if#r15_$start ##########
  1867 00003B30 A1[43360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1868 00003B35 50                      push eax
  1869 00003B36 B859000000              mov eax, 89
  1870 00003B3B 50                      push eax
  1871 00003B3C 5B                      pop ebx
  1872 00003B3D 58                      pop eax
  1873 00003B3E 39D8                    cmp eax, ebx
  1874 00003B40 7407                    je font_z_getAddrByAscii_if#r15_equ#r25$true
  1875 00003B42 B800000000              mov eax, 0
  1876 00003B47 EB05                    jmp font_z_getAddrByAscii_if#r15_equ#r25$false
  1877                                  font_z_getAddrByAscii_if#r15_equ#r25$true:
  1878 00003B49 B801000000              mov eax, 1
  1879                                  font_z_getAddrByAscii_if#r15_equ#r25$false:
  1880 00003B4E 50                      push eax
  1881 00003B4F 58                      pop eax
  1882 00003B50 83F800                  cmp eax, 0
  1883 00003B53 740D                    je font_z_getAddrByAscii_if#r15_$else
  1884 00003B55 A1[37200000]            mov eax, [font_z_Y]
  1885 00003B5A 50                      push eax
  1886 00003B5B 58                      pop eax
  1887 00003B5C 5D                      pop ebp
  1888 00003B5D 50                      push eax
  1889 00003B5E 55                      push ebp
  1890 00003B5F C3                      ret
  1891 00003B60 EB00                    jmp font_z_getAddrByAscii_if#r15_$end
  1892                                  font_z_getAddrByAscii_if#r15_$else:
  1893                                  font_z_getAddrByAscii_if#r15_$end:
  1894                                  ;========== font_z_getAddrByAscii_if#r15_$end ==========
  1895                                  
  1896                                  ;########## font_z_getAddrByAscii_if#r35_$start ##########
  1897 00003B62 A1[43360000]            mov eax, [font_z_getAddrByAscii_ascii]
  1898 00003B67 50                      push eax
  1899 00003B68 B85A000000              mov eax, 90
  1900 00003B6D 50                      push eax
  1901 00003B6E 5B                      pop ebx
  1902 00003B6F 58                      pop eax
  1903 00003B70 39D8                    cmp eax, ebx
  1904 00003B72 7407                    je font_z_getAddrByAscii_if#r35_equ#r45$true
  1905 00003B74 B800000000              mov eax, 0
  1906 00003B79 EB05                    jmp font_z_getAddrByAscii_if#r35_equ#r45$false
  1907                                  font_z_getAddrByAscii_if#r35_equ#r45$true:
  1908 00003B7B B801000000              mov eax, 1
  1909                                  font_z_getAddrByAscii_if#r35_equ#r45$false:
  1910 00003B80 50                      push eax
  1911 00003B81 58                      pop eax
  1912 00003B82 83F800                  cmp eax, 0
  1913 00003B85 740D                    je font_z_getAddrByAscii_if#r35_$else
  1914 00003B87 A1[46210000]            mov eax, [font_z_Z]
  1915 00003B8C 50                      push eax
  1916 00003B8D 58                      pop eax
  1917 00003B8E 5D                      pop ebp
  1918 00003B8F 50                      push eax
  1919 00003B90 55                      push ebp
  1920 00003B91 C3                      ret
  1921 00003B92 EB00                    jmp font_z_getAddrByAscii_if#r35_$end
  1922                                  font_z_getAddrByAscii_if#r35_$else:
  1923                                  font_z_getAddrByAscii_if#r35_$end:
  1924                                  ;========== font_z_getAddrByAscii_if#r35_$end ==========
  1925                                  
  1926 00003B94 C3                      ret
  1927                                  font_z_getAddrByAscii$pass:
  1928                                  ;============[fun end]getAddrByAscii=============
  1929                                  
  1930                                  
  1931                                  
  1932                                  ;############[fun begin]rect############
  1933 00003B95 E91C010000              jmp test_z_rect$pass
  1934                                  test_z_rect:
  1935 00003B9A 5D                      pop ebp
  1936                                  ;param: addrVram
  1937 00003B9B EB04                    jmp test_z_rect_addrVram$pass
  1938 00003B9D 00000000                test_z_rect_addrVram: dd 0
  1939                                  test_z_rect_addrVram$pass:
  1940 00003BA1 58                      pop eax
  1941 00003BA2 A3[9D3B0000]            mov [test_z_rect_addrVram], eax
  1942                                  ;param: top
  1943 00003BA7 EB04                    jmp test_z_rect_top$pass
  1944 00003BA9 00000000                test_z_rect_top: dd 0
  1945                                  test_z_rect_top$pass:
  1946 00003BAD 58                      pop eax
  1947 00003BAE A3[A93B0000]            mov [test_z_rect_top], eax
  1948                                  ;param: left
  1949 00003BB3 EB04                    jmp test_z_rect_left$pass
  1950 00003BB5 00000000                test_z_rect_left: dd 0
  1951                                  test_z_rect_left$pass:
  1952 00003BB9 58                      pop eax
  1953 00003BBA A3[B53B0000]            mov [test_z_rect_left], eax
  1954 00003BBF 55                      push ebp
  1955 00003BC0 B800000000              mov eax, 0
  1956 00003BC5 50                      push eax
  1957 00003BC6 EB04                    jmp test_z_rect_x$pass
  1958 00003BC8 00000000                test_z_rect_x: dd 0
  1959                                  test_z_rect_x$pass:
  1960 00003BCC 58                      pop eax
  1961 00003BCD A3[C83B0000]            mov [test_z_rect_x], eax
  1962                                  
  1963 00003BD2 B800000000              mov eax, 0
  1964 00003BD7 50                      push eax
  1965 00003BD8 EB04                    jmp test_z_rect_y$pass
  1966 00003BDA 00000000                test_z_rect_y: dd 0
  1967                                  test_z_rect_y$pass:
  1968 00003BDE 58                      pop eax
  1969 00003BDF A3[DA3B0000]            mov [test_z_rect_y], eax
  1970                                  
  1971                                  ;########## test_z_rect_while#r1_$start ##########
  1972                                  test_z_rect_while#r1_$start:
  1973 00003BE4 A1[DA3B0000]            mov eax, [test_z_rect_y]
  1974 00003BE9 50                      push eax
  1975 00003BEA B808000000              mov eax, 8
  1976 00003BEF 50                      push eax
  1977 00003BF0 5B                      pop ebx
  1978 00003BF1 58                      pop eax
  1979 00003BF2 39D8                    cmp eax, ebx
  1980 00003BF4 7607                    jbe test_z_rect_while#r1_leq#r2$true
  1981 00003BF6 B800000000              mov eax, 0
  1982 00003BFB EB05                    jmp test_z_rect_while#r1_leq#r2$false
  1983                                  test_z_rect_while#r1_leq#r2$true:
  1984 00003BFD B801000000              mov eax, 1
  1985                                  test_z_rect_while#r1_leq#r2$false:
  1986 00003C02 50                      push eax
  1987 00003C03 58                      pop eax
  1988 00003C04 83F800                  cmp eax, 0
  1989 00003C07 0F84A8000000            je test_z_rect_while#r1_$end
  1990                                  ;########## test_z_rect_while#r1_while#r3_$start ##########
  1991                                  test_z_rect_while#r1_while#r3_$start:
  1992 00003C0D A1[C83B0000]            mov eax, [test_z_rect_x]
  1993 00003C12 50                      push eax
  1994 00003C13 B808000000              mov eax, 8
  1995 00003C18 50                      push eax
  1996 00003C19 5B                      pop ebx
  1997 00003C1A 58                      pop eax
  1998 00003C1B 39D8                    cmp eax, ebx
  1999 00003C1D 7607                    jbe test_z_rect_while#r1_while#r3_leq#r4$true
  2000 00003C1F B800000000              mov eax, 0
  2001 00003C24 EB05                    jmp test_z_rect_while#r1_while#r3_leq#r4$false
  2002                                  test_z_rect_while#r1_while#r3_leq#r4$true:
  2003 00003C26 B801000000              mov eax, 1
  2004                                  test_z_rect_while#r1_while#r3_leq#r4$false:
  2005 00003C2B 50                      push eax
  2006 00003C2C 58                      pop eax
  2007 00003C2D 83F800                  cmp eax, 0
  2008 00003C30 7467                    je test_z_rect_while#r1_while#r3_$end
  2009 00003C32 B803000000              mov eax, 3
  2010 00003C37 50                      push eax
  2011 00003C38 EB04                    jmp test_z_rect_while#r1_while#r3_color$pass
  2012 00003C3A 00000000                test_z_rect_while#r1_while#r3_color: dd 0
  2013                                  test_z_rect_while#r1_while#r3_color$pass:
  2014 00003C3E 58                      pop eax
  2015 00003C3F A3[3A3C0000]            mov [test_z_rect_while#r1_while#r3_color], eax
  2016                                  
  2017 00003C44 A1[B53B0000]            mov eax, [test_z_rect_left]
  2018 00003C49 50                      push eax
  2019 00003C4A A1[C83B0000]            mov eax, [test_z_rect_x]
  2020 00003C4F 50                      push eax
  2021 00003C50 58                      pop eax
  2022 00003C51 5B                      pop ebx
  2023 00003C52 01D8                    add eax, ebx
  2024 00003C54 50                      push eax
  2025 00003C55 A1[A93B0000]            mov eax, [test_z_rect_top]
  2026 00003C5A 50                      push eax
  2027 00003C5B A1[DA3B0000]            mov eax, [test_z_rect_y]
  2028 00003C60 50                      push eax
  2029 00003C61 58                      pop eax
  2030 00003C62 5B                      pop ebx
  2031 00003C63 01D8                    add eax, ebx
  2032 00003C65 50                      push eax
  2033 00003C66 A1[3A3C0000]            mov eax, [test_z_rect_while#r1_while#r3_color]
  2034 00003C6B 50                      push eax
  2035 00003C6C B840010000              mov eax, 320
  2036 00003C71 50                      push eax
  2037 00003C72 A1[9D3B0000]            mov eax, [test_z_rect_addrVram]
  2038 00003C77 50                      push eax
  2039 00003C78 E8AAC4FFFF              call draw_z_pixel
  2040                                  
  2041 00003C7D A1[C83B0000]            mov eax, [test_z_rect_x]
  2042 00003C82 50                      push eax
  2043 00003C83 B801000000              mov eax, 1
  2044 00003C88 50                      push eax
  2045 00003C89 58                      pop eax
  2046 00003C8A 5B                      pop ebx
  2047 00003C8B 01D8                    add eax, ebx
  2048 00003C8D 50                      push eax
  2049 00003C8E 58                      pop eax
  2050 00003C8F A3[C83B0000]            mov [test_z_rect_x], eax
  2051 00003C94 E974FFFFFF              jmp test_z_rect_while#r1_while#r3_$start
  2052                                  test_z_rect_while#r1_while#r3_$end:
  2053                                  ;========== test_z_rect_while#r1_while#r3_$end ==========
  2054                                  
  2055 00003C99 A1[DA3B0000]            mov eax, [test_z_rect_y]
  2056 00003C9E 50                      push eax
  2057 00003C9F B801000000              mov eax, 1
  2058 00003CA4 50                      push eax
  2059 00003CA5 58                      pop eax
  2060 00003CA6 5B                      pop ebx
  2061 00003CA7 01D8                    add eax, ebx
  2062 00003CA9 50                      push eax
  2063 00003CAA 58                      pop eax
  2064 00003CAB A3[DA3B0000]            mov [test_z_rect_y], eax
  2065 00003CB0 E92FFFFFFF              jmp test_z_rect_while#r1_$start
  2066                                  test_z_rect_while#r1_$end:
  2067                                  ;========== test_z_rect_while#r1_$end ==========
  2068                                  
  2069 00003CB5 C3                      ret
  2070                                  test_z_rect$pass:
  2071                                  ;============[fun end]rect=============
  2072                                  
  2073                                  
  2074                                  ;############[fun begin]block############
  2075 00003CB6 E982000000              jmp test_z_block$pass
  2076                                  test_z_block:
  2077 00003CBB 5D                      pop ebp
  2078                                  ;param: addrVram
  2079 00003CBC EB04                    jmp test_z_block_addrVram$pass
  2080 00003CBE 00000000                test_z_block_addrVram: dd 0
  2081                                  test_z_block_addrVram$pass:
  2082 00003CC2 58                      pop eax
  2083 00003CC3 A3[BE3C0000]            mov [test_z_block_addrVram], eax
  2084 00003CC8 55                      push ebp
  2085 00003CC9 B800000000              mov eax, 0
  2086 00003CCE 50                      push eax
  2087 00003CCF EB04                    jmp test_z_block_i$pass
  2088 00003CD1 00000000                test_z_block_i: dd 0
  2089                                  test_z_block_i$pass:
  2090 00003CD5 58                      pop eax
  2091 00003CD6 A3[D13C0000]            mov [test_z_block_i], eax
  2092                                  
  2093                                  ;########## test_z_block_while#r5_$start ##########
  2094                                  test_z_block_while#r5_$start:
  2095 00003CDB A1[D13C0000]            mov eax, [test_z_block_i]
  2096 00003CE0 50                      push eax
  2097 00003CE1 B82C010000              mov eax, 300
  2098 00003CE6 50                      push eax
  2099 00003CE7 5B                      pop ebx
  2100 00003CE8 58                      pop eax
  2101 00003CE9 39D8                    cmp eax, ebx
  2102 00003CEB 7207                    jb test_z_block_while#r5_les#r6$true
  2103 00003CED B800000000              mov eax, 0
  2104 00003CF2 EB05                    jmp test_z_block_while#r5_les#r6$false
  2105                                  test_z_block_while#r5_les#r6$true:
  2106 00003CF4 B801000000              mov eax, 1
  2107                                  test_z_block_while#r5_les#r6$false:
  2108 00003CF9 50                      push eax
  2109 00003CFA 58                      pop eax
  2110 00003CFB 83F800                  cmp eax, 0
  2111 00003CFE 743C                    je test_z_block_while#r5_$end
  2112 00003D00 A1[D13C0000]            mov eax, [test_z_block_i]
  2113 00003D05 50                      push eax
  2114 00003D06 A1[D13C0000]            mov eax, [test_z_block_i]
  2115 00003D0B 50                      push eax
  2116 00003D0C A1[D13C0000]            mov eax, [test_z_block_i]
  2117 00003D11 50                      push eax
  2118 00003D12 B840010000              mov eax, 320
  2119 00003D17 50                      push eax
  2120 00003D18 A1[BE3C0000]            mov eax, [test_z_block_addrVram]
  2121 00003D1D 50                      push eax
  2122 00003D1E E804C4FFFF              call draw_z_pixel
  2123                                  
  2124 00003D23 A1[D13C0000]            mov eax, [test_z_block_i]
  2125 00003D28 50                      push eax
  2126 00003D29 B801000000              mov eax, 1
  2127 00003D2E 50                      push eax
  2128 00003D2F 58                      pop eax
  2129 00003D30 5B                      pop ebx
  2130 00003D31 01D8                    add eax, ebx
  2131 00003D33 50                      push eax
  2132 00003D34 58                      pop eax
  2133 00003D35 A3[D13C0000]            mov [test_z_block_i], eax
  2134 00003D3A EB9F                    jmp test_z_block_while#r5_$start
  2135                                  test_z_block_while#r5_$end:
  2136                                  ;========== test_z_block_while#r5_$end ==========
  2137                                  
  2138 00003D3C C3                      ret
  2139                                  test_z_block$pass:
  2140                                  ;============[fun end]block=============
  2141                                  
  2142                                  
  2143                                  ;############[fun begin]draw############
  2144 00003D3D EB1A                    jmp test_z_draw$pass
  2145                                  test_z_draw:
  2146 00003D3F 5D                      pop ebp
  2147                                  ;param: addrVram
  2148 00003D40 EB04                    jmp test_z_draw_addrVram$pass
  2149 00003D42 00000000                test_z_draw_addrVram: dd 0
  2150                                  test_z_draw_addrVram$pass:
  2151 00003D46 58                      pop eax
  2152 00003D47 A3[423D0000]            mov [test_z_draw_addrVram], eax
  2153 00003D4C 55                      push ebp
  2154 00003D4D A1[423D0000]            mov eax, [test_z_draw_addrVram]
  2155 00003D52 50                      push eax
  2156 00003D53 E863FFFFFF              call test_z_block
  2157                                  
  2158 00003D58 C3                      ret
  2159                                  test_z_draw$pass:
  2160                                  ;============[fun end]draw=============
  2161                                  
  2162                                  
  2163 00003D59 EB55                    jmp main
  2164                                  
  2165                                  limit_low equ 0
  2166                                  base_low equ 2 
  2167                                  base_mid equ 4 
  2168                                  access_right equ 5
  2169                                  limit_high equ 6 
  2170                                  base_high equ 7 
  2171                                  	
  2172 00003D5B ??????????              ALIGNB	16
  2173                                  GDTR:
  2174 00003D60 FFFF                    		DW 8*8192-1 ; 最后一个字节的偏移
  2175 00003D62 00002700                		DD 0x270000 ; 表的地址
  2176                                  
  2177                                  ; esi是将要填入的地址，就是GDT表的地址，例如Addr_GDT+1*8, Addr_GDT+2*8
  2178                                  ; eax是基地址，是代码的
  2179                                  ; ebx是控制参数和限制 24+8 4位扩展(自动填上)20位限长8位参数
  2180                                  ;     高4位参数 高4位限制 低16位限制 8位参数 = 32位ebx
  2181                                  ; 实际上高4位参数被自己固定掉了
  2182                                  ; 因此用一个常量代替比较好
  2183                                  ; 设置GDT内容
  2184                                  ; kernel.z\setGDT(addr: dword, param1: dword, param2: dword)
  2185                                  setGDT:
  2186 00003D66 5D                        pop ebp
  2187 00003D67 5B                        pop ebx
  2188 00003D68 58                        pop eax
  2189 00003D69 5E                        pop esi
  2190 00003D6A 55                        push ebp
  2191 00003D6B 66894602                	mov [esi+base_low],  ax ; 基地址的低16位
  2192 00003D6F C1E810                  	shr eax, 16
  2193 00003D72 884604                  	mov [esi+base_mid], al ; 8位，1个字节
  2194 00003D75 886607                  	mov [esi+base_high], ah
  2195                                  	; 下面是限制与权限设置
  2196 00003D78 885E05                  	mov [esi+access_right], bl;8位参数
  2197                                  	; 0x00 未使用的记录表
  2198                                  	; 0x92 系统模式，可读写不可执行
  2199                                  	; 0x9a 系统模式，可执行可读不可写
  2200                                  	; 0xf2 应用模式，可读写不可执行
  2201                                  	; 0xfa 应用模式，可执行可读不可写
  2202 00003D7B C1EB08                  	shr ebx, 8
  2203 00003D7E 66891E                  	mov [esi+limit_low], bx ; 限制的低16位
  2204 00003D81 C1EB10                  	shr ebx, 16
  2205 00003D84 80CBC0                  	or  bl, 0xc0 ; 0xc0=11000000
  2206 00003D87 80E3CF                  	and bl, 0xcf ; 规定好前4位为1100，0x11001111
  2207 00003D8A 885E06                  	mov [esi+limit_high], bl ; 4位参数+4位段限长，高4位被称为扩展访问权，参数固定为
  2208                                  	; G=1(开启4K),D/B=1(32位段),0(固定),AVL=0(也是默认的)这4位在386前是没有的
  2209                                  	; 因此注意limit在这里被规定为24位长，其中高四位是扩展访问权，是固定的
  2210 00003D8D C3                      ret 
  2211                                  
  2212                                  ; 加载GDT
  2213                                  ; kernel.z\loadGDT()
  2214                                  loadGDT:
  2215 00003D8E 0F0115[603D0000]          lgdt [GDTR] ; 不加dword会警告，因为现在的标签的确从0开始的
  2216 00003D95 C3                      ret
  2217                                  
  2218                                  ; 读写内存
  2219                                  ; kernel.z\setMem.1byte(val:dword, addr:dword)
  2220                                  kernel_z_setMem_1byte:
  2221 00003D96 5D                        pop ebp
  2222 00003D97 5B                        pop ebx
  2223 00003D98 58                        pop eax
  2224 00003D99 55                        push ebp
  2225 00003D9A 8803                      mov [ebx], al
  2226 00003D9C C3                      ret
  2227                                  
  2228                                  ; kernel.z\setMem.2byte(val:dword, addr:dword)
  2229                                  kernel_z_setMem_2byte:
  2230 00003D9D 5D                        pop ebp
  2231 00003D9E 5B                        pop ebx
  2232 00003D9F 58                        pop eax
  2233 00003DA0 55                        push ebp
  2234 00003DA1 668903                    mov [ebx], ax
  2235 00003DA4 C3                      ret
  2236                                  
  2237                                  ; kernel.z\setMem.4byte(val:dword, addr:dword)
  2238                                  kernel_z_setMem_4byte:
  2239 00003DA5 5D                        pop ebp
  2240 00003DA6 5B                        pop ebx
  2241 00003DA7 58                        pop eax
  2242 00003DA8 55                        push ebp
  2243 00003DA9 8903                      mov [ebx], eax
  2244 00003DAB C3                      ret
  2245                                  
  2246                                  ; kernel.z\halt()
  2247                                  kernel_z_halt:
  2248 00003DAC F4                        hlt
  2249 00003DAD C3                      ret
  2250 00003DAE 3412                    TESTA: DW 0x1234
  2251                                  ; 主进程入口
  2252                                  main:
  2253                                  
  2254                                    ; 测试用
  2255 00003DB0 9BDBE3                    finit
  2256 00003DB3 D905[AE3D0000]            fld DWORD [TESTA]
  2257 00003DB9 D900                      fld DWORD [eax]
  2258 00003DBB DCC1                      fadd to st1
  2259                                  
  2260 00003DBD E8BEC2FFFF                call main_z_run_once
  2261                                    .loop:
  2262 00003DC2 E8C9C2FFFF                  call main_z_run_loop
  2263 00003DC7 EBF9                      jmp .loop
  2264                                  
