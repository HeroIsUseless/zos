     1                                  [bits 32]
     2                                  ORG 0x280000
     3 00000000 B840010000              mov eax, 320
     4 00000005 50                      push eax
     5 00000006 EB04                    jmp main_z_screenWidth$next
     6 00000008 00000000                main_z_screenWidth: dd 0
     7                                  main_z_screenWidth$next:
     8 0000000C 58                      pop eax
     9 0000000D A3[08000000]            mov [main_z_screenWidth], eax
    10 00000012 B8C8000000              mov eax, 200
    11 00000017 50                      push eax
    12 00000018 EB04                    jmp main_z_screenHeight$next
    13 0000001A 00000000                main_z_screenHeight: dd 0
    14                                  main_z_screenHeight$next:
    15 0000001E 58                      pop eax
    16 0000001F A3[1A000000]            mov [main_z_screenHeight], eax
    17 00000024 B800000A00              mov eax, 0x000a0000
    18 00000029 50                      push eax
    19 0000002A EB04                    jmp main_z_addrVram$next
    20 0000002C 00000000                main_z_addrVram: dd 0
    21                                  main_z_addrVram$next:
    22 00000030 58                      pop eax
    23 00000031 A3[2C000000]            mov [main_z_addrVram], eax
    24 00000036 B800E02400              mov eax, 0x0024e000
    25 0000003B 50                      push eax
    26 0000003C EB04                    jmp main_z_addrPM$next
    27 0000003E 00000000                main_z_addrPM: dd 0
    28                                  main_z_addrPM$next:
    29 00000042 58                      pop eax
    30 00000043 A3[3E000000]            mov [main_z_addrPM], eax
    31 00000048 B800E02600              mov eax, 0x0026e000
    32 0000004D 50                      push eax
    33 0000004E EB04                    jmp main_z_addrPDT$next
    34 00000050 00000000                main_z_addrPDT: dd 0
    35                                  main_z_addrPDT$next:
    36 00000054 58                      pop eax
    37 00000055 A3[50000000]            mov [main_z_addrPDT], eax
    38 0000005A B800F82600              mov eax, 0x0026f800
    39 0000005F 50                      push eax
    40 00000060 EB04                    jmp main_z_addrIDT$next
    41 00000062 00000000                main_z_addrIDT: dd 0
    42                                  main_z_addrIDT$next:
    43 00000066 58                      pop eax
    44 00000067 A3[62000000]            mov [main_z_addrIDT], eax
    45 0000006C B800002700              mov eax, 0x00270000
    46 00000071 50                      push eax
    47 00000072 EB04                    jmp main_z_addrGDT$next
    48 00000074 00000000                main_z_addrGDT: dd 0
    49                                  main_z_addrGDT$next:
    50 00000078 58                      pop eax
    51 00000079 A3[74000000]            mov [main_z_addrGDT], eax
    52                                  
    53                                  ;function
    54 0000007E EB0E                    jmp main_z_run_once$next
    55                                  main_z_run_once:
    56 00000080 5D                      pop ebp
    57 00000081 55                      push ebp
    58 00000082 A1[2C000000]            mov eax, [main_z_addrVram]
    59 00000087 50                      push eax
    60 00000088 E8C3010000              call test_z_draw
    61 0000008D C3                      ret
    62                                  main_z_run_once$next:
    63                                  
    64                                  ;function
    65 0000008E EB08                    jmp main_z_run_loop$next
    66                                  main_z_run_loop:
    67 00000090 5D                      pop ebp
    68 00000091 55                      push ebp
    69 00000092 E829030000              call kernel_z_halt
    70 00000097 C3                      ret
    71                                  main_z_run_loop$next:
    72                                  
    73                                  ;function
    74 00000098 EB2C                    jmp memory_z_set_1byte$next
    75                                  memory_z_set_1byte:
    76                                  ;param
    77 0000009A EB04                    jmp memory_z_set_1byte_val$next
    78 0000009C 00000000                memory_z_set_1byte_val: dd 0
    79                                  memory_z_set_1byte_val$next:
    80                                  ;param
    81 000000A0 EB04                    jmp memory_z_set_1byte_addr$next
    82 000000A2 00000000                memory_z_set_1byte_addr: dd 0
    83                                  memory_z_set_1byte_addr$next:
    84 000000A6 5D                      pop ebp
    85 000000A7 58                      pop eax
    86 000000A8 A3[A2000000]            mov [memory_z_set_1byte_addr], eax
    87 000000AD 58                      pop eax
    88 000000AE A3[9C000000]            mov [memory_z_set_1byte_val], eax
    89 000000B3 55                      push ebp
    90 000000B4 A1[9C000000]            mov eax, [memory_z_set_1byte_val]
    91 000000B9 50                      push eax
    92 000000BA A1[A2000000]            mov eax, [memory_z_set_1byte_addr]
    93 000000BF 50                      push eax
    94 000000C0 E8E5020000              call kernel_z_setMem_1byte
    95 000000C5 C3                      ret
    96                                  memory_z_set_1byte$next:
    97                                  
    98                                  ;function
    99 000000C6 EB2C                    jmp memory_z_set_2byte$next
   100                                  memory_z_set_2byte:
   101                                  ;param
   102 000000C8 EB04                    jmp memory_z_set_2byte_val$next
   103 000000CA 00000000                memory_z_set_2byte_val: dd 0
   104                                  memory_z_set_2byte_val$next:
   105                                  ;param
   106 000000CE EB04                    jmp memory_z_set_2byte_addr$next
   107 000000D0 00000000                memory_z_set_2byte_addr: dd 0
   108                                  memory_z_set_2byte_addr$next:
   109 000000D4 5D                      pop ebp
   110 000000D5 58                      pop eax
   111 000000D6 A3[D0000000]            mov [memory_z_set_2byte_addr], eax
   112 000000DB 58                      pop eax
   113 000000DC A3[CA000000]            mov [memory_z_set_2byte_val], eax
   114 000000E1 55                      push ebp
   115 000000E2 A1[CA000000]            mov eax, [memory_z_set_2byte_val]
   116 000000E7 50                      push eax
   117 000000E8 A1[D0000000]            mov eax, [memory_z_set_2byte_addr]
   118 000000ED 50                      push eax
   119 000000EE E8BE020000              call kernel_z_setMem_2byte
   120 000000F3 C3                      ret
   121                                  memory_z_set_2byte$next:
   122                                  
   123                                  ;function
   124 000000F4 E983000000              jmp draw_z_pixel$next
   125                                  draw_z_pixel:
   126                                  ;param
   127 000000F9 EB04                    jmp draw_z_pixel_x$next
   128 000000FB 00000000                draw_z_pixel_x: dd 0
   129                                  draw_z_pixel_x$next:
   130                                  ;param
   131 000000FF EB04                    jmp draw_z_pixel_y$next
   132 00000101 00000000                draw_z_pixel_y: dd 0
   133                                  draw_z_pixel_y$next:
   134                                  ;param
   135 00000105 EB04                    jmp draw_z_pixel_color$next
   136 00000107 00000000                draw_z_pixel_color: dd 0
   137                                  draw_z_pixel_color$next:
   138                                  ;param
   139 0000010B EB04                    jmp draw_z_pixel_screenWidth$next
   140 0000010D 00000000                draw_z_pixel_screenWidth: dd 0
   141                                  draw_z_pixel_screenWidth$next:
   142                                  ;param
   143 00000111 EB04                    jmp draw_z_pixel_vramAddr$next
   144 00000113 00000000                draw_z_pixel_vramAddr: dd 0
   145                                  draw_z_pixel_vramAddr$next:
   146 00000117 5D                      pop ebp
   147 00000118 58                      pop eax
   148 00000119 A3[13010000]            mov [draw_z_pixel_vramAddr], eax
   149 0000011E 58                      pop eax
   150 0000011F A3[0D010000]            mov [draw_z_pixel_screenWidth], eax
   151 00000124 58                      pop eax
   152 00000125 A3[07010000]            mov [draw_z_pixel_color], eax
   153 0000012A 58                      pop eax
   154 0000012B A3[01010000]            mov [draw_z_pixel_y], eax
   155 00000130 58                      pop eax
   156 00000131 A3[FB000000]            mov [draw_z_pixel_x], eax
   157 00000136 55                      push ebp
   158 00000137 A1[01010000]            mov eax, [draw_z_pixel_y]
   159 0000013C 50                      push eax
   160 0000013D A1[0D010000]            mov eax, [draw_z_pixel_screenWidth]
   161 00000142 50                      push eax
   162 00000143 58                      pop eax
   163 00000144 5B                      pop ebx
   164 00000145 F7E3                    mul ebx
   165 00000147 50                      push eax
   166 00000148 A1[FB000000]            mov eax, [draw_z_pixel_x]
   167 0000014D 50                      push eax
   168 0000014E 58                      pop eax
   169 0000014F 5B                      pop ebx
   170 00000150 01D8                    add eax, ebx
   171 00000152 50                      push eax
   172 00000153 A1[13010000]            mov eax, [draw_z_pixel_vramAddr]
   173 00000158 50                      push eax
   174 00000159 58                      pop eax
   175 0000015A 5B                      pop ebx
   176 0000015B 01D8                    add eax, ebx
   177 0000015D 50                      push eax
   178 0000015E EB04                    jmp draw_z_pixel_addr$next
   179 00000160 00000000                draw_z_pixel_addr: dd 0
   180                                  draw_z_pixel_addr$next:
   181 00000164 58                      pop eax
   182 00000165 A3[60010000]            mov [draw_z_pixel_addr], eax
   183 0000016A A1[07010000]            mov eax, [draw_z_pixel_color]
   184 0000016F 50                      push eax
   185 00000170 A1[60010000]            mov eax, [draw_z_pixel_addr]
   186 00000175 50                      push eax
   187 00000176 E81FFFFFFF              call memory_z_set_1byte
   188 0000017B C3                      ret
   189                                  draw_z_pixel$next:
   190                                  
   191                                  ;function
   192 0000017C E9CA000000              jmp draw_z_hLine$next
   193                                  draw_z_hLine:
   194                                  ;param
   195 00000181 EB04                    jmp draw_z_hLine_bx$next
   196 00000183 00000000                draw_z_hLine_bx: dd 0
   197                                  draw_z_hLine_bx$next:
   198                                  ;param
   199 00000187 EB04                    jmp draw_z_hLine_by$next
   200 00000189 00000000                draw_z_hLine_by: dd 0
   201                                  draw_z_hLine_by$next:
   202                                  ;param
   203 0000018D EB04                    jmp draw_z_hLine_ex$next
   204 0000018F 00000000                draw_z_hLine_ex: dd 0
   205                                  draw_z_hLine_ex$next:
   206                                  ;param
   207 00000193 EB04                    jmp draw_z_hLine_ey$next
   208 00000195 00000000                draw_z_hLine_ey: dd 0
   209                                  draw_z_hLine_ey$next:
   210                                  ;param
   211 00000199 EB04                    jmp draw_z_hLine_color$next
   212 0000019B 00000000                draw_z_hLine_color: dd 0
   213                                  draw_z_hLine_color$next:
   214                                  ;param
   215 0000019F EB04                    jmp draw_z_hLine_screenWidth$next
   216 000001A1 00000000                draw_z_hLine_screenWidth: dd 0
   217                                  draw_z_hLine_screenWidth$next:
   218                                  ;param
   219 000001A5 EB04                    jmp draw_z_hLine_vramAddr$next
   220 000001A7 00000000                draw_z_hLine_vramAddr: dd 0
   221                                  draw_z_hLine_vramAddr$next:
   222 000001AB 5D                      pop ebp
   223 000001AC 58                      pop eax
   224 000001AD A3[A7010000]            mov [draw_z_hLine_vramAddr], eax
   225 000001B2 58                      pop eax
   226 000001B3 A3[A1010000]            mov [draw_z_hLine_screenWidth], eax
   227 000001B8 58                      pop eax
   228 000001B9 A3[9B010000]            mov [draw_z_hLine_color], eax
   229 000001BE 58                      pop eax
   230 000001BF A3[95010000]            mov [draw_z_hLine_ey], eax
   231 000001C4 58                      pop eax
   232 000001C5 A3[8F010000]            mov [draw_z_hLine_ex], eax
   233 000001CA 58                      pop eax
   234 000001CB A3[89010000]            mov [draw_z_hLine_by], eax
   235 000001D0 58                      pop eax
   236 000001D1 A3[83010000]            mov [draw_z_hLine_bx], eax
   237 000001D6 55                      push ebp
   238 000001D7 A1[83010000]            mov eax, [draw_z_hLine_bx]
   239 000001DC 50                      push eax
   240 000001DD EB04                    jmp draw_z_hLine_i$next
   241 000001DF 00000000                draw_z_hLine_i: dd 0
   242                                  draw_z_hLine_i$next:
   243 000001E3 58                      pop eax
   244 000001E4 A3[DF010000]            mov [draw_z_hLine_i], eax
   245                                  ; while start
   246                                  draw_z_hLine_while$1_start:
   247 000001E9 A1[DF010000]            mov eax, [draw_z_hLine_i]
   248 000001EE 50                      push eax
   249 000001EF A1[8F010000]            mov eax, [draw_z_hLine_ex]
   250 000001F4 50                      push eax
   251 000001F5 5B                      pop ebx
   252 000001F6 58                      pop eax
   253 000001F7 39D8                    cmp eax, ebx
   254 000001F9 7607                    jbe draw_z_hLine_while$1_lessequal@true$1
   255 000001FB B800000000              mov eax, 0
   256 00000200 EB05                    jmp draw_z_hLine_while$1_lessequal@false$1
   257                                  draw_z_hLine_while$1_lessequal@true$1:
   258 00000202 B801000000              mov eax, 1
   259                                  draw_z_hLine_while$1_lessequal@false$1:
   260 00000207 50                      push eax
   261 00000208 58                      pop eax
   262 00000209 83F800                  cmp eax, 0
   263 0000020C 743C                    je draw_z_hLine_while$1_end
   264 0000020E A1[DF010000]            mov eax, [draw_z_hLine_i]
   265 00000213 50                      push eax
   266 00000214 A1[89010000]            mov eax, [draw_z_hLine_by]
   267 00000219 50                      push eax
   268 0000021A A1[9B010000]            mov eax, [draw_z_hLine_color]
   269 0000021F 50                      push eax
   270 00000220 A1[A1010000]            mov eax, [draw_z_hLine_screenWidth]
   271 00000225 50                      push eax
   272 00000226 A1[A7010000]            mov eax, [draw_z_hLine_vramAddr]
   273 0000022B 50                      push eax
   274 0000022C E8C8FEFFFF              call draw_z_pixel
   275 00000231 A1[DF010000]            mov eax, [draw_z_hLine_i]
   276 00000236 50                      push eax
   277 00000237 B801000000              mov eax, 1
   278 0000023C 50                      push eax
   279 0000023D 58                      pop eax
   280 0000023E 5B                      pop ebx
   281 0000023F 01D8                    add eax, ebx
   282 00000241 50                      push eax
   283 00000242 58                      pop eax
   284 00000243 A3[DF010000]            mov [draw_z_hLine_i], eax
   285 00000248 EB9F                    jmp draw_z_hLine_while$1_start
   286                                  draw_z_hLine_while$1_end:
   287                                  ;while end
   288 0000024A C3                      ret
   289                                  draw_z_hLine$next:
   290                                  
   291                                  ;function
   292 0000024B E958010000              jmp test_z_draw$next
   293                                  test_z_draw:
   294                                  ;param
   295 00000250 EB04                    jmp test_z_draw_addrVram$next
   296 00000252 00000000                test_z_draw_addrVram: dd 0
   297                                  test_z_draw_addrVram$next:
   298 00000256 5D                      pop ebp
   299 00000257 58                      pop eax
   300 00000258 A3[52020000]            mov [test_z_draw_addrVram], eax
   301 0000025D 55                      push ebp
   302 0000025E B800000000              mov eax, 0
   303 00000263 50                      push eax
   304 00000264 EB04                    jmp test_z_draw_i$next
   305 00000266 00000000                test_z_draw_i: dd 0
   306                                  test_z_draw_i$next:
   307 0000026A 58                      pop eax
   308 0000026B A3[66020000]            mov [test_z_draw_i], eax
   309                                  ; while start
   310                                  test_z_draw_while$1_start:
   311 00000270 A1[66020000]            mov eax, [test_z_draw_i]
   312 00000275 50                      push eax
   313 00000276 B82C010000              mov eax, 300
   314 0000027B 50                      push eax
   315 0000027C 5B                      pop ebx
   316 0000027D 58                      pop eax
   317 0000027E 39D8                    cmp eax, ebx
   318 00000280 7207                    jb test_z_draw_while$1_less@true$1
   319 00000282 B800000000              mov eax, 0
   320 00000287 EB05                    jmp test_z_draw_while$1_less@false$1
   321                                  test_z_draw_while$1_less@true$1:
   322 00000289 B801000000              mov eax, 1
   323                                  test_z_draw_while$1_less@false$1:
   324 0000028E 50                      push eax
   325 0000028F 58                      pop eax
   326 00000290 83F800                  cmp eax, 0
   327 00000293 743C                    je test_z_draw_while$1_end
   328 00000295 A1[66020000]            mov eax, [test_z_draw_i]
   329 0000029A 50                      push eax
   330 0000029B A1[66020000]            mov eax, [test_z_draw_i]
   331 000002A0 50                      push eax
   332 000002A1 A1[66020000]            mov eax, [test_z_draw_i]
   333 000002A6 50                      push eax
   334 000002A7 B840010000              mov eax, 320
   335 000002AC 50                      push eax
   336 000002AD A1[52020000]            mov eax, [test_z_draw_addrVram]
   337 000002B2 50                      push eax
   338 000002B3 E841FEFFFF              call draw_z_pixel
   339 000002B8 A1[66020000]            mov eax, [test_z_draw_i]
   340 000002BD 50                      push eax
   341 000002BE B801000000              mov eax, 1
   342 000002C3 50                      push eax
   343 000002C4 58                      pop eax
   344 000002C5 5B                      pop ebx
   345 000002C6 01D8                    add eax, ebx
   346 000002C8 50                      push eax
   347 000002C9 58                      pop eax
   348 000002CA A3[66020000]            mov [test_z_draw_i], eax
   349 000002CF EB9F                    jmp test_z_draw_while$1_start
   350                                  test_z_draw_while$1_end:
   351                                  ;while end
   352 000002D1 B800000000              mov eax, 0
   353 000002D6 50                      push eax
   354 000002D7 EB04                    jmp test_z_draw_x$next
   355 000002D9 00000000                test_z_draw_x: dd 0
   356                                  test_z_draw_x$next:
   357 000002DD 58                      pop eax
   358 000002DE A3[D9020000]            mov [test_z_draw_x], eax
   359 000002E3 B800000000              mov eax, 0
   360 000002E8 50                      push eax
   361 000002E9 EB04                    jmp test_z_draw_y$next
   362 000002EB 00000000                test_z_draw_y: dd 0
   363                                  test_z_draw_y$next:
   364 000002EF 58                      pop eax
   365 000002F0 A3[EB020000]            mov [test_z_draw_y], eax
   366                                  ; while start
   367                                  test_z_draw_while$2_start:
   368 000002F5 A1[EB020000]            mov eax, [test_z_draw_y]
   369 000002FA 50                      push eax
   370 000002FB B8C8000000              mov eax, 200
   371 00000300 50                      push eax
   372 00000301 5B                      pop ebx
   373 00000302 58                      pop eax
   374 00000303 39D8                    cmp eax, ebx
   375 00000305 7607                    jbe test_z_draw_while$2_lessequal@true$2
   376 00000307 B800000000              mov eax, 0
   377 0000030C EB05                    jmp test_z_draw_while$2_lessequal@false$2
   378                                  test_z_draw_while$2_lessequal@true$2:
   379 0000030E B801000000              mov eax, 1
   380                                  test_z_draw_while$2_lessequal@false$2:
   381 00000313 50                      push eax
   382 00000314 58                      pop eax
   383 00000315 83F800                  cmp eax, 0
   384 00000318 0F8489000000            je test_z_draw_while$2_end
   385 0000031E B800000000              mov eax, 0
   386 00000323 50                      push eax
   387 00000324 58                      pop eax
   388 00000325 A3[D9020000]            mov [test_z_draw_x], eax
   389                                  ; while start
   390                                  test_z_draw_while$2_while$1_start:
   391 0000032A A1[D9020000]            mov eax, [test_z_draw_x]
   392 0000032F 50                      push eax
   393 00000330 B840010000              mov eax, 320
   394 00000335 50                      push eax
   395 00000336 5B                      pop ebx
   396 00000337 58                      pop eax
   397 00000338 39D8                    cmp eax, ebx
   398 0000033A 7607                    jbe test_z_draw_while$2_while$1_lessequal@true$3
   399 0000033C B800000000              mov eax, 0
   400 00000341 EB05                    jmp test_z_draw_while$2_while$1_lessequal@false$3
   401                                  test_z_draw_while$2_while$1_lessequal@true$3:
   402 00000343 B801000000              mov eax, 1
   403                                  test_z_draw_while$2_while$1_lessequal@false$3:
   404 00000348 50                      push eax
   405 00000349 58                      pop eax
   406 0000034A 83F800                  cmp eax, 0
   407 0000034D 743C                    je test_z_draw_while$2_while$1_end
   408 0000034F A1[D9020000]            mov eax, [test_z_draw_x]
   409 00000354 50                      push eax
   410 00000355 A1[EB020000]            mov eax, [test_z_draw_y]
   411 0000035A 50                      push eax
   412 0000035B A1[EB020000]            mov eax, [test_z_draw_y]
   413 00000360 50                      push eax
   414 00000361 B840010000              mov eax, 320
   415 00000366 50                      push eax
   416 00000367 A1[52020000]            mov eax, [test_z_draw_addrVram]
   417 0000036C 50                      push eax
   418 0000036D E887FDFFFF              call draw_z_pixel
   419 00000372 A1[D9020000]            mov eax, [test_z_draw_x]
   420 00000377 50                      push eax
   421 00000378 B801000000              mov eax, 1
   422 0000037D 50                      push eax
   423 0000037E 58                      pop eax
   424 0000037F 5B                      pop ebx
   425 00000380 01D8                    add eax, ebx
   426 00000382 50                      push eax
   427 00000383 58                      pop eax
   428 00000384 A3[D9020000]            mov [test_z_draw_x], eax
   429 00000389 EB9F                    jmp test_z_draw_while$2_while$1_start
   430                                  test_z_draw_while$2_while$1_end:
   431                                  ;while end
   432 0000038B A1[EB020000]            mov eax, [test_z_draw_y]
   433 00000390 50                      push eax
   434 00000391 B801000000              mov eax, 1
   435 00000396 50                      push eax
   436 00000397 58                      pop eax
   437 00000398 5B                      pop ebx
   438 00000399 01D8                    add eax, ebx
   439 0000039B 50                      push eax
   440 0000039C 58                      pop eax
   441 0000039D A3[EB020000]            mov [test_z_draw_y], eax
   442 000003A2 E94EFFFFFF              jmp test_z_draw_while$2_start
   443                                  test_z_draw_while$2_end:
   444                                  ;while end
   445 000003A7 C3                      ret
   446                                  test_z_draw$next:
   447 000003A8 EB18                    jmp main
   448                                  
   449                                  ; 读写内存
   450                                  ; kernel.z\setMem.1byte(val:dword, addr:dword)
   451                                  kernel_z_setMem_1byte:
   452 000003AA 5D                        pop ebp
   453 000003AB 5B                        pop ebx
   454 000003AC 58                        pop eax
   455 000003AD 55                        push ebp
   456 000003AE 8803                      mov [ebx], al
   457 000003B0 C3                      ret
   458                                  
   459                                  ; kernel.z\setMem.2byte(val:dword, addr:dword)
   460                                  kernel_z_setMem_2byte:
   461 000003B1 5D                        pop ebp
   462 000003B2 5B                        pop ebx
   463 000003B3 58                        pop eax
   464 000003B4 55                        push ebp
   465 000003B5 668903                    mov [ebx], ax
   466 000003B8 C3                      ret
   467                                  
   468                                  ; kernel.z\setMem.4byte(val:dword, addr:dword)
   469                                  kernel_z_setMem_4byte:
   470 000003B9 5D                        pop ebp
   471 000003BA 5B                        pop ebx
   472 000003BB 58                        pop eax
   473 000003BC 55                        push ebp
   474 000003BD 8903                      mov [ebx], eax
   475 000003BF C3                      ret
   476                                  
   477                                  ; kernel.z\halt()
   478                                  kernel_z_halt:
   479 000003C0 F4                        hlt
   480 000003C1 C3                      ret
   481                                  
   482                                  main:
   483 000003C2 E8B9FCFFFF                call main_z_run_once
   484                                    .loop:
   485 000003C7 E8C4FCFFFF                  call main_z_run_loop
   486 000003CC EBF9                      jmp .loop
   487                                  
